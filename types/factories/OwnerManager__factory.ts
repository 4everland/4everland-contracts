/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OwnerManager, OwnerManagerInterface } from "../OwnerManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "ChangedThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b60806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e67e2b1161005b578063a0e67e2b146100d3578063e318b52b146100e8578063e75235b8146100fb578063f8dc5dd91461010b57600080fd5b80630d582f13146100825780632f54bf6e14610097578063694e80c3146100c0575b600080fd5b6100956100903660046107bf565b61011e565b005b6100aa6100a53660046107fc565b61027a565b6040516100b7919061082f565b60405180910390f35b6100956100ce36600461083d565b6102b5565b6100db610340565b6040516100b791906108c4565b6100956100f63660046108dc565b610430565b6002546040516100b79190610932565b610095610119366004610940565b610605565b61012661075a565b6001600160a01b0382161580159061014857506001600160a01b038216600114155b801561015d57506001600160a01b0382163014155b6101825760405162461bcd60e51b8152600401610179906109a5565b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101ba5760405162461bcd60e51b8152600401610179906109d1565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03858116808552604085208054929093166001600160a01b03199283161790925560018085528354909116909117909155805491610228836109f7565b91905055507f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea268260405161025c9190610a12565b60405180910390a1806002541461027657610276816102b5565b5050565b60006001600160a01b0382166001148015906102af57506001600160a01b038281166000908152602081905260409020541615155b92915050565b6102bd61075a565b6001548111156102df5760405162461bcd60e51b815260040161017990610a3c565b60018110156103005760405162461bcd60e51b815260040161017990610a68565b60028190556040517f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c9390610335908390610932565b60405180910390a150565b6060600060015467ffffffffffffffff81111561035f5761035f610a78565b604051908082528060200260200182016040528015610388578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b03811660011461042857808383815181106103e9576103e9610a8e565b6001600160a01b039283166020918202929092018101919091529181166000908152918290526040909120541681610420816109f7565b9250506103c5565b509092915050565b61043861075a565b6001600160a01b0381161580159061045a57506001600160a01b038116600114155b801561046f57506001600160a01b0381163014155b61048b5760405162461bcd60e51b8152600401610179906109a5565b6001600160a01b0381811660009081526020819052604090205416156104c35760405162461bcd60e51b8152600401610179906109d1565b6001600160a01b038216158015906104e557506001600160a01b038216600114155b6105015760405162461bcd60e51b8152600401610179906109a5565b6001600160a01b0383811660009081526020819052604090205481169083161461053d5760405162461bcd60e51b815260040161017990610ac0565b6001600160a01b03828116600081815260208190526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095559290915281549092169055517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf906105c1908490610a12565b60405180910390a17f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea26816040516105f89190610a12565b60405180910390a1505050565b61060d61075a565b806001805461061c9190610ad0565b101561063a5760405162461bcd60e51b815260040161017990610a3c565b6001600160a01b0382161580159061065c57506001600160a01b038216600114155b6106785760405162461bcd60e51b8152600401610179906109a5565b6001600160a01b038381166000908152602081905260409020548116908316146106b45760405162461bcd60e51b815260040161017990610ac0565b6001600160a01b03828116600081815260208190526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600180549161070783610ae7565b91905055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf8260405161073b9190610a12565b60405180910390a1806002541461075557610755816102b5565b505050565b3330146107795760405162461bcd60e51b815260040161017990610b1a565b565b60006001600160a01b0382166102af565b6107958161077b565b81146107a057600080fd5b50565b80356102af8161078c565b80610795565b80356102af816107ae565b600080604083850312156107d5576107d5600080fd5b60006107e185856107a3565b92505060206107f2858286016107b4565b9150509250929050565b60006020828403121561081157610811600080fd5b600061081d84846107a3565b949350505050565b8015155b82525050565b602081016102af8284610825565b60006020828403121561085257610852600080fd5b600061081d84846107b4565b6108298161077b565b6000610873838361085e565b505060200190565b6000610885825190565b80845260209384019383018060005b838110156108b95781516108a88882610867565b975060208301925050600101610894565b509495945050505050565b602080825281016108d5818461087b565b9392505050565b6000806000606084860312156108f4576108f4600080fd5b600061090086866107a3565b9350506020610911868287016107a3565b9250506040610922868287016107a3565b9150509250925092565b80610829565b602081016102af828461092c565b60008060006060848603121561095857610958600080fd5b600061096486866107a3565b9350506020610975868287016107a3565b9250506040610922868287016107b4565b6005815260006020820164475332303360d81b815291505b5060200190565b602080825281016102af81610986565b600581526000602082016411d4cc8c0d60da1b8152915061099e565b602080825281016102af816109b5565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610a0b57610a0b6109e1565b5060010190565b602081016102af828461085e565b6005815260006020820164475332303160d81b8152915061099e565b602080825281016102af81610a20565b600581526000602082016423a999181960d91b8152915061099e565b602080825281016102af81610a4c565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6005815260006020820164475332303560d81b8152915061099e565b602080825281016102af81610aa4565b600082821015610ae257610ae26109e1565b500390565b600081610af657610af66109e1565b506000190190565b6005815260006020820164475330333160d81b8152915061099e565b602080825281016102af81610afe56fea26469706673582212207eaa6d393bccccf454aeccb56514f8ce3f1701f8f1dbf00693bfe66593857eeb64736f6c63430008090033";

export class OwnerManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnerManager> {
    return super.deploy(overrides || {}) as Promise<OwnerManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnerManager {
    return super.attach(address) as OwnerManager;
  }
  connect(signer: Signer): OwnerManager__factory {
    return super.connect(signer) as OwnerManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerManagerInterface {
    return new utils.Interface(_abi) as OwnerManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerManager {
    return new Contract(address, _abi, signerOrProvider) as OwnerManager;
  }
}
