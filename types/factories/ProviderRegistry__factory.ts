/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProviderRegistry,
  ProviderRegistryInterface,
} from "../ProviderRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "AddProivderWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "AddProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "RemoveProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "RemoveProviderWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "addProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "addWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "isProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "providerWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "providerWalletExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "removeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200010460201b620007cd1760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b8152600401620000829062000113565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000fd576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890620000f49060019062000189565b60405180910390a15b5062000199565b6001600160a01b03163b151590565b602080825281016200016681602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000166565b62000183816200016c565b82525050565b6020810162000166828462000178565b6115d080620001a96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063efeb5f1f11610066578063efeb5f1f146101c7578063f2fde38b146101da578063f887ea40146101ed578063f90cef781461021357600080fd5b80638da5cb5b1461016c578063a75fe8e114610186578063d82945191461019957600080fd5b8063238a4d1e146100d457806346e2577a146100fd578063485cc955146101125780636b074a0714610125578063715018a6146101515780638a355a5714610159575b600080fd5b6100e76100e2366004610ed8565b610226565b6040516100f49190610f4d565b60405180910390f35b61011061010b366004610f5b565b61027c565b005b610110610120366004610f9b565b61033a565b6100e7610133366004610f5b565b6001600160a01b031660009081526065602052604090205460ff1690565b610110610415565b610110610167366004610f5b565b610429565b6033546001600160a01b03165b6040516100f49190610fe1565b610110610194366004610f5b565b6104e3565b6100e76101a7366004610f5b565b6001600160a01b0390811660009081526066602052604090205416151590565b6101106101d5366004610f5b565b61060f565b6101106101e8366004610f5b565b61073b565b600054610206906201000090046001600160a01b031681565b6040516100f4919061101f565b610179610221366004610f5b565b610775565b6001600160a01b03831660009081526065602052604081205460ff166102675760405162461bcd60e51b815260040161025e90611073565b60405180910390fd5b6102728484846107dc565b90505b9392505050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663945391126040518163ffffffff1660e01b815260040160206040518083038186803b1580156102cb57600080fd5b505afa1580156102df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610303919061108e565b9050336001600160a01b0382161461032d5760405162461bcd60e51b815260040161025e906110f7565b6103368261091e565b5050565b600054610100900460ff161580801561035a5750600054600160ff909116105b806103745750303b158015610374575060005460ff166001145b6103905760405162461bcd60e51b815260040161025e90611152565b6000805460ff1916600117905580156103b3576000805461ff0019166101001790555b6103bc836109b5565b6103c582610a07565b8015610410576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061040790600190611176565b60405180910390a15b505050565b61041d610a37565b61042760006109b5565b565b60008060029054906101000a90046001600160a01b03166001600160a01b031663945391126040518163ffffffff1660e01b815260040160206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b0919061108e565b9050336001600160a01b038216146104da5760405162461bcd60e51b815260040161025e906110f7565b61033682610a61565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a919061108e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610599903390600401610fe1565b60206040518083038186803b1580156105b157600080fd5b505afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611197565b6106055760405162461bcd60e51b815260040161025e906111fe565b6103363383610ae9565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561065e57600080fd5b505afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610696919061108e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906106c5903390600401610fe1565b60206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611197565b6107315760405162461bcd60e51b815260040161025e906111fe565b6103363383610b84565b610743610a37565b6001600160a01b0381166107695760405162461bcd60e51b815260040161025e90611251565b610772816109b5565b50565b6001600160a01b038082166000908152606660205260408120549091166107ae5760405162461bcd60e51b815260040161025e906112ab565b506001600160a01b039081166000908152606660205260409020541690565b6001600160a01b03163b151590565b60008060006107eb8585610c1d565b90925090506000816004811115610804576108046112bb565b1480156108225750856001600160a01b0316826001600160a01b0316145b1561083257600192505050610275565b600080876001600160a01b0316631626ba7e60e01b888860405160240161085a929190611339565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610898919061137b565b600060405180830381855afa9150503d80600081146108d3576040519150601f19603f3d011682016040523d82523d6000602084013e6108d8565b606091505b50915091508180156108eb575080516020145b801561091257508051630b135d3f60e11b906109109083016020908101908401611392565b145b98975050505050505050565b6001600160a01b03811660009081526065602052604090205460ff16156109575760405162461bcd60e51b815260040161025e906113f2565b6001600160a01b03811660009081526065602052604090819020805460ff19166001179055517f635a554d7028e977037c71e4fefb0d02f19e160c13f01f813a18d362b4605c6d906109aa908390610fe1565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610a2e5760405162461bcd60e51b815260040161025e9061144a565b61077281610c63565b6033546001600160a01b031633146104275760405162461bcd60e51b815260040161025e9061148f565b6001600160a01b03811660009081526065602052604090205460ff16610a995760405162461bcd60e51b815260040161025e90611073565b6001600160a01b03811660009081526065602052604090819020805460ff19169055517f8ab468b9f8f57e82f33d9a1742c03768ff84410a4911e8647bfa641826876904906109aa908390610fe1565b6001600160a01b0380831660009081526066602052604090205416610b205760405162461bcd60e51b815260040161025e906112ab565b6001600160a01b0382166000908152606660205260409081902080546001600160a01b0319169055517f7a573913cf794a4333bbb2d808419316d0c2906f8d819634301a4125554067a990610b78908490849061149f565b60405180910390a15050565b6001600160a01b038083166000908152606660205260409020541615610bbc5760405162461bcd60e51b815260040161025e906114ff565b6001600160a01b038281166000908152606660205260409081902080546001600160a01b03191692841692909217909155517fc646d3d00ef6760114da08071b447acd4b21bf11a1f6d650d1d2f744da6bf8b990610b78908490849061149f565b600080825160411415610c545760208301516040840151606085015160001a610c4887828585610cdb565b94509450505050610c5c565b506000905060025b9250929050565b6001600160a01b038116610c895760405162461bcd60e51b815260040161025e90611543565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80906109aa90839061101f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d125750600090506003610d89565b600060018787878760405160008152602001604052604051610d37949392919061155c565b6020604051602081039080840390855afa158015610d59573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d8257600060019250925050610d89565b9150600090505b94509492505050565b60006001600160a01b0382165b92915050565b610dae81610d92565b811461077257600080fd5b8035610d9f81610da5565b80610dae565b8035610d9f81610dc4565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610e1157610e11610dd5565b6040525050565b6000610e2360405190565b9050610e2f8282610deb565b919050565b600067ffffffffffffffff821115610e4e57610e4e610dd5565b601f19601f83011660200192915050565b82818337506000910152565b6000610e7e610e7984610e34565b610e18565b905082815260208101848484011115610e9957610e99600080fd5b610ea4848285610e5f565b509392505050565b600082601f830112610ec057610ec0600080fd5b8135610ed0848260208601610e6b565b949350505050565b600080600060608486031215610ef057610ef0600080fd5b6000610efc8686610db9565b9350506020610f0d86828701610dca565b925050604084013567ffffffffffffffff811115610f2d57610f2d600080fd5b610f3986828701610eac565b9150509250925092565b8015155b82525050565b60208101610d9f8284610f43565b600060208284031215610f7057610f70600080fd5b6000610ed08484610db9565b6000610d9f82610d92565b610dae81610f7c565b8035610d9f81610f87565b60008060408385031215610fb157610fb1600080fd5b6000610fbd8585610db9565b9250506020610fce85828601610f90565b9150509250929050565b610f4781610d92565b60208101610d9f8284610fd8565b60006001600160a01b038216610d9f565b6000610d9f82610fef565b6000610d9f82611000565b610f478161100b565b60208101610d9f8284611016565b602681526000602082017f50726f766964657252656769737472793a206e6f6e6578697374656e7420707281526537bb34b232b960d11b602082015291505b5060400190565b60208082528101610d9f8161102d565b8051610d9f81610f87565b6000602082840312156110a3576110a3600080fd5b6000610ed08484611083565b602b81526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526a20676f7665726e616e636560a81b6020820152915061106c565b60208082528101610d9f816110af565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b6020820152915061106c565b60208082528101610d9f81611107565b600060ff8216610d9f565b610f4781611162565b60208101610d9f828461116d565b801515610dae565b8051610d9f81611184565b6000602082840312156111ac576111ac600080fd5b6000610ed0848461118c565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b6020820152915061106c565b60208082528101610d9f816111b8565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061106c565b60208082528101610d9f8161120e565b602d81526000602082017f50726f766964657252656769737472793a206e6f6e6578697374656e7420707281526c1bdd9a59195c881dd85b1b195d609a1b6020820152915061106c565b60208082528101610d9f81611261565b634e487b7160e01b600052602160045260246000fd5b80610f47565b60005b838110156112f25781810151838201526020016112da565b83811115611301576000848401525b50505050565b6000611311825190565b8084526020840193506113288185602086016112d7565b601f01601f19169290920192915050565b6040810161134782856112d1565b81810360208301526102728184611307565b6000611363825190565b6113718185602086016112d7565b9290920192915050565b60006102758284611359565b8051610d9f81610dc4565b6000602082840312156113a7576113a7600080fd5b6000610ed08484611387565b602281526000602082017f50726f766964657252656769737472793a2070726f7669646572206578697374815261195960f21b6020820152915061106c565b60208082528101610d9f816113b3565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915061106c565b60208082528101610d9f81611402565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610d9f8161145a565b604081016114ad8285610fd8565b6102756020830184610fd8565b602881526000602082017f50726f766964657252656769737472793a2070726f76696465722077616c6c65815267742065786973747360c01b6020820152915061106c565b60208082528101610d9f816114ba565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150611488565b60208082528101610d9f8161150f565b60ff8116610f47565b6080810161156a82876112d1565b6115776020830186611553565b61158460408301856112d1565b61159160608301846112d1565b9594505050505056fea2646970667358221220490a88ce3dbd39fb567c328aa04d0c89e5073abbb403ee115856f6eb3ed36b5e64736f6c63430008090033";

export class ProviderRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProviderRegistry> {
    return super.deploy(overrides || {}) as Promise<ProviderRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProviderRegistry {
    return super.attach(address) as ProviderRegistry;
  }
  connect(signer: Signer): ProviderRegistry__factory {
    return super.connect(signer) as ProviderRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProviderRegistryInterface {
    return new utils.Interface(_abi) as ProviderRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProviderRegistry {
    return new Contract(address, _abi, signerOrProvider) as ProviderRegistry;
  }
}
