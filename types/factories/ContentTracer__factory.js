"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentTracer__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "content",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        name: "Insert",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "content",
                type: "string",
            },
        ],
        name: "Remove",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "expireAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "content",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
        ],
        name: "insert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                internalType: "string[]",
                name: "contents",
                type: "string[]",
            },
            {
                internalType: "uint256[]",
                name: "sizes",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "counts",
                type: "uint256[]",
            },
        ],
        name: "insertMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "metas",
        outputs: [
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "content",
                type: "string",
            },
        ],
        name: "remove",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                internalType: "string[]",
                name: "contents",
                type: "string[]",
            },
        ],
        name: "removeMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50611903806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b840f92111610071578063b840f92114610168578063db1701251461017b578063dbfd47371461018e578063de47238c146101a1578063f2fde38b146101b4578063f887ea40146101c757600080fd5b806312d89732146100ae578063485cc955146100d7578063715018a6146100ec57806389512e17146100f45780638da5cb5b1461014f575b600080fd5b6100c16100bc366004610dd0565b6101ed565b6040516100ce9190610e01565b60405180910390f35b6100ea6100e5366004610e53565b610312565b005b6100ea6103f6565b610141610102366004610f89565b60656020908152600093845260408085208252928452919092208251808401830180519281529083019390920192909220919052805460019091015482565b6040516100ce929190610ff3565b6033546001600160a01b03166040516100ce9190611017565b6100ea6101763660046111cd565b61040a565b6100ea610189366004611298565b610626565b6100ea61019c3660046112e5565b610753565b6100ea6101af366004611357565b610889565b6100ea6101c23660046113bd565b610a2d565b6000546101e0906201000090046001600160a01b031681565b6040516100ce91906113f2565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610276919061140b565b604051630a2c852960e21b81529091506001600160a01b038216906328b214a4906102bb907353b10a60f28c1f35025d9dc0773339638c540a6790879060040161142c565b60206040518083038186803b1580156102d357600080fd5b505afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b9190611445565b9392505050565b600054610100900460ff16158080156103325750600054600160ff909116105b8061034c5750303b15801561034c575060005460ff166001145b6103715760405162461bcd60e51b8152600401610368906114b4565b60405180910390fd5b6000805460ff191660011790558015610394576000805461ff0019166101001790555b61039d83610a67565b6103a682610ab9565b80156103f1576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906103e8906001906114d8565b60405180910390a15b505050565b6103fe610ae9565b6104086000610a67565b565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610491919061140b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906104c0903390600401611017565b60206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906114f9565b61052c5760405162461bcd60e51b815260040161036890611560565b835185511461054d5760405162461bcd60e51b8152600401610368906115b5565b825185511461056e5760405162461bcd60e51b8152600401610368906115b5565b815185511461058f5760405162461bcd60e51b8152600401610368906115b5565b60005b855181101561061e5761060c338783815181106105b1576105b16115c5565b60200260200101518784815181106105cb576105cb6115c5565b60200260200101518785815181106105e5576105e56115c5565b60200260200101518786815181106105ff576105ff6115c5565b6020026020010151610b13565b80610616816115f1565b915050610592565b505050505050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561067557600080fd5b505afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad919061140b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906106dc903390600401611017565b60206040518083038186803b1580156106f457600080fd5b505afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c91906114f9565b6107485760405162461bcd60e51b815260040161036890611560565b6103f1338484610cfc565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a257600080fd5b505afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da919061140b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610809903390600401611017565b60206040518083038186803b15801561082157600080fd5b505afa158015610835573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085991906114f9565b6108755760405162461bcd60e51b815260040161036890611560565b6108823386868686610b13565b5050505050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610910919061140b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a079061093f903390600401611017565b60206040518083038186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f91906114f9565b6109ab5760405162461bcd60e51b815260040161036890611560565b81518351146109cc5760405162461bcd60e51b815260040161036890611650565b60005b8351811015610a2757610a15338583815181106109ee576109ee6115c5565b6020026020010151858481518110610a0857610a086115c5565b6020026020010151610cfc565b80610a1f816115f1565b9150506109cf565b50505050565b610a35610ae9565b6001600160a01b038116610a5b5760405162461bcd60e51b8152600401610368906116a3565b610a6481610a67565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ae05760405162461bcd60e51b8152600401610368906116fb565b610a6481610d2f565b6033546001600160a01b031633146104085760405162461bcd60e51b815260040161036890611740565b60008060029054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a919061140b565b60405162f304db60e01b81529091506001600160a01b0382169062f304db90610bc9908990899060040161142c565b60206040518083038186803b158015610be157600080fd5b505afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1991906114f9565b15610c365760405162461bcd60e51b815260040161036890611784565b7fd8be615b569e10ab81c7e1ad876540845a9ad057e7bf224af878656a43ccbae78686868686866001600160a01b03166328b214a48d8d6040518363ffffffff1660e01b8152600401610c8a92919061142c565b60206040518083038186803b158015610ca257600080fd5b505afa158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda9190611445565b604051610cec969594939291906117f2565b60405180910390a1505050505050565b7f20b2a0e9bd2cadc08b645e5d8c204c6d86d3c23817b100e0346846e77a88d7c98383836040516103e893929190611853565b6001600160a01b038116610d555760405162461bcd60e51b8152600401610368906118bd565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090610da79083906113f2565b60405180910390a150565b805b8114610a6457600080fd5b8035610dca81610db2565b92915050565b600060208284031215610de557610de5600080fd5b6000610df18484610dbf565b949350505050565b805b82525050565b60208101610dca8284610df9565b60006001600160a01b038216610dca565b610db481610e0f565b8035610dca81610e20565b6000610dca82610e0f565b610db481610e34565b8035610dca81610e3f565b60008060408385031215610e6957610e69600080fd5b6000610e758585610e29565b9250506020610e8685828601610e48565b9150509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715610ecb57610ecb610e90565b6040525050565b6000610edd60405190565b9050610ee98282610ea6565b919050565b60006001600160401b03821115610f0757610f07610e90565b601f19601f83011660200192915050565b82818337506000910152565b6000610f37610f3284610eee565b610ed2565b905082815260208101848484011115610f5257610f52600080fd5b610f5d848285610f18565b509392505050565b600082601f830112610f7957610f79600080fd5b8135610df1848260208601610f24565b600080600060608486031215610fa157610fa1600080fd5b6000610fad8686610e29565b9350506020610fbe86828701610dbf565b92505060408401356001600160401b03811115610fdd57610fdd600080fd5b610fe986828701610f65565b9150509250925092565b604081016110018285610df9565b61030b6020830184610df9565b610dfb81610e0f565b60208101610dca828461100e565b60006001600160401b0382111561103e5761103e610e90565b5060209081020190565b6000611056610f3284611025565b8381529050602080820190840283018581111561107557611075600080fd5b835b81811015611099578061108a8882610dbf565b84525060209283019201611077565b5050509392505050565b600082601f8301126110b7576110b7600080fd5b8135610df1848260208601611048565b60006110d5610f3284611025565b838152905060208082019084028301858111156110f4576110f4600080fd5b835b818110156110995780356001600160401b0381111561111757611117600080fd5b8086016111248982610f65565b85525050602092830192016110f6565b600082601f83011261114857611148600080fd5b8135610df18482602086016110c7565b6000611166610f3284611025565b8381529050602080820190840283018581111561118557611185600080fd5b835b81811015611099578061119a8882610dbf565b84525060209283019201611187565b600082601f8301126111bd576111bd600080fd5b8135610df1848260208601611158565b600080600080608085870312156111e6576111e6600080fd5b84356001600160401b038111156111ff576111ff600080fd5b61120b878288016110a3565b94505060208501356001600160401b0381111561122a5761122a600080fd5b61123687828801611134565b93505060408501356001600160401b0381111561125557611255600080fd5b611261878288016111a9565b92505060608501356001600160401b0381111561128057611280600080fd5b61128c878288016111a9565b91505092959194509250565b600080604083850312156112ae576112ae600080fd5b60006112ba8585610dbf565b92505060208301356001600160401b038111156112d9576112d9600080fd5b610e8685828601610f65565b600080600080608085870312156112fe576112fe600080fd5b600061130a8787610dbf565b94505060208501356001600160401b0381111561132957611329600080fd5b61133587828801610f65565b935050604061134687828801610dbf565b925050606061128c87828801610dbf565b6000806040838503121561136d5761136d600080fd5b82356001600160401b0381111561138657611386600080fd5b611392858286016110a3565b92505060208301356001600160401b038111156113b1576113b1600080fd5b610e8685828601611134565b6000602082840312156113d2576113d2600080fd5b6000610df18484610e29565b6000610dca82610e34565b610dfb816113de565b60208101610dca82846113e9565b8051610dca81610e3f565b60006020828403121561142057611420600080fd5b6000610df18484611400565b60408101611001828561100e565b8051610dca81610db2565b60006020828403121561145a5761145a600080fd5b6000610df1848461143a565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101610dca81611466565b600060ff8216610dca565b610dfb816114c4565b60208101610dca82846114cf565b801515610db4565b8051610dca816114e6565b60006020828403121561150e5761150e600080fd5b6000610df184846114ee565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b602082015291506114ad565b60208082528101610dca8161151a565b602881526000602082017f436f6e74656e745472616365723a20496e76616c696420706172616d65746572815267103632b733ba341760c11b602082015291506114ad565b60208082528101610dca81611570565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611605576116056115db565b5060010190565b602781526000602082017f436f6e74656e745472616365723a20496e76616c696420706172616d65746572815266040d8cadccee8d60cb1b602082015291506114ad565b60208082528101610dca8161160c565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506114ad565b60208082528101610dca81611660565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506114ad565b60208082528101610dca816116b3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610dca8161170b565b601e81526000602082017f436f6e74656e745472616365723a206163636f756e742065787069726564000081529150611739565b60208082528101610dca81611750565b60005b838110156117af578181015183820152602001611797565b83811115610a275750506000910152565b60006117ca825190565b8084526020840193506117e1818560208601611794565b601f01601f19169290920192915050565b60c08101611800828961100e565b61180d6020830188610df9565b818103604083015261181f81876117c0565b905061182e6060830186610df9565b61183b6080830185610df9565b61184860a0830184610df9565b979650505050505050565b60608101611861828661100e565b61186e6020830185610df9565b818103604083015261188081846117c0565b95945050505050565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150611739565b60208082528101610dca8161188956fea2646970667358221220942b42ef3a5b6ae7fa0212e5c3281f208e46e67ba1af03915678469b10a49b6d64736f6c63430008090033";
var ContentTracer__factory = /** @class */ (function (_super) {
    __extends(ContentTracer__factory, _super);
    function ContentTracer__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ContentTracer__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ContentTracer__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ContentTracer__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ContentTracer__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ContentTracer__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ContentTracer__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ContentTracer__factory.bytecode = _bytecode;
    ContentTracer__factory.abi = _abi;
    return ContentTracer__factory;
}(ethers_1.ContractFactory));
exports.ContentTracer__factory = ContentTracer__factory;
