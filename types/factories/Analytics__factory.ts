/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Analytics, AnalyticsInterface } from "../Analytics";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.AmountPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "Drip",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.AmountPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637ecebe0014610046578063847ffdd81461007c578063f887ea4014610091575b600080fd5b610066610054366004610285565b60016020526000908152604090205481565b60405161007391906102b6565b60405180910390f35b61008f61008a366004610459565b6100b7565b005b6000546100aa906201000090046001600160a01b031681565b60405161007391906104e1565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561010657600080fd5b505afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e919061050e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a079061016d903390600401610538565b60206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610559565b6101e25760405162461bcd60e51b81526004016101d99061057a565b60405180910390fd5b3360009081526001602052604090205483146102105760405162461bcd60e51b81526004016101d9906105c7565b7f5f3372d5ae9f086bc3c4cc602a6e67a54abd2fd95cbb85d05e604cbaef68a86d338484604051610243939291906106d8565b60405180910390a1505050565b60006001600160a01b0382165b92915050565b61026c81610250565b811461027757600080fd5b50565b803561025d81610263565b60006020828403121561029a5761029a600080fd5b60006102a6848461027a565b949350505050565b805b82525050565b6020810161025d82846102ae565b8061026c565b803561025d816102c4565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610311576103116102d5565b6040525050565b600061032360405190565b905061032f82826102eb565b919050565b6005811061027757600080fd5b803561025d81610334565b600067ffffffffffffffff821115610366576103666102d5565b5060209081020190565b600061038361037e8461034c565b610318565b838152905060208082019084028301858111156103a2576103a2600080fd5b835b818110156103c657806103b788826102ca565b845250602092830192016103a4565b5050509392505050565b600082601f8301126103e4576103e4600080fd5b81356102a6848260208601610370565b60006040828403121561040957610409600080fd5b6104136040610318565b905060006104218484610341565b825250602082013567ffffffffffffffff81111561044157610441600080fd5b61044d848285016103d0565b60208301525092915050565b6000806040838503121561046f5761046f600080fd5b600061047b85856102ca565b925050602083013567ffffffffffffffff81111561049b5761049b600080fd5b6104a7858286016103f4565b9150509250929050565b60006001600160a01b03821661025d565b600061025d826104b1565b600061025d826104c2565b6102b0816104cd565b6020810161025d82846104d8565b600061025d82610250565b61026c816104ef565b805161025d816104fa565b60006020828403121561052357610523600080fd5b60006102a68484610503565b6102b081610250565b6020810161025d828461052f565b80151561026c565b805161025d81610546565b60006020828403121561056e5761056e600080fd5b60006102a6848461054e565b6020808252810161025d81602981527f526f75746572577261707065723a2063616c6c6572206973206e6f742074686560208201526810383937bb34b232b960b91b604082015260600190565b6020808252810161025d81601881527f416e616c79746963733a20696e76616c6964206e6f6e63650000000000000000602082015260400190565b634e487b7160e01b600052602160045260246000fd5b6005811061027757610277610602565b8061032f81610618565b600061025d82610628565b6102b081610632565b600061065283836102ae565b505060200190565b6000610664825190565b80845260209384019383018060005b838110156106985781516106878882610646565b975060208301925050600101610673565b509495945050505050565b805160009060408401906106b7858261063d565b50602083015184820360208601526106cf828261065a565b95945050505050565b606081016106e6828661052f565b6106f360208301856102ae565b81810360408301526106cf81846106a356fea2646970667358221220e43ea53888c6098ec1509484ed7e90e91d666baed70760fac1cd2354ac0929cf64736f6c63430008090033";

export class Analytics__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Analytics> {
    return super.deploy(overrides || {}) as Promise<Analytics>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Analytics {
    return super.attach(address) as Analytics;
  }
  connect(signer: Signer): Analytics__factory {
    return super.connect(signer) as Analytics__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnalyticsInterface {
    return new utils.Interface(_abi) as AnalyticsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Analytics {
    return new Contract(address, _abi, signerOrProvider) as Analytics;
  }
}
