/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MessageSender, MessageSenderInterface } from "../MessageSender";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
    ],
    name: "DstChainIdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "messageBus",
        type: "address",
      },
    ],
    name: "MessageBusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "MessageWithTransferRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payment",
        type: "address",
      },
    ],
    name: "SrcChainPaymentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dstChainId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "executeMessageWithTransferRefund",
    outputs: [
      {
        internalType: "enum MessageSender.ExecutionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_messageBus",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_dstChainId",
        type: "uint64",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "messageBus",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "srcChainId",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "srcTxHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MsgDataTypes.RouteInfo",
        name: "route",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "messageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
    ],
    name: "setDstChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "messageBus",
        type: "address",
      },
    ],
    name: "setMessageBus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_payment",
        type: "address",
      },
    ],
    name: "setSrcChainPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "srcChainPayment",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200010460201b620007f71760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b8152600401620000829062000113565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000fd576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890620000f49060019062000189565b60405180910390a15b5062000199565b6001600160a01b03163b151590565b602080825281016200016681602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000166565b62000183816200016c565b82525050565b6020810162000166828462000178565b6117df80620001a96000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063bbd53ea711610064578063bbd53ea7146102c9578063d204d9a8146102e9578063d7c8cb2414610309578063f2fde38b14610329578063f7260d3e1461034957600080fd5b80638da5cb5b1461024257806393563a9514610269578063a1a227fa14610289578063bb0248aa146102a957600080fd5b8063547cad12116100dc578063547cad12146101ba578063699256f4146101da578063715018a6146101fa578063718da7ee1461020f57806382646a581461022f57600080fd5b80630bcb49821461010e57806330c593f7146101375780633fe3f1cf1461016b5780635335dca21461018d575b600080fd5b61012161011c366004610cc0565b610369565b60405161012e9190610d92565b60405180910390f35b34801561014357600080fd5b5060675461015e90600160a01b90046001600160401b031681565b60405161012e9190610daf565b34801561017757600080fd5b5061018b610186366004610dd7565b6103ea565b005b34801561019957600080fd5b506101ad6101a8366004610f2f565b6104d9565b60405161012e9190610f6f565b3480156101c657600080fd5b5061018b6101d5366004610f7d565b610560565b3480156101e657600080fd5b5061018b6101f5366004610f9e565b610574565b34801561020657600080fd5b5061018b610600565b34801561021b57600080fd5b5061018b61022a366004610f7d565b610614565b61018b61023d366004610f2f565b610625565b34801561024e57600080fd5b506033546001600160a01b03165b60405161012e9190610fe4565b34801561027557600080fd5b5061018b610284366004611011565b6106de565b34801561029557600080fd5b5060665461025c906001600160a01b031681565b3480156102b557600080fd5b506101ad6102c436600461107c565b61072d565b3480156102d557600080fd5b5061018b6102e4366004610f7d565b61079e565b3480156102f557600080fd5b5060655461025c906001600160a01b031681565b34801561031557600080fd5b5061018b6103243660046110e9565b6107af565b34801561033557600080fd5b5061018b610344366004610f7d565b6107c0565b34801561035557600080fd5b5060675461025c906001600160a01b031681565b6066546000906001600160a01b0316331461039f5760405162461bcd60e51b815260040161039690611154565b60405180910390fd5b7f9afeef02b2dc7c87e4d0fe67945dedf1c4ee5bcf5cdf26f94fb1837859816f3386868686866040516103d695949392919061118d565b60405180910390a150600195945050505050565b600054610100900460ff161580801561040a5750600054600160ff909116105b806104245750303b158015610424575060005460ff166001145b6104405760405162461bcd60e51b81526004016103969061121f565b6000805460ff191660011790558015610463576000805461ff0019166101001790555b61046c85610806565b61047584610858565b61047e836108a4565b610487826108ef565b80156104d2576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906104c99060019061124c565b60405180910390a15b5050505050565b60665460405163299aee5160e11b81526000916001600160a01b031690635335dca29061050a9085906004016112b8565b60206040518083038186803b15801561052257600080fd5b505afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906112d4565b92915050565b610568610944565b61057181610858565b50565b61057c610944565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105c25760405162461bcd60e51b815260040161039690611341565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516105f3929190611365565b60405180910390a1505050565b610608610944565b6106126000610806565b565b61061c610944565b610571816108a4565b6065546001600160a01b0316331461064f5760405162461bcd60e51b8152600401610396906113ca565b606754606654610680916001600160a01b0380821692600160a01b9092046001600160401b0316918591163461096e565b6067546040517fbbb476e98b9b7845d6cfd4e37a62d14480243e3fe95454791d9eb9a6ca748e32916106d39130916001600160a01b038116914691600160a01b90046001600160401b03169087906113da565b60405180910390a150565b6106e6610944565b6106fa6001600160a01b03841683836109d9565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516105f393929190611421565b6000600161073e6020870187610f7d565b61074e6040880160208901610f7d565b61075e6060890160408a016110e9565b886060013588888860405160200161077d9897969594939291906114e4565b6040516020818303038152906040528051906020012090505b949350505050565b6107a6610944565b61057181610a34565b6107b7610944565b610571816108ef565b6107c8610944565b6001600160a01b0381166107ee5760405162461bcd60e51b8152600401610396906115a2565b61057181610806565b6001600160a01b03163b151590565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606680546001600160a01b0319166001600160a01b0383169081179091556040517f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e916106d391610fe4565b606780546001600160a01b0319166001600160a01b0383161790556040517f75fd3aa5d9b6e2a8a9d8894008c9263200713f4b1fa9113665e09ceac0027746906106d3908390610fe4565b6067805467ffffffffffffffff60a01b1916600160a01b6001600160401b038416021790556040517fb21f4918f3e7b110065f3bf18a09b38074a4553144258ccfc30b57a76211e929906106d3908390610daf565b6033546001600160a01b031633146106125760405162461bcd60e51b8152600401610396906115e7565b604051634f9e72ad60e11b81526001600160a01b03831690639f3ce55a9083906109a090899089908990600401611615565b6000604051808303818588803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b50505050505050505050565b610a2f8363a9059cbb60e01b84846040516024016109f892919061164b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a7f565b505050565b606580546001600160a01b0319166001600160a01b0383161790556040517faf4cc7de2dd4900af1750e9a7af95c24ca2096d76903102700c90a6abaa819a2906106d3908390610fe4565b6000610ad4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b0e9092919063ffffffff16565b805190915015610a2f5780806020019051810190610af2919061166c565b610a2f5760405162461bcd60e51b8152600401610396906116d4565b6060610b1d8484600085610b27565b90505b9392505050565b606082471015610b495760405162461bcd60e51b815260040161039690611727565b600080866001600160a01b03168587604051610b659190611759565b60006040518083038185875af1925050503d8060008114610ba2576040519150601f19603f3d011682016040523d82523d6000602084013e610ba7565b606091505b5091509150610bb887838387610bc3565b979650505050505050565b60608315610bff578251610bf8576001600160a01b0385163b610bf85760405162461bcd60e51b815260040161039690611799565b5081610796565b6107968383815115610c145781518083602001fd5b8060405162461bcd60e51b815260040161039691906112b8565b60006001600160a01b03821661055a565b610c4881610c2e565b811461057157600080fd5b803561055a81610c3f565b80610c48565b803561055a81610c5e565b60008083601f840112610c8457610c84600080fd5b5081356001600160401b03811115610c9e57610c9e600080fd5b602083019150836001820283011115610cb957610cb9600080fd5b9250929050565b600080600080600060808688031215610cdb57610cdb600080fd5b6000610ce78888610c53565b9550506020610cf888828901610c64565b94505060408601356001600160401b03811115610d1757610d17600080fd5b610d2388828901610c6f565b93509350506060610d3688828901610c53565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b6003811061057157610571610d43565b80610d7381610d59565b919050565b600061055a82610d69565b610d8c81610d78565b82525050565b6020810161055a8284610d83565b6001600160401b038116610d8c565b6020810161055a8284610da0565b6001600160401b038116610c48565b803561055a81610dbd565b60008060008060808587031215610df057610df0600080fd5b6000610dfc8787610c53565b9450506020610e0d87828801610c53565b9350506040610e1e87828801610c53565b9250506060610e2f87828801610dcc565b91505092959194509250565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715610e7657610e76610e3b565b6040525050565b6000610e8860405190565b9050610d738282610e51565b60006001600160401b03821115610ead57610ead610e3b565b601f19601f83011660200192915050565b82818337506000910152565b6000610edd610ed884610e94565b610e7d565b905082815260208101848484011115610ef857610ef8600080fd5b610f03848285610ebe565b509392505050565b600082601f830112610f1f57610f1f600080fd5b8135610796848260208601610eca565b600060208284031215610f4457610f44600080fd5b81356001600160401b03811115610f5d57610f5d600080fd5b61079684828501610f0b565b80610d8c565b6020810161055a8284610f69565b600060208284031215610f9257610f92600080fd5b60006107968484610c53565b60008060408385031215610fb457610fb4600080fd5b6000610fc08585610c53565b9250506020610fd185828601610c64565b9150509250929050565b610d8c81610c2e565b6020810161055a8284610fdb565b600061055a82610c2e565b610c4881610ff2565b803561055a81610ffd565b60008060006060848603121561102957611029600080fd5b60006110358686611006565b935050602061104686828701610c53565b925050604061105786828701610c64565b9150509250925092565b60006080828403121561107657611076600080fd5b50919050565b60008060008060c0858703121561109557611095600080fd5b60006110a18787611061565b94505060806110b287828801610dcc565b93505060a08501356001600160401b038111156110d1576110d1600080fd5b6110dd87828801610c6f565b95989497509550505050565b6000602082840312156110fe576110fe600080fd5b60006107968484610dcc565b602a81526000602082017f4d65737361676552656365697665723a2063616c6c6572206973206e6f74206d8152696573736167652062757360b01b602082015291505b5060400190565b6020808252810161055a8161110a565b818352600060208401935061117a838584610ebe565b601f19601f8401165b9093019392505050565b6080810161119b8288610fdb565b6111a86020830187610f69565b81810360408301526111bb818587611164565b90506111ca6060830184610fdb565b9695505050505050565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b6020820152915061114d565b6020808252810161055a816111d4565b600061055a8261123d565b90565b60ff1690565b610d8c8161122f565b6020810161055a8284611243565b60005b8381101561127557818101518382015260200161125d565b83811115611284576000848401525b50505050565b6000611294825190565b8084526020840193506112ab81856020860161125a565b601f19601f820116611183565b60208082528101610b20818461128a565b805161055a81610c5e565b6000602082840312156112e9576112e9600080fd5b600061079684846112c9565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b6020820152915061114d565b6020808252810161055a816112f5565b600061055a82610ff2565b610d8c81611351565b60408101611373828561135c565b610b206020830184610f69565b602d81526000602082017f4d65737361676553656e6465723a2063616c6c6572206973206e6f742070617981526c1b595b9d0818dbdb9d1c9858dd609a1b6020820152915061114d565b6020808252810161055a81611380565b60a081016113e88288610fdb565b6113f56020830187610fdb565b6114026040830186610da0565b61140f6060830185610da0565b8181036080830152610bb8818461128a565b6060810161142f828661135c565b61143c6020830185610fdb565b6107966040830184610f69565b6002811061057157610571610d43565b80610d7381611449565b600061055a82611459565b600061055a8260f81b90565b610d8c61148682611463565b61146e565b600061055a8260601b90565b600061055a8261148b565b610d8c6114ae82610c2e565b611497565b600061055a8260c01b90565b610d8c6001600160401b0382166114b3565b60006114de838584610ebe565b50500190565b60006114f0828b61147a565b600182019150611500828a6114a2565b60148201915061151082896114a2565b60148201915061152082886114bf565b6008820191506115308287610f69565b60208201915061154082866114bf565b6008820191506115518284866114d1565b9a9950505050505050505050565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061114d565b6020808252810161055a8161155f565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161055a816115b2565b600061055a61123a6001600160401b03841681565b610d8c816115f7565b606081016116238286610fdb565b611630602083018561160c565b8181036040830152611642818461128a565b95945050505050565b604081016113738285610fdb565b801515610c48565b805161055a81611659565b60006020828403121561168157611681600080fd5b60006107968484611661565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b6020820152915061114d565b6020808252810161055a8161168d565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b6020820152915061114d565b6020808252810161055a816116e4565b6000611741825190565b61174f81856020860161125a565b9290920192915050565b6000610b208284611737565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506115e0565b6020808252810161055a8161176556fea26469706673582212207c630969948c06267134c6c027e757eec79af4ddb2cd4718c8b277678a1d431a64736f6c63430008090033";

export class MessageSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessageSender> {
    return super.deploy(overrides || {}) as Promise<MessageSender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MessageSender {
    return super.attach(address) as MessageSender;
  }
  connect(signer: Signer): MessageSender__factory {
    return super.connect(signer) as MessageSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageSenderInterface {
    return new utils.Interface(_abi) as MessageSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageSender {
    return new Contract(address, _abi, signerOrProvider) as MessageSender;
  }
}
