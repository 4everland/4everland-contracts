"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SrcChainPaymentV2__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IMessageSender",
                name: "messageSender",
                type: "address",
            },
        ],
        name: "MessageSenderUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NativeWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                indexed: false,
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Paid",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                indexed: false,
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "PaidV2",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
        ],
        name: "TokenUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "calcFee",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "encodeMessage",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "fees",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "pauser",
                type: "address",
            },
            {
                internalType: "contract IMessageSender",
                name: "messageSender",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "messageSender",
        outputs: [
            {
                internalType: "contract IMessageSender",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawNative",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "pay",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "payloadsValue",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "providerBalances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IMessageSender",
                name: "_messageSender",
                type: "address",
            },
        ],
        name: "setMessageSender",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "_token",
                type: "address",
            },
        ],
        name: "setToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b5061233f806100206000396000f3fe60806040526004361061014b5760003560e01c806382dc1ec4116100b6578063d67bdd251161006f578063d67bdd25146103c9578063e1e382d9146103f6578063f2fde38b14610409578063f840dbff14610429578063f8c8765e14610449578063fc0c546a1461046957600080fd5b806382dc1ec4146103015780638456cb59146103215780638da5cb5b1461033657806393563a951461035c5780639d8c6de81461037c578063bc67f832146103a957600080fd5b806363578efe1161010857806363578efe1461022f578063699256f4146102675780636b2c0f55146102875780636ef8d66d146102a7578063715018a6146102bc57806380f51c12146102d157600080fd5b8063144fa6d7146101505780631d1b6cab1461017257806328ac7f2c146101a85780633f4ba83a146101d557806346fbf68e146101ea5780635c975abb14610217575b600080fd5b34801561015c57600080fd5b5061017061016b36600461132b565b610489565b005b34801561017e57600080fd5b5061019261018d36600461156e565b6104c8565b60405161019f91906115b1565b60405180910390f35b3480156101b457600080fd5b506101926101c33660046115d3565b60cc6020526000908152604090205481565b3480156101e157600080fd5b506101706104f2565b3480156101f657600080fd5b5061020a6102053660046115d3565b610521565b60405161019f91906115fc565b34801561022357600080fd5b5060975460ff1661020a565b34801561023b57600080fd5b5061019261024a36600461160a565b60cd60209081526000928352604080842090915290825290205481565b34801561027357600080fd5b5061017061028236600461160a565b61053f565b34801561029357600080fd5b506101706102a23660046115d3565b6105ed565b3480156102b357600080fd5b50610170610620565b3480156102c857600080fd5b50610170610629565b3480156102dd57600080fd5b5061020a6102ec3660046115d3565b60c96020526000908152604090205460ff1681565b34801561030d57600080fd5b5061017061031c3660046115d3565b61065d565b34801561032d57600080fd5b50610170610690565b34801561034257600080fd5b506065546001600160a01b031660405161019f9190611650565b34801561036857600080fd5b5061017061037736600461165e565b6106bd565b34801561038857600080fd5b5061039c610397366004611745565b61072e565b60405161019f9190611863565b3480156103b557600080fd5b506101706103c436600461132b565b610766565b3480156103d557600080fd5b5060cb546103e9906001600160a01b031681565b60405161019f9190611888565b610170610404366004611745565b610799565b34801561041557600080fd5b506101706104243660046115d3565b61098d565b34801561043557600080fd5b50610192610444366004611745565b6109e6565b34801561045557600080fd5b50610170610464366004611896565b610a7f565b34801561047557600080fd5b5060ca546103e9906001600160a01b031681565b6065546001600160a01b031633146104bc5760405162461bcd60e51b81526004016104b39061192f565b60405180910390fd5b6104c581610b19565b50565b60006104d382610b96565b60ca549091506104ec906001600160a01b031682610c63565b92915050565b6104fb33610521565b6105175760405162461bcd60e51b81526004016104b390611971565b61051f610cca565b565b6001600160a01b0316600090815260c9602052604090205460ff1690565b6065546001600160a01b031633146105695760405162461bcd60e51b81526004016104b39061192f565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105af5760405162461bcd60e51b81526004016104b3906119d0565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516105e09291906119e0565b60405180910390a1505050565b6065546001600160a01b031633146106175760405162461bcd60e51b81526004016104b39061192f565b6104c581610d30565b61051f33610d30565b6065546001600160a01b031633146106535760405162461bcd60e51b81526004016104b39061192f565b61051f6000610da5565b6065546001600160a01b031633146106875760405162461bcd60e51b81526004016104b39061192f565b6104c581610df7565b61069933610521565b6106b55760405162461bcd60e51b81526004016104b390611971565b61051f610e70565b6065546001600160a01b031633146106e75760405162461bcd60e51b81526004016104b39061192f565b6106fb6001600160a01b0384168383610ec8565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516105e0939291906119fb565b606086868686868660405160200161074b96959493929190611b62565b60405160208183030381529060405290509695505050505050565b6065546001600160a01b031633146107905760405162461bcd60e51b81526004016104b39061192f565b6104c581610f23565b60975460ff16156107bc5760405162461bcd60e51b81526004016104b390611bf0565b600260015414156107df5760405162461bcd60e51b81526004016104b390611c34565b600260015560006107ef85610b96565b9050828110156108115760405162461bcd60e51b81526004016104b390611c9e565b8215610824576108218382611cc4565b90505b60ca5461083a906001600160a01b031682610c63565b6001600160a01b038816600090815260cc6020526040902054909150610861908290611cdb565b6001600160a01b038816600090815260cc602090815260408083209390935560cd815282822089835290522054610899908290611cdb565b6001600160a01b03808916600090815260cd602090815260408083208b845290915290209190915560ca546108d19116333084610f94565b60cb546001600160a01b03166382646a58346108f18a8a8a8a8a8a61072e565b6040518363ffffffff1660e01b815260040161090d9190611863565b6000604051808303818588803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b50505050507fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a87878784888860405161097896959493929190611cf3565b60405180910390a15050600180555050505050565b6065546001600160a01b031633146109b75760405162461bcd60e51b81526004016104b39061192f565b6001600160a01b0381166109dd5760405162461bcd60e51b81526004016104b390611d8c565b6104c581610da5565b60cb546000906001600160a01b0316635335dca2610a0889898989898961072e565b6040518263ffffffff1660e01b8152600401610a249190611863565b60206040518083038186803b158015610a3c57600080fd5b505afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611da7565b979650505050505050565b6000610a8b6001610fbb565b90508015610aa3576000805461ff0019166101001790555b610aac85610da5565b610ab584611048565b610abe8361106f565b610ac782611096565b8015610b12576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610b0990600190611ddc565b60405180910390a15b5050505050565b6001600160a01b038116610b3f5760405162461bcd60e51b81526004016104b390611e1e565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610b8b91611888565b60405180910390a150565b600080825111610bb85760405162461bcd60e51b81526004016104b390611e70565b60005b8251811015610c5d5760005b838281518110610bd957610bd9611e80565b60200260200101516020015151811015610c4a57610c36848381518110610c0257610c02611e80565b6020026020010151602001518281518110610c1f57610c1f611e80565b6020026020010151846110bd90919063ffffffff16565b925080610c4281611e96565b915050610bc7565b5080610c5581611e96565b915050610bbb565b50919050565b600080610c6f846110d0565b90506012808211610ca257610c99610c878284611169565b610c9290600a611fbf565b8590611175565b925050506104ec565b610cc1610caf8383611169565b610cba90600a611fbf565b8590611181565b95945050505050565b60975460ff16610cec5760405162461bcd60e51b81526004016104b390611ff9565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610d269190611650565b60405180910390a1565b610d3981610521565b610d555760405162461bcd60e51b81526004016104b39061203d565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610b8b908390611650565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e0081610521565b15610e1d5760405162461bcd60e51b81526004016104b39061208b565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610b8b908390611650565b60975460ff1615610e935760405162461bcd60e51b81526004016104b390611bf0565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d193390565b610f1e8363a9059cbb60e01b8484604051602401610ee792919061209b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261118d565b505050565b6001600160a01b038116610f495760405162461bcd60e51b81526004016104b390611e1e565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610b8b908390611888565b610fb5846323b872dd60e01b858585604051602401610ee7939291906120a9565b50505050565b60008054610100900460ff1615611002578160ff166001148015610fde5750303b155b610ffa5760405162461bcd60e51b81526004016104b390612102565b506000919050565b60005460ff8084169116106110295760405162461bcd60e51b81526004016104b390612102565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166106875760405162461bcd60e51b81526004016104b39061215a565b600054610100900460ff166107905760405162461bcd60e51b81526004016104b39061215a565b600054610100900460ff166104bc5760405162461bcd60e51b81526004016104b39061215a565b60006110c98284611cdb565b9392505050565b6000806000836001600160a01b03166040516110eb9061216a565b600060405180830381855afa9150503d8060008114611126576040519150601f19603f3d011682016040523d82523d6000602084013e61112b565b606091505b50915091508161114d5760405162461bcd60e51b81526004016104b3906121b3565b808060200190518101906111619190611da7565b949350505050565b60006110c98284611cc4565b60006110c982846121d9565b60006110c982846121ed565b60006111e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661121c9092919063ffffffff16565b805190915015610f1e5780806020019051810190611200919061221f565b610f1e5760405162461bcd60e51b81526004016104b390612287565b60606111618484600085856001600160a01b0385163b61124e5760405162461bcd60e51b81526004016104b3906122cb565b600080866001600160a01b0316858760405161126a91906122fd565b60006040518083038185875af1925050503d80600081146112a7576040519150601f19603f3d011682016040523d82523d6000602084013e6112ac565b606091505b5091509150610a74828286606083156112c65750816110c9565b8251156112d65782518084602001fd5b8160405162461bcd60e51b81526004016104b39190611863565b60006001600160a01b0382166104ec565b60006104ec826112f0565b61131581611301565b81146104c557600080fd5b80356104ec8161130c565b60006020828403121561134057611340600080fd5b60006111618484611320565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156113885761138861134c565b6040525050565b600061139a60405190565b90506110438282611362565b600067ffffffffffffffff8211156113c0576113c061134c565b5060209081020190565b600581106104c557600080fd5b80356104ec816113ca565b80611315565b80356104ec816113e2565b6000611406611401846113a6565b61138f565b8381529050602080820190840283018581111561142557611425600080fd5b835b81811015611449578061143a88826113e8565b84525060209283019201611427565b5050509392505050565b600082601f83011261146757611467600080fd5b81356111618482602086016113f3565b60006040828403121561148c5761148c600080fd5b611496604061138f565b905060006114a484846113d7565b825250602082013567ffffffffffffffff8111156114c4576114c4600080fd5b6114d084828501611453565b60208301525092915050565b60006114ea611401846113a6565b8381529050602080820190840283018581111561150957611509600080fd5b835b8181101561144957803567ffffffffffffffff81111561152d5761152d600080fd5b80860161153a8982611477565b855250506020928301920161150b565b600082601f83011261155e5761155e600080fd5b81356111618482602086016114dc565b60006020828403121561158357611583600080fd5b813567ffffffffffffffff81111561159d5761159d600080fd5b6111618482850161154a565b805b82525050565b602081016104ec82846115a9565b611315816112f0565b80356104ec816115bf565b6000602082840312156115e8576115e8600080fd5b600061116184846115c8565b8015156115ab565b602081016104ec82846115f4565b6000806040838503121561162057611620600080fd5b600061162c85856115c8565b925050602061163d858286016113e8565b9150509250929050565b6115ab816112f0565b602081016104ec8284611647565b60008060006060848603121561167657611676600080fd5b60006116828686611320565b9350506020611693868287016115c8565b92505060406116a4868287016113e8565b9150509250925092565b600067ffffffffffffffff8211156116c8576116c861134c565b601f19601f83011660200192915050565b82818337506000910152565b60006116f3611401846116ae565b90508281526020810184848401111561170e5761170e600080fd5b6117198482856116d9565b509392505050565b600082601f83011261173557611735600080fd5b81356111618482602086016116e5565b60008060008060008060c0878903121561176157611761600080fd5b600061176d89896115c8565b965050602061177e89828a016113e8565b955050604087013567ffffffffffffffff81111561179e5761179e600080fd5b6117aa89828a0161154a565b94505060606117bb89828a016113e8565b93505060806117cc89828a016113e8565b92505060a087013567ffffffffffffffff8111156117ec576117ec600080fd5b6117f889828a01611721565b9150509295509295509295565b60005b83811015611820578181015183820152602001611808565b83811115610fb55750506000910152565b600061183b825190565b808452602084019350611852818560208601611805565b601f01601f19169290920192915050565b602080825281016110c98184611831565b60006104ec82611301565b6115ab81611874565b602081016104ec828461187f565b600080600080608085870312156118af576118af600080fd5b60006118bb87876115c8565b94505060206118cc878288016115c8565b93505060406118dd87828801611320565b92505060606118ee87828801611320565b91505092959194509250565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016104ec816118fa565b60208082527f5061757365723a2063616c6c6572206973206e6f74207468652070617573657291019081526000611928565b602080825281016104ec8161193f565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b602082015291505b5060400190565b602080825281016104ec81611981565b604081016119ee828561187f565b6110c960208301846115a9565b60608101611a09828661187f565b611a166020830185611647565b61116160408301846115a9565b634e487b7160e01b600052602160045260246000fd5b600581106104c5576104c5611a23565b8061104381611a39565b60006104ec82611a49565b6115ab81611a53565b6000611a7383836115a9565b505060200190565b6000611a85825190565b80845260209384019383018060005b83811015611ab9578151611aa88882611a67565b975060208301925050600101611a94565b509495945050505050565b80516000906040840190611ad88582611a5e565b5060208301518482036020860152610cc18282611a7b565b60006110c98383611ac4565b6000611b06825190565b80845260208401935083602082028501611b208560200190565b8060005b85811015611b555784840389528151611b3d8582611af0565b94506020830160209a909a0199925050600101611b24565b5091979650505050505050565b60c08101611b708289611647565b611b7d60208301886115a9565b8181036040830152611b8f8187611afc565b9050611b9e60608301866115a9565b611bab60808301856115a9565b81810360a0830152611bbd8184611831565b98975050505050505050565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150611928565b602080825281016104ec81611bc9565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150611928565b602080825281016104ec81611c00565b603b81526000602082017f537263436861696e5061796d656e743a20766f756368657220616d6f756e742081527f6973206c657373207468616e207265736f757263652076616c75650000000000602082015291506119c9565b602080825281016104ec81611c44565b634e487b7160e01b600052601160045260246000fd5b600082821015611cd657611cd6611cae565b500390565b60008219821115611cee57611cee611cae565b500190565b60c08101611d018289611647565b611d0e60208301886115a9565b8181036040830152611d208187611afc565b9050611d2f60608301866115a9565b611d3c60808301856115a9565b610a7460a08301846115a9565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506119c9565b602080825281016104ec81611d49565b80516104ec816113e2565b600060208284031215611dbc57611dbc600080fd5b60006111618484611d9c565b600060ff82166104ec565b6115ab81611dc8565b602081016104ec8284611dd3565b601d81526000602082017f537263436861696e5061796d656e743a207a65726f206164647265737300000081529150611928565b602080825281016104ec81611dea565b602581526000602082017f5265736f75726365446174613a20696e76616c6964207061796c6f616473206c8152640cadccee8d60db1b602082015291506119c9565b602080825281016104ec81611e2e565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611eaa57611eaa611cae565b5060010190565b80825b6001851115611ef057808604811115611ecf57611ecf611cae565b6001851615611edd57908102905b8002611ee98560011c90565b9450611eb4565b94509492505050565b600082611f08575060016110c9565b81611f15575060006110c9565b8160018114611f2b5760028114611f3557611f62565b60019150506110c9565b60ff841115611f4657611f46611cae565b8360020a915084821115611f5c57611f5c611cae565b506110c9565b5060208310610133831016604e8410600b8410161715611f95575081810a83811115611f9057611f90611cae565b6110c9565b611fa28484846001611eb1565b92509050818404811115611fb857611fb8611cae565b0292915050565b60006110c96000198484611ef9565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150611928565b602080825281016104ec81611fce565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150611928565b602080825281016104ec81612009565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506119c9565b602080825281016104ec8161204d565b604081016119ee8285611647565b60608101611a098286611647565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506119c9565b602080825281016104ec816120b7565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506119c9565b602080825281016104ec81612112565b63313ce56760e01b81526000600482016104ec565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e000000000081529150611928565b602080825281016104ec8161217f565b634e487b7160e01b600052601260045260246000fd5b6000826121e8576121e86121c3565b500490565b600081600019048311821515161561220757612207611cae565b500290565b801515611315565b80516104ec8161220c565b60006020828403121561223457612234600080fd5b60006111618484612214565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506119c9565b602080825281016104ec81612240565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611928565b602080825281016104ec81612297565b60006122e5825190565b6122f3818560208601611805565b9290920192915050565b60006110c982846122db56fea2646970667358221220c86bcf3b19bd45d8dd7d64a2a0009082711ddddd624a46cac26900a4e3bbe02b64736f6c63430008090033";
var SrcChainPaymentV2__factory = /** @class */ (function (_super) {
    __extends(SrcChainPaymentV2__factory, _super);
    function SrcChainPaymentV2__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    SrcChainPaymentV2__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    SrcChainPaymentV2__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    SrcChainPaymentV2__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SrcChainPaymentV2__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SrcChainPaymentV2__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SrcChainPaymentV2__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SrcChainPaymentV2__factory.bytecode = _bytecode;
    SrcChainPaymentV2__factory.abi = _abi;
    return SrcChainPaymentV2__factory;
}(ethers_1.ContractFactory));
exports.SrcChainPaymentV2__factory = SrcChainPaymentV2__factory;
