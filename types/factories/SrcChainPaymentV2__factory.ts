/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPaymentV2,
  SrcChainPaymentV2Interface,
} from "../SrcChainPaymentV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "PaidV2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "payloadsValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122ba806100206000396000f3fe60806040526004361061014b5760003560e01c806382dc1ec4116100b6578063d67bdd251161006f578063d67bdd25146103c9578063e1e382d9146103f6578063f2fde38b14610409578063f840dbff14610429578063f8c8765e14610449578063fc0c546a1461046957600080fd5b806382dc1ec4146103015780638456cb59146103215780638da5cb5b1461033657806393563a951461035c5780639d8c6de81461037c578063bc67f832146103a957600080fd5b806363578efe1161010857806363578efe1461022f578063699256f4146102675780636b2c0f55146102875780636ef8d66d146102a7578063715018a6146102bc57806380f51c12146102d157600080fd5b8063144fa6d7146101505780631d1b6cab1461017257806328ac7f2c146101a85780633f4ba83a146101d557806346fbf68e146101ea5780635c975abb14610217575b600080fd5b34801561015c57600080fd5b5061017061016b366004611310565b610489565b005b34801561017e57600080fd5b5061019261018d366004611553565b6104c8565b60405161019f9190611596565b60405180910390f35b3480156101b457600080fd5b506101926101c33660046115b8565b60cc6020526000908152604090205481565b3480156101e157600080fd5b506101706104f2565b3480156101f657600080fd5b5061020a6102053660046115b8565b610521565b60405161019f91906115e1565b34801561022357600080fd5b5060975460ff1661020a565b34801561023b57600080fd5b5061019261024a3660046115ef565b60cd60209081526000928352604080842090915290825290205481565b34801561027357600080fd5b506101706102823660046115ef565b61053f565b34801561029357600080fd5b506101706102a23660046115b8565b6105ed565b3480156102b357600080fd5b50610170610620565b3480156102c857600080fd5b50610170610629565b3480156102dd57600080fd5b5061020a6102ec3660046115b8565b60c96020526000908152604090205460ff1681565b34801561030d57600080fd5b5061017061031c3660046115b8565b61065d565b34801561032d57600080fd5b50610170610690565b34801561034257600080fd5b506065546001600160a01b031660405161019f9190611635565b34801561036857600080fd5b50610170610377366004611643565b6106bd565b34801561038857600080fd5b5061039c61039736600461172a565b61072e565b60405161019f9190611848565b3480156103b557600080fd5b506101706103c4366004611310565b610766565b3480156103d557600080fd5b5060cb546103e9906001600160a01b031681565b60405161019f919061186d565b61017061040436600461172a565b610799565b34801561041557600080fd5b506101706104243660046115b8565b610972565b34801561043557600080fd5b5061019261044436600461172a565b6109cb565b34801561045557600080fd5b5061017061046436600461187b565b610a64565b34801561047557600080fd5b5060ca546103e9906001600160a01b031681565b6065546001600160a01b031633146104bc5760405162461bcd60e51b81526004016104b390611914565b60405180910390fd5b6104c581610afe565b50565b60006104d382610b7b565b60ca549091506104ec906001600160a01b031682610c48565b92915050565b6104fb33610521565b6105175760405162461bcd60e51b81526004016104b390611956565b61051f610caf565b565b6001600160a01b0316600090815260c9602052604090205460ff1690565b6065546001600160a01b031633146105695760405162461bcd60e51b81526004016104b390611914565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105af5760405162461bcd60e51b81526004016104b3906119b5565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516105e09291906119c5565b60405180910390a1505050565b6065546001600160a01b031633146106175760405162461bcd60e51b81526004016104b390611914565b6104c581610d15565b61051f33610d15565b6065546001600160a01b031633146106535760405162461bcd60e51b81526004016104b390611914565b61051f6000610d8a565b6065546001600160a01b031633146106875760405162461bcd60e51b81526004016104b390611914565b6104c581610ddc565b61069933610521565b6106b55760405162461bcd60e51b81526004016104b390611956565b61051f610e55565b6065546001600160a01b031633146106e75760405162461bcd60e51b81526004016104b390611914565b6106fb6001600160a01b0384168383610ead565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516105e0939291906119e0565b606086868686868660405160200161074b96959493929190611b47565b60405160208183030381529060405290509695505050505050565b6065546001600160a01b031633146107905760405162461bcd60e51b81526004016104b390611914565b6104c581610f08565b60975460ff16156107bc5760405162461bcd60e51b81526004016104b390611bd5565b600260015414156107df5760405162461bcd60e51b81526004016104b390611c19565b600260015560006107ef85610b7b565b905082811061081e5760ca54610817906001600160a01b03166108128584611c3f565b610c48565b9050610822565b5060005b6001600160a01b038716600090815260cc6020526040902054610846908290611c56565b6001600160a01b038816600090815260cc602090815260408083209390935560cd81528282208983529052205461087e908290611c56565b6001600160a01b03808916600090815260cd602090815260408083208b845290915290209190915560ca546108b69116333084610f79565b60cb546001600160a01b03166382646a58346108d68a8a8a8a8a8a61072e565b6040518363ffffffff1660e01b81526004016108f29190611848565b6000604051808303818588803b15801561090b57600080fd5b505af115801561091f573d6000803e3d6000fd5b50505050507fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a87878784888860405161095d96959493929190611c6e565b60405180910390a15050600180555050505050565b6065546001600160a01b0316331461099c5760405162461bcd60e51b81526004016104b390611914565b6001600160a01b0381166109c25760405162461bcd60e51b81526004016104b390611d07565b6104c581610d8a565b60cb546000906001600160a01b0316635335dca26109ed89898989898961072e565b6040518263ffffffff1660e01b8152600401610a099190611848565b60206040518083038186803b158015610a2157600080fd5b505afa158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a599190611d22565b979650505050505050565b6000610a706001610fa0565b90508015610a88576000805461ff0019166101001790555b610a9185610d8a565b610a9a8461102d565b610aa383611054565b610aac8261107b565b8015610af7576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610aee90600190611d57565b60405180910390a15b5050505050565b6001600160a01b038116610b245760405162461bcd60e51b81526004016104b390611d99565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610b709161186d565b60405180910390a150565b600080825111610b9d5760405162461bcd60e51b81526004016104b390611deb565b60005b8251811015610c425760005b838281518110610bbe57610bbe611dfb565b60200260200101516020015151811015610c2f57610c1b848381518110610be757610be7611dfb565b6020026020010151602001518281518110610c0457610c04611dfb565b6020026020010151846110a290919063ffffffff16565b925080610c2781611e11565b915050610bac565b5080610c3a81611e11565b915050610ba0565b50919050565b600080610c54846110b5565b90506012808211610c8757610c7e610c6c828461114e565b610c7790600a611f3a565b859061115a565b925050506104ec565b610ca6610c94838361114e565b610c9f90600a611f3a565b8590611166565b95945050505050565b60975460ff16610cd15760405162461bcd60e51b81526004016104b390611f74565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610d0b9190611635565b60405180910390a1565b610d1e81610521565b610d3a5760405162461bcd60e51b81526004016104b390611fb8565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610b70908390611635565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610de581610521565b15610e025760405162461bcd60e51b81526004016104b390612006565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610b70908390611635565b60975460ff1615610e785760405162461bcd60e51b81526004016104b390611bd5565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cfe3390565b610f038363a9059cbb60e01b8484604051602401610ecc929190612016565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611172565b505050565b6001600160a01b038116610f2e5760405162461bcd60e51b81526004016104b390611d99565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610b7090839061186d565b610f9a846323b872dd60e01b858585604051602401610ecc93929190612024565b50505050565b60008054610100900460ff1615610fe7578160ff166001148015610fc35750303b155b610fdf5760405162461bcd60e51b81526004016104b39061207d565b506000919050565b60005460ff80841691161061100e5760405162461bcd60e51b81526004016104b39061207d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166106875760405162461bcd60e51b81526004016104b3906120d5565b600054610100900460ff166107905760405162461bcd60e51b81526004016104b3906120d5565b600054610100900460ff166104bc5760405162461bcd60e51b81526004016104b3906120d5565b60006110ae8284611c56565b9392505050565b6000806000836001600160a01b03166040516110d0906120e5565b600060405180830381855afa9150503d806000811461110b576040519150601f19603f3d011682016040523d82523d6000602084013e611110565b606091505b5091509150816111325760405162461bcd60e51b81526004016104b39061212e565b808060200190518101906111469190611d22565b949350505050565b60006110ae8284611c3f565b60006110ae8284612154565b60006110ae8284612168565b60006111c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112019092919063ffffffff16565b805190915015610f0357808060200190518101906111e5919061219a565b610f035760405162461bcd60e51b81526004016104b390612202565b60606111468484600085856001600160a01b0385163b6112335760405162461bcd60e51b81526004016104b390612246565b600080866001600160a01b0316858760405161124f9190612278565b60006040518083038185875af1925050503d806000811461128c576040519150601f19603f3d011682016040523d82523d6000602084013e611291565b606091505b5091509150610a59828286606083156112ab5750816110ae565b8251156112bb5782518084602001fd5b8160405162461bcd60e51b81526004016104b39190611848565b60006001600160a01b0382166104ec565b60006104ec826112d5565b6112fa816112e6565b81146104c557600080fd5b80356104ec816112f1565b60006020828403121561132557611325600080fd5b60006111468484611305565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561136d5761136d611331565b6040525050565b600061137f60405190565b90506110288282611347565b600067ffffffffffffffff8211156113a5576113a5611331565b5060209081020190565b600581106104c557600080fd5b80356104ec816113af565b806112fa565b80356104ec816113c7565b60006113eb6113e68461138b565b611374565b8381529050602080820190840283018581111561140a5761140a600080fd5b835b8181101561142e578061141f88826113cd565b8452506020928301920161140c565b5050509392505050565b600082601f83011261144c5761144c600080fd5b81356111468482602086016113d8565b60006040828403121561147157611471600080fd5b61147b6040611374565b9050600061148984846113bc565b825250602082013567ffffffffffffffff8111156114a9576114a9600080fd5b6114b584828501611438565b60208301525092915050565b60006114cf6113e68461138b565b838152905060208082019084028301858111156114ee576114ee600080fd5b835b8181101561142e57803567ffffffffffffffff81111561151257611512600080fd5b80860161151f898261145c565b85525050602092830192016114f0565b600082601f83011261154357611543600080fd5b81356111468482602086016114c1565b60006020828403121561156857611568600080fd5b813567ffffffffffffffff81111561158257611582600080fd5b6111468482850161152f565b805b82525050565b602081016104ec828461158e565b6112fa816112d5565b80356104ec816115a4565b6000602082840312156115cd576115cd600080fd5b600061114684846115ad565b801515611590565b602081016104ec82846115d9565b6000806040838503121561160557611605600080fd5b600061161185856115ad565b9250506020611622858286016113cd565b9150509250929050565b611590816112d5565b602081016104ec828461162c565b60008060006060848603121561165b5761165b600080fd5b60006116678686611305565b9350506020611678868287016115ad565b9250506040611689868287016113cd565b9150509250925092565b600067ffffffffffffffff8211156116ad576116ad611331565b601f19601f83011660200192915050565b82818337506000910152565b60006116d86113e684611693565b9050828152602081018484840111156116f3576116f3600080fd5b6116fe8482856116be565b509392505050565b600082601f83011261171a5761171a600080fd5b81356111468482602086016116ca565b60008060008060008060c0878903121561174657611746600080fd5b600061175289896115ad565b965050602061176389828a016113cd565b955050604087013567ffffffffffffffff81111561178357611783600080fd5b61178f89828a0161152f565b94505060606117a089828a016113cd565b93505060806117b189828a016113cd565b92505060a087013567ffffffffffffffff8111156117d1576117d1600080fd5b6117dd89828a01611706565b9150509295509295509295565b60005b838110156118055781810151838201526020016117ed565b83811115610f9a5750506000910152565b6000611820825190565b8084526020840193506118378185602086016117ea565b601f01601f19169290920192915050565b602080825281016110ae8184611816565b60006104ec826112e6565b61159081611859565b602081016104ec8284611864565b6000806000806080858703121561189457611894600080fd5b60006118a087876115ad565b94505060206118b1878288016115ad565b93505060406118c287828801611305565b92505060606118d387828801611305565b91505092959194509250565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016104ec816118df565b60208082527f5061757365723a2063616c6c6572206973206e6f7420746865207061757365729101908152600061190d565b602080825281016104ec81611924565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b602082015291505b5060400190565b602080825281016104ec81611966565b604081016119d38285611864565b6110ae602083018461158e565b606081016119ee8286611864565b6119fb602083018561162c565b611146604083018461158e565b634e487b7160e01b600052602160045260246000fd5b600581106104c5576104c5611a08565b8061102881611a1e565b60006104ec82611a2e565b61159081611a38565b6000611a58838361158e565b505060200190565b6000611a6a825190565b80845260209384019383018060005b83811015611a9e578151611a8d8882611a4c565b975060208301925050600101611a79565b509495945050505050565b80516000906040840190611abd8582611a43565b5060208301518482036020860152610ca68282611a60565b60006110ae8383611aa9565b6000611aeb825190565b80845260208401935083602082028501611b058560200190565b8060005b85811015611b3a5784840389528151611b228582611ad5565b94506020830160209a909a0199925050600101611b09565b5091979650505050505050565b60c08101611b55828961162c565b611b62602083018861158e565b8181036040830152611b748187611ae1565b9050611b83606083018661158e565b611b90608083018561158e565b81810360a0830152611ba28184611816565b98975050505050505050565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061190d565b602080825281016104ec81611bae565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061190d565b602080825281016104ec81611be5565b634e487b7160e01b600052601160045260246000fd5b600082821015611c5157611c51611c29565b500390565b60008219821115611c6957611c69611c29565b500190565b60c08101611c7c828961162c565b611c89602083018861158e565b8181036040830152611c9b8187611ae1565b9050611caa606083018661158e565b611cb7608083018561158e565b610a5960a083018461158e565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506119ae565b602080825281016104ec81611cc4565b80516104ec816113c7565b600060208284031215611d3757611d37600080fd5b60006111468484611d17565b600060ff82166104ec565b61159081611d43565b602081016104ec8284611d4e565b601d81526000602082017f537263436861696e5061796d656e743a207a65726f20616464726573730000008152915061190d565b602080825281016104ec81611d65565b602581526000602082017f5265736f75726365446174613a20696e76616c6964207061796c6f616473206c8152640cadccee8d60db1b602082015291506119ae565b602080825281016104ec81611da9565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611e2557611e25611c29565b5060010190565b80825b6001851115611e6b57808604811115611e4a57611e4a611c29565b6001851615611e5857908102905b8002611e648560011c90565b9450611e2f565b94509492505050565b600082611e83575060016110ae565b81611e90575060006110ae565b8160018114611ea65760028114611eb057611edd565b60019150506110ae565b60ff841115611ec157611ec1611c29565b8360020a915084821115611ed757611ed7611c29565b506110ae565b5060208310610133831016604e8410600b8410161715611f10575081810a83811115611f0b57611f0b611c29565b6110ae565b611f1d8484846001611e2c565b92509050818404811115611f3357611f33611c29565b0292915050565b60006110ae6000198484611e74565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061190d565b602080825281016104ec81611f49565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f74207061757365720000008152915061190d565b602080825281016104ec81611f84565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506119ae565b602080825281016104ec81611fc8565b604081016119d3828561162c565b606081016119ee828661162c565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506119ae565b602080825281016104ec81612032565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506119ae565b602080825281016104ec8161208d565b63313ce56760e01b81526000600482016104ec565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e00000000008152915061190d565b602080825281016104ec816120fa565b634e487b7160e01b600052601260045260246000fd5b6000826121635761216361213e565b500490565b600081600019048311821515161561218257612182611c29565b500290565b8015156112fa565b80516104ec81612187565b6000602082840312156121af576121af600080fd5b6000611146848461218f565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506119ae565b602080825281016104ec816121bb565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061190d565b602080825281016104ec81612212565b6000612260825190565b61226e8185602086016117ea565b9290920192915050565b60006110ae828461225656fea26469706673582212201d0167fcc2605c94fa2e1e760efeb67f002d4a4141b7444452b47735eca2a93f64736f6c63430008090033";

export class SrcChainPaymentV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPaymentV2> {
    return super.deploy(overrides || {}) as Promise<SrcChainPaymentV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainPaymentV2 {
    return super.attach(address) as SrcChainPaymentV2;
  }
  connect(signer: Signer): SrcChainPaymentV2__factory {
    return super.connect(signer) as SrcChainPaymentV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentV2Interface {
    return new utils.Interface(_abi) as SrcChainPaymentV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPaymentV2 {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPaymentV2;
  }
}
