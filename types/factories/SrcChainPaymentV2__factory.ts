/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPaymentV2,
  SrcChainPaymentV2Interface,
} from "../SrcChainPaymentV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "PaidV2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "payloadsValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121b1806100206000396000f3fe60806040526004361061014b5760003560e01c806382dc1ec4116100b6578063d67bdd251161006f578063d67bdd25146103c9578063e1e382d9146103f6578063f2fde38b14610409578063f840dbff14610429578063f8c8765e14610449578063fc0c546a1461046957600080fd5b806382dc1ec4146103015780638456cb59146103215780638da5cb5b1461033657806393563a951461035c5780639d8c6de81461037c578063bc67f832146103a957600080fd5b806363578efe1161010857806363578efe1461022f578063699256f4146102675780636b2c0f55146102875780636ef8d66d146102a7578063715018a6146102bc57806380f51c12146102d157600080fd5b8063144fa6d7146101505780631d1b6cab1461017257806328ac7f2c146101a85780633f4ba83a146101d557806346fbf68e146101ea5780635c975abb14610217575b600080fd5b34801561015c57600080fd5b5061017061016b366004611202565b610489565b005b34801561017e57600080fd5b5061019261018d36600461144a565b61049d565b60405161019f919061148d565b60405180910390f35b3480156101b457600080fd5b506101926101c33660046114af565b60cc6020526000908152604090205481565b3480156101e157600080fd5b506101706104c7565b3480156101f657600080fd5b5061020a6102053660046114af565b6104ff565b60405161019f91906114d8565b34801561022357600080fd5b5060975460ff1661020a565b34801561023b57600080fd5b5061019261024a3660046114e6565b60cd60209081526000928352604080842090915290825290205481565b34801561027357600080fd5b506101706102823660046114e6565b61051d565b34801561029357600080fd5b506101706102a23660046114af565b6105a9565b3480156102b357600080fd5b506101706105ba565b3480156102c857600080fd5b506101706105c3565b3480156102dd57600080fd5b5061020a6102ec3660046114af565b60c96020526000908152604090205460ff1681565b34801561030d57600080fd5b5061017061031c3660046114af565b6105d5565b34801561032d57600080fd5b506101706105e6565b34801561034257600080fd5b506065546001600160a01b031660405161019f919061152c565b34801561036857600080fd5b5061017061037736600461153a565b610613565b34801561038857600080fd5b5061039c610397366004611621565b610662565b60405161019f919061173f565b3480156103b557600080fd5b506101706103c4366004611202565b61069a565b3480156103d557600080fd5b5060cb546103e9906001600160a01b031681565b60405161019f9190611764565b610170610404366004611621565b6106ab565b34801561041557600080fd5b506101706104243660046114af565b61084e565b34801561043557600080fd5b50610192610444366004611621565b610885565b34801561045557600080fd5b50610170610464366004611772565b61091e565b34801561047557600080fd5b5060ca546103e9906001600160a01b031681565b610491610a0d565b61049a81610a37565b50565b60006104a882610ab4565b60ca549091506104c1906001600160a01b031682610b81565b92915050565b6104d0336104ff565b6104f55760405162461bcd60e51b81526004016104ec9061180b565b60405180910390fd5b6104fd610be8565b565b6001600160a01b0316600090815260c9602052604090205460ff1690565b610525610a0d565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061056b5760405162461bcd60e51b81526004016104ec9061186a565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161059c92919061187a565b60405180910390a1505050565b6105b1610a0d565b61049a81610c34565b6104fd33610c34565b6105cb610a0d565b6104fd6000610ca9565b6105dd610a0d565b61049a81610cfb565b6105ef336104ff565b61060b5760405162461bcd60e51b81526004016104ec9061180b565b6104fd610d74565b61061b610a0d565b61062f6001600160a01b0384168383610db1565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161059c93929190611895565b606086868686868660405160200161067f969594939291906119fc565b60405160208183030381529060405290509695505050505050565b6106a2610a0d565b61049a81610e0c565b6106b3610e7d565b6106bb610ea0565b60006106c685610ab4565b90508281106106f55760ca546106ee906001600160a01b03166106e98584611a79565b610b81565b90506106f9565b5060005b6001600160a01b038716600090815260cc602052604090205461071d908290611a90565b6001600160a01b038816600090815260cc602090815260408083209390935560cd815282822089835290522054610755908290611a90565b6001600160a01b03808916600090815260cd602090815260408083208b845290915290209190915560ca5461078d9116333084610eca565b60cb546001600160a01b03166382646a58346107ad8a8a8a8a8a8a610662565b6040518363ffffffff1660e01b81526004016107c9919061173f565b6000604051808303818588803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b50505050507fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a87878784888860405161083496959493929190611aa8565b60405180910390a15061084660018055565b505050505050565b610856610a0d565b6001600160a01b03811661087c5760405162461bcd60e51b81526004016104ec90611b41565b61049a81610ca9565b60cb546000906001600160a01b0316635335dca26108a7898989898989610662565b6040518263ffffffff1660e01b81526004016108c3919061173f565b60206040518083038186803b1580156108db57600080fd5b505afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190611b5c565b979650505050505050565b600054610100900460ff161580801561093e5750600054600160ff909116105b806109585750303b158015610958575060005460ff166001145b6109745760405162461bcd60e51b81526004016104ec90611bc8565b6000805460ff191660011790558015610997576000805461ff0019166101001790555b6109a085610ca9565b6109a984610ef1565b6109b283610f18565b6109bb82610f3f565b8015610a06576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906109fd90600190611bec565b60405180910390a15b5050505050565b6065546001600160a01b031633146104fd5760405162461bcd60e51b81526004016104ec90611c2c565b6001600160a01b038116610a5d5760405162461bcd60e51b81526004016104ec90611c70565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610aa991611764565b60405180910390a150565b600080825111610ad65760405162461bcd60e51b81526004016104ec90611cc2565b60005b8251811015610b7b5760005b838281518110610af757610af7611cd2565b60200260200101516020015151811015610b6857610b54848381518110610b2057610b20611cd2565b6020026020010151602001518281518110610b3d57610b3d611cd2565b602002602001015184610f6690919063ffffffff16565b925080610b6081611ce8565b915050610ae5565b5080610b7381611ce8565b915050610ad9565b50919050565b600080610b8d84610f79565b90506012808211610bc057610bb7610ba58284611012565b610bb090600a611e11565b859061101e565b925050506104c1565b610bdf610bcd8383611012565b610bd890600a611e11565b859061102a565b95945050505050565b610bf0611036565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610c2a919061152c565b60405180910390a1565b610c3d816104ff565b610c595760405162461bcd60e51b81526004016104ec90611e54565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610aa990839061152c565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d04816104ff565b15610d215760405162461bcd60e51b81526004016104ec90611ea2565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610aa990839061152c565b610d7c610e7d565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c1d3390565b610e078363a9059cbb60e01b8484604051602401610dd0929190611eb2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611058565b505050565b6001600160a01b038116610e325760405162461bcd60e51b81526004016104ec90611c70565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610aa9908390611764565b60975460ff16156104fd5760405162461bcd60e51b81526004016104ec90611ee7565b60026001541415610ec35760405162461bcd60e51b81526004016104ec90611f2b565b6002600155565b610eeb846323b872dd60e01b858585604051602401610dd093929190611f3b565b50505050565b600054610100900460ff166105dd5760405162461bcd60e51b81526004016104ec90611f91565b600054610100900460ff166106a25760405162461bcd60e51b81526004016104ec90611f91565b600054610100900460ff166104915760405162461bcd60e51b81526004016104ec90611f91565b6000610f728284611a90565b9392505050565b6000806000836001600160a01b0316604051610f9490611fa1565b600060405180830381855afa9150503d8060008114610fcf576040519150601f19603f3d011682016040523d82523d6000602084013e610fd4565b606091505b509150915081610ff65760405162461bcd60e51b81526004016104ec90611fea565b8080602001905181019061100a9190611b5c565b949350505050565b6000610f728284611a79565b6000610f728284612010565b6000610f728284612024565b60975460ff166104fd5760405162461bcd60e51b81526004016104ec9061206e565b60006110ad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110e79092919063ffffffff16565b805190915015610e0757808060200190518101906110cb9190612091565b610e075760405162461bcd60e51b81526004016104ec906120f9565b606061100a848460008585600080866001600160a01b0316858760405161110e919061212b565b60006040518083038185875af1925050503d806000811461114b576040519150601f19603f3d011682016040523d82523d6000602084013e611150565b606091505b50915091506109138783838760608315611198578251611191576001600160a01b0385163b6111915760405162461bcd60e51b81526004016104ec9061216b565b508161100a565b61100a83838151156111ad5781518083602001fd5b8060405162461bcd60e51b81526004016104ec919061173f565b60006001600160a01b0382166104c1565b60006104c1826111c7565b6111ec816111d8565b811461049a57600080fd5b80356104c1816111e3565b60006020828403121561121757611217600080fd5b600061100a84846111f7565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561125f5761125f611223565b6040525050565b600061127160405190565b905061127d8282611239565b919050565b600067ffffffffffffffff82111561129c5761129c611223565b5060209081020190565b6005811061049a57600080fd5b80356104c1816112a6565b806111ec565b80356104c1816112be565b60006112e26112dd84611282565b611266565b8381529050602080820190840283018581111561130157611301600080fd5b835b81811015611325578061131688826112c4565b84525060209283019201611303565b5050509392505050565b600082601f83011261134357611343600080fd5b813561100a8482602086016112cf565b60006040828403121561136857611368600080fd5b6113726040611266565b9050600061138084846112b3565b825250602082013567ffffffffffffffff8111156113a0576113a0600080fd5b6113ac8482850161132f565b60208301525092915050565b60006113c66112dd84611282565b838152905060208082019084028301858111156113e5576113e5600080fd5b835b8181101561132557803567ffffffffffffffff81111561140957611409600080fd5b8086016114168982611353565b85525050602092830192016113e7565b600082601f83011261143a5761143a600080fd5b813561100a8482602086016113b8565b60006020828403121561145f5761145f600080fd5b813567ffffffffffffffff81111561147957611479600080fd5b61100a84828501611426565b805b82525050565b602081016104c18284611485565b6111ec816111c7565b80356104c18161149b565b6000602082840312156114c4576114c4600080fd5b600061100a84846114a4565b801515611487565b602081016104c182846114d0565b600080604083850312156114fc576114fc600080fd5b600061150885856114a4565b9250506020611519858286016112c4565b9150509250929050565b611487816111c7565b602081016104c18284611523565b60008060006060848603121561155257611552600080fd5b600061155e86866111f7565b935050602061156f868287016114a4565b9250506040611580868287016112c4565b9150509250925092565b600067ffffffffffffffff8211156115a4576115a4611223565b601f19601f83011660200192915050565b82818337506000910152565b60006115cf6112dd8461158a565b9050828152602081018484840111156115ea576115ea600080fd5b6115f58482856115b5565b509392505050565b600082601f83011261161157611611600080fd5b813561100a8482602086016115c1565b60008060008060008060c0878903121561163d5761163d600080fd5b600061164989896114a4565b965050602061165a89828a016112c4565b955050604087013567ffffffffffffffff81111561167a5761167a600080fd5b61168689828a01611426565b945050606061169789828a016112c4565b93505060806116a889828a016112c4565b92505060a087013567ffffffffffffffff8111156116c8576116c8600080fd5b6116d489828a016115fd565b9150509295509295509295565b60005b838110156116fc5781810151838201526020016116e4565b83811115610eeb5750506000910152565b6000611717825190565b80845260208401935061172e8185602086016116e1565b601f01601f19169290920192915050565b60208082528101610f72818461170d565b60006104c1826111d8565b61148781611750565b602081016104c1828461175b565b6000806000806080858703121561178b5761178b600080fd5b600061179787876114a4565b94505060206117a8878288016114a4565b93505060406117b9878288016111f7565b92505060606117ca878288016111f7565b91505092959194509250565b60208082527f5061757365723a2063616c6c6572206973206e6f742074686520706175736572910190815260005b5060200190565b602080825281016104c1816117d6565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b602082015291505b5060400190565b602080825281016104c18161181b565b60408101611888828561175b565b610f726020830184611485565b606081016118a3828661175b565b6118b06020830185611523565b61100a6040830184611485565b634e487b7160e01b600052602160045260246000fd5b6005811061049a5761049a6118bd565b8061127d816118d3565b60006104c1826118e3565b611487816118ed565b600061190d8383611485565b505060200190565b600061191f825190565b80845260209384019383018060005b838110156119535781516119428882611901565b97506020830192505060010161192e565b509495945050505050565b8051600090604084019061197285826118f8565b5060208301518482036020860152610bdf8282611915565b6000610f72838361195e565b60006119a0825190565b808452602084019350836020820285016119ba8560200190565b8060005b858110156119ef57848403895281516119d7858261198a565b94506020830160209a909a01999250506001016119be565b5091979650505050505050565b60c08101611a0a8289611523565b611a176020830188611485565b8181036040830152611a298187611996565b9050611a386060830186611485565b611a456080830185611485565b81810360a0830152611a57818461170d565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611a8b57611a8b611a63565b500390565b60008219821115611aa357611aa3611a63565b500190565b60c08101611ab68289611523565b611ac36020830188611485565b8181036040830152611ad58187611996565b9050611ae46060830186611485565b611af16080830185611485565b61091360a0830184611485565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611863565b602080825281016104c181611afe565b80516104c1816112be565b600060208284031215611b7157611b71600080fd5b600061100a8484611b51565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611863565b602080825281016104c181611b7d565b600060ff82166104c1565b61148781611bd8565b602081016104c18284611be3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611804565b602080825281016104c181611bfa565b601d81526000602082017f537263436861696e5061796d656e743a207a65726f206164647265737300000081529150611804565b602080825281016104c181611c3c565b602581526000602082017f5265736f75726365446174613a20696e76616c6964207061796c6f616473206c8152640cadccee8d60db1b60208201529150611863565b602080825281016104c181611c80565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611cfc57611cfc611a63565b5060010190565b80825b6001851115611d4257808604811115611d2157611d21611a63565b6001851615611d2f57908102905b8002611d3b8560011c90565b9450611d06565b94509492505050565b600082611d5a57506001610f72565b81611d6757506000610f72565b8160018114611d7d5760028114611d8757611db4565b6001915050610f72565b60ff841115611d9857611d98611a63565b8360020a915084821115611dae57611dae611a63565b50610f72565b5060208310610133831016604e8410600b8410161715611de7575081810a83811115611de257611de2611a63565b610f72565b611df48484846001611d03565b92509050818404811115611e0a57611e0a611a63565b0292915050565b6000610f726000198484611d4b565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150611804565b602080825281016104c181611e20565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611863565b602080825281016104c181611e64565b604081016118888285611523565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150611804565b602080825281016104c181611ec0565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150611804565b602080825281016104c181611ef7565b606081016118a38286611523565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611863565b602080825281016104c181611f49565b63313ce56760e01b81526000600482016104c1565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e000000000081529150611804565b602080825281016104c181611fb6565b634e487b7160e01b600052601260045260246000fd5b60008261201f5761201f611ffa565b500490565b600081600019048311821515161561203e5761203e611a63565b500290565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150611804565b602080825281016104c181612043565b8015156111ec565b80516104c18161207e565b6000602082840312156120a6576120a6600080fd5b600061100a8484612086565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611863565b602080825281016104c1816120b2565b6000612113825190565b6121218185602086016116e1565b9290920192915050565b6000610f728284612109565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611804565b602080825281016104c18161213756fea26469706673582212209c0b1754a4eb4e069ff1d21cdfada00a5893787944e1235337dc27a1d1ccda0464736f6c63430008090033";

export class SrcChainPaymentV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPaymentV2> {
    return super.deploy(overrides || {}) as Promise<SrcChainPaymentV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainPaymentV2 {
    return super.attach(address) as SrcChainPaymentV2;
  }
  connect(signer: Signer): SrcChainPaymentV2__factory {
    return super.connect(signer) as SrcChainPaymentV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentV2Interface {
    return new utils.Interface(_abi) as SrcChainPaymentV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPaymentV2 {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPaymentV2;
  }
}
