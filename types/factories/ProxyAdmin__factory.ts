/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProxyAdmin, ProxyAdminInterface } from "../ProxyAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107f38061007e6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461010b57806399a88ec41461011e578063f2fde38b1461013e578063f3b7dead1461015e57600080fd5b8063204e1c7a14610080578063715018a6146100b65780637eff275e146100cd5780638da5cb5b146100ed575b600080fd5b34801561008c57600080fd5b506100a061009b36600461043a565b61017e565b6040516100ad919061046a565b60405180910390f35b3480156100c257600080fd5b506100cb610204565b005b3480156100d957600080fd5b506100cb6100e836600461048c565b610218565b3480156100f957600080fd5b506000546001600160a01b03166100a0565b6100cb6101193660046105c4565b610282565b34801561012a57600080fd5b506100cb61013936600461048c565b6102f1565b34801561014a57600080fd5b506100cb61015936600461062f565b610325565b34801561016a57600080fd5b506100a061017936600461043a565b610368565b6000806000836001600160a01b031660405161019990610664565b600060405180830381855afa9150503d80600081146101d4576040519150601f19603f3d011682016040523d82523d6000602084013e6101d9565b606091505b5091509150816101e857600080fd5b808060200190518101906101fc919061067a565b949350505050565b61020c610383565b61021660006103ad565b565b610220610383565b6040516308f2839760e41b81526001600160a01b03831690638f2839709061024c90849060040161046a565b600060405180830381600087803b15801561026657600080fd5b505af115801561027a573d6000803e3d6000fd5b505050505050565b61028a610383565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102ba90869086906004016106fd565b6000604051808303818588803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b5050505050505050565b6102f9610383565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe69061024c90849060040161046a565b61032d610383565b6001600160a01b03811661035c5760405162461bcd60e51b81526004016103539061071d565b60405180910390fd5b610365816103ad565b50565b6000806000836001600160a01b031660405161019990610778565b6000546001600160a01b031633146102165760405162461bcd60e51b815260040161035390610783565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b600061040a826103fd565b61042481610410565b811461036557600080fd5b803561040a8161041b565b60006020828403121561044f5761044f600080fd5b60006101fc848461042f565b610464816103fd565b82525050565b6020810161040a828461045b565b610424816103fd565b803561040a81610478565b600080604083850312156104a2576104a2600080fd5b60006104ae858561042f565b92505060206104bf85828601610481565b9150509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610505576105056104c9565b6040525050565b600061051760405190565b905061052382826104df565b919050565b600067ffffffffffffffff821115610542576105426104c9565b601f19601f83011660200192915050565b82818337506000910152565b600061057261056d84610528565b61050c565b90508281526020810184848401111561058d5761058d600080fd5b610598848285610553565b509392505050565b600082601f8301126105b4576105b4600080fd5b81356101fc84826020860161055f565b6000806000606084860312156105dc576105dc600080fd5b60006105e8868661042f565b93505060206105f986828701610481565b925050604084013567ffffffffffffffff81111561061957610619600080fd5b610625868287016105a0565b9150509250925092565b60006020828403121561064457610644600080fd5b60006101fc8484610481565b635c60da1b60e01b815260005b5060040190565b600061040a82610650565b805161040a81610478565b60006020828403121561068f5761068f600080fd5b60006101fc848461066f565b60005b838110156106b657818101518382015260200161069e565b838111156106c5576000848401525b50505050565b60006106d5825190565b8084526020840193506106ec81856020860161069b565b601f01601f19169290920192915050565b6040810161070b828561045b565b81810360208301526101fc81846106cb565b6020808252810161040a81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b6303e1469160e61b8152600061065d565b600061040a82610767565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408301526060820161040a56fea2646970667358221220a3f3dd35d411c9b9aab4d74de8a8432a3c2c9c61bbb73b64c9e617da4684981764736f6c63430008090033";

export class ProxyAdmin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<ProxyAdmin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProxyAdmin {
    return super.attach(address) as ProxyAdmin;
  }
  connect(signer: Signer): ProxyAdmin__factory {
    return super.connect(signer) as ProxyAdmin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminInterface {
    return new utils.Interface(_abi) as ProxyAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as ProxyAdmin;
  }
}
