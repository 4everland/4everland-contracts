"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageSender__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint64",
                name: "dstChainId",
                type: "uint64",
            },
        ],
        name: "DstChainIdUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "messageBus",
                type: "address",
            },
        ],
        name: "MessageBusUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "address",
                name: "executor",
                type: "address",
            },
        ],
        name: "MessageWithTransferRefund",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NativeWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
        ],
        name: "ReceiverUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "payment",
                type: "address",
            },
        ],
        name: "SrcChainPaymentUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "calcFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "dstChainId",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "executor",
                type: "address",
            },
        ],
        name: "executeMessageWithTransferRefund",
        outputs: [
            {
                internalType: "enum MessageSender.ExecutionStatus",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "_messageBus",
                type: "address",
            },
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "_dstChainId",
                type: "uint64",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "messageBus",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "srcChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "srcTxHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct MsgDataTypes.RouteInfo",
                name: "route",
                type: "tuple",
            },
            {
                internalType: "uint64",
                name: "dstChainId",
                type: "uint64",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "messageId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawNative",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "receiver",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                internalType: "uint32",
                name: "maxSlippage",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
            {
                internalType: "enum MsgDataTypes.BridgeSendType",
                name: "bridgeSendType",
                type: "uint8",
            },
        ],
        name: "sendMessageWithTransfer",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "dstChainId",
                type: "uint64",
            },
        ],
        name: "setDstChainId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "messageBus",
                type: "address",
            },
        ],
        name: "setMessageBus",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
        ],
        name: "setReceiver",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_payment",
                type: "address",
            },
        ],
        name: "setSrcChainPayment",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "srcChainPayment",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b620008f01760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b61259a80620001db6000396000f3fe6080604052600436106101095760003560e01c806393563a9511610095578063d204d9a811610064578063d204d9a8146102d6578063d7c8cb24146102f6578063f2fde38b14610316578063f718845314610336578063f7260d3e1461034957600080fd5b806393563a9514610256578063a1a227fa14610276578063bb0248aa14610296578063bbd53ea7146102b657600080fd5b8063547cad12116100dc578063547cad12146101ba578063699256f4146101da578063715018a6146101fa578063718da7ee1461020f5780638da5cb5b1461022f57600080fd5b80630bcb49821461010e57806330c593f7146101375780633fe3f1cf1461016b5780635335dca21461018d575b600080fd5b61012161011c3660046116b8565b610369565b60405161012e9190611785565b60405180910390f35b34801561014357600080fd5b5060675461015e90600160a01b90046001600160401b031681565b60405161012e91906117a2565b34801561017757600080fd5b5061018b6101863660046117ca565b6103eb565b005b34801561019957600080fd5b506101ad6101a8366004611922565b610485565b60405161012e9190611962565b3480156101c657600080fd5b5061018b6101d5366004611970565b61050c565b3480156101e657600080fd5b5061018b6101f5366004611991565b610542565b34801561020657600080fd5b5061018b6105f0565b34801561021b57600080fd5b5061018b61022a366004611970565b610626565b34801561023b57600080fd5b506033546001600160a01b03165b60405161012e91906119d7565b34801561026257600080fd5b5061018b610271366004611a04565b610659565b34801561028257600080fd5b50606654610249906001600160a01b031681565b3480156102a257600080fd5b506101ad6102b1366004611a6f565b6106ca565b3480156102c257600080fd5b5061018b6102d1366004611970565b61073b565b3480156102e257600080fd5b50606554610249906001600160a01b031681565b34801561030257600080fd5b5061018b610311366004611adc565b61076e565b34801561032257600080fd5b5061018b610331366004611970565b6107a1565b6101ad610344366004611b2c565b6107fa565b34801561035557600080fd5b50606754610249906001600160a01b031681565b6066546000906001600160a01b0316331461039f5760405162461bcd60e51b815260040161039690611c1a565b60405180910390fd5b7f9afeef02b2dc7c87e4d0fe67945dedf1c4ee5bcf5cdf26f94fb1837859816f3386868686866040516103d6959493929190611c53565b60405180910390a15060015b95945050505050565b60006103f760016108ff565b9050801561040f576000805461ff0019166101001790555b6104188561098c565b610421846109de565b61042a83610a35565b61043382610a80565b801561047e576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061047590600190611cb7565b60405180910390a15b5050505050565b60665460405163299aee5160e11b81526000916001600160a01b031690635335dca2906104b6908590600401611d1f565b60206040518083038186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190611d3b565b92915050565b6033546001600160a01b031633146105365760405162461bcd60e51b815260040161039690611d91565b61053f816109de565b50565b6033546001600160a01b0316331461056c5760405162461bcd60e51b815260040161039690611d91565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105b25760405162461bcd60e51b815260040161039690611ded565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516105e3929190611e11565b60405180910390a1505050565b6033546001600160a01b0316331461061a5760405162461bcd60e51b815260040161039690611d91565b610624600061098c565b565b6033546001600160a01b031633146106505760405162461bcd60e51b815260040161039690611d91565b61053f81610a35565b6033546001600160a01b031633146106835760405162461bcd60e51b815260040161039690611d91565b6106976001600160a01b0384168383610ad5565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516105e393929190611e2c565b600060016106db6020870187611970565b6106eb6040880160208901611970565b6106fb6060890160408a01611adc565b886060013588888860405160200161071a989796959493929190611eef565b6040516020818303038152906040528051906020012090505b949350505050565b6033546001600160a01b031633146107655760405162461bcd60e51b815260040161039690611d91565b61053f81610b30565b6033546001600160a01b031633146107985760405162461bcd60e51b815260040161039690611d91565b61053f81610a80565b6033546001600160a01b031633146107cb5760405162461bcd60e51b815260040161039690611d91565b6001600160a01b0381166107f15760405162461bcd60e51b815260040161039690611f9f565b61053f8161098c565b6065546000906001600160a01b031633146108275760405162461bcd60e51b815260040161039690611ff9565b6040516323b872dd60e01b81526001600160a01b038816906323b872dd9061085790339030908b90600401612009565b602060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a9919061202a565b506067546066546108e5916001600160a01b03808216928b928b92600160a01b9091046001600160401b0316918b918b918b918b911634610b7b565b509695505050505050565b6001600160a01b03163b151590565b60008054610100900460ff1615610946578160ff1660011480156109225750303b155b61093e5760405162461bcd60e51b815260040161039690612096565b506000919050565b60005460ff80841691161061096d5760405162461bcd60e51b815260040161039690612096565b506000805460ff191660ff92909216919091179055600190565b919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606680546001600160a01b0319166001600160a01b0383169081179091556040517f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e91610a2a916119d7565b60405180910390a150565b606780546001600160a01b0319166001600160a01b0383161790556040517f75fd3aa5d9b6e2a8a9d8894008c9263200713f4b1fa9113665e09ceac002774690610a2a9083906119d7565b6067805467ffffffffffffffff60a01b1916600160a01b6001600160401b038416021790556040517fb21f4918f3e7b110065f3bf18a09b38074a4553144258ccfc30b57a76211e92990610a2a9083906117a2565b610b2b8363a9059cbb60e01b8484604051602401610af49291906120a6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c63565b505050565b606580546001600160a01b0319166001600160a01b0383161790556040517faf4cc7de2dd4900af1750e9a7af95c24ca2096d76903102700c90a6abaa819a290610a2a9083906119d7565b60006001846006811115610b9157610b9161173b565b1415610baf57610ba88b8b8b8b8b8b8b8a8a610cf2565b9050610c55565b6002846006811115610bc357610bc361173b565b1480610be057506004846006811115610bde57610bde61173b565b145b15610bf657610ba8848c8c8c8c8c8b8a8a610e92565b6003846006811115610c0a57610c0a61173b565b1480610c2757506005846006811115610c2557610c2561173b565b145b15610c3d57610ba8848c8c8c8c8c8b8a8a61112a565b60405162461bcd60e51b8152600401610396906120e8565b9a9950505050505050505050565b6000610cb8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661139d9092919063ffffffff16565b805190915015610b2b5780806020019051810190610cd6919061202a565b610b2b5760405162461bcd60e51b81526004016103969061213f565b600080836001600160a01b03166382980dc46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d2e57600080fd5b505afa158015610d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d66919061215a565b9050610d7c6001600160a01b038b16828b6113b6565b60405163a5977fbb60e01b81526001600160a01b0382169063a5977fbb90610db2908e908e908e908e908e908e90600401612187565b600060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b505050506000308c8c8c8c8c46604051602001610e0397969594939291906121d6565b604051602081830303815290604052805190602001209050846001600160a01b0316634289fbb3858e8c86868c6040518763ffffffff1660e01b8152600401610e5095949392919061226f565b6000604051808303818588803b158015610e6957600080fd5b505af1158015610e7d573d6000803e3d6000fd5b50939f9e505050505050505050505050505050565b60008060028b6006811115610ea957610ea961173b565b1415610f2757836001600160a01b031663d8257d176040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee857600080fd5b505afa158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f20919061215a565b9050610f9b565b836001600160a01b031663c66a9c5a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f98919061215a565b90505b610faf6001600160a01b038a16828a6113b6565b600060028c6006811115610fc557610fc561173b565b141561106b57816001600160a01b031663234636248b8b8b8f8c6040518663ffffffff1660e01b8152600401610fff9594939291906122b6565b600060405180830381600087803b15801561101957600080fd5b505af115801561102d573d6000803e3d6000fd5b50505050308a8a8a8e8b4660405160200161104e97969594939291906122f8565b6040516020818303038152906040528051906020012090506110f4565b816001600160a01b031663234636248b8b8b8f8c6040518663ffffffff1660e01b815260040161109f9594939291906122b6565b602060405180830381600087803b1580156110b957600080fd5b505af11580156110cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f19190611d3b565b90505b604051634289fbb360e01b81526001600160a01b03861690634289fbb3908690610e50908f908d90889088908e9060040161226f565b60008060038b60068111156111415761114161173b565b14156111bf57836001600160a01b031663dfa2dbaf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118057600080fd5b505afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b8919061215a565b9050611233565b836001600160a01b03166395b12c276040518163ffffffff1660e01b815260040160206040518083038186803b1580156111f857600080fd5b505afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611230919061215a565b90505b6112476001600160a01b038a16828a6113b6565b600060038c600681111561125d5761125d61173b565b14156112ff57816001600160a01b031663de790c7e8b8b8e8b6040518563ffffffff1660e01b81526004016112959493929190612354565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b50505050308a8a8d8a466040516020016112e296959493929190612389565b604051602081830303815290604052805190602001209050611388565b816001600160a01b031663a00293018b8b8b8f8c6040518663ffffffff1660e01b81526004016113339594939291906122b6565b602060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190611d3b565b90505b6110f46001600160a01b038b16836000611468565b60606113ac848460008561152b565b90505b9392505050565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b81526004016113e79291906123f3565b60206040518083038186803b1580156113ff57600080fd5b505afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114379190611d3b565b6114419190612424565b90506114628463095ea7b360e01b8584604051602401610af49291906120a6565b50505050565b8015806114f05750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061149e90309086906004016123f3565b60206040518083038186803b1580156114b657600080fd5b505afa1580156114ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ee9190611d3b565b155b61150c5760405162461bcd60e51b81526004016103969061248f565b610b2b8363095ea7b360e01b8484604051602401610af49291906120a6565b60608247101561154d5760405162461bcd60e51b8152600401610396906124e2565b6001600160a01b0385163b6115745760405162461bcd60e51b815260040161039690612526565b600080866001600160a01b031685876040516115909190612558565b60006040518083038185875af1925050503d80600081146115cd576040519150601f19603f3d011682016040523d82523d6000602084013e6115d2565b606091505b50915091506115e28282866115ed565b979650505050505050565b606083156115fc5750816113af565b82511561160c5782518084602001fd5b8160405162461bcd60e51b81526004016103969190611d1f565b60006001600160a01b038216610506565b61164081611626565b811461053f57600080fd5b803561050681611637565b80611640565b803561050681611656565b60008083601f84011261167c5761167c600080fd5b5081356001600160401b0381111561169657611696600080fd5b6020830191508360018202830111156116b1576116b1600080fd5b9250929050565b6000806000806000608086880312156116d3576116d3600080fd5b60006116df888861164b565b95505060206116f08882890161165c565b94505060408601356001600160401b0381111561170f5761170f600080fd5b61171b88828901611667565b9350935050606061172e8882890161164b565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b6003811061053f5761053f61173b565b8061098781611751565b600061050682611761565b61177f8161176b565b82525050565b602081016105068284611776565b6001600160401b03811661177f565b602081016105068284611793565b6001600160401b038116611640565b8035610506816117b0565b600080600080608085870312156117e3576117e3600080fd5b60006117ef878761164b565b94505060206118008782880161164b565b93505060406118118782880161164b565b9250506060611822878288016117bf565b91505092959194509250565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156118695761186961182e565b6040525050565b600061187b60405190565b90506109878282611844565b60006001600160401b038211156118a0576118a061182e565b601f19601f83011660200192915050565b82818337506000910152565b60006118d06118cb84611887565b611870565b9050828152602081018484840111156118eb576118eb600080fd5b6118f68482856118b1565b509392505050565b600082601f83011261191257611912600080fd5b81356107338482602086016118bd565b60006020828403121561193757611937600080fd5b81356001600160401b0381111561195057611950600080fd5b610733848285016118fe565b8061177f565b60208101610506828461195c565b60006020828403121561198557611985600080fd5b6000610733848461164b565b600080604083850312156119a7576119a7600080fd5b60006119b3858561164b565b92505060206119c48582860161165c565b9150509250929050565b61177f81611626565b6020810161050682846119ce565b600061050682611626565b611640816119e5565b8035610506816119f0565b600080600060608486031215611a1c57611a1c600080fd5b6000611a2886866119f9565b9350506020611a398682870161164b565b9250506040611a4a8682870161165c565b9150509250925092565b600060808284031215611a6957611a69600080fd5b50919050565b60008060008060c08587031215611a8857611a88600080fd5b6000611a948787611a54565b9450506080611aa5878288016117bf565b93505060a08501356001600160401b03811115611ac457611ac4600080fd5b611ad087828801611667565b95989497509550505050565b600060208284031215611af157611af1600080fd5b600061073384846117bf565b63ffffffff8116611640565b803561050681611afd565b6007811061053f57600080fd5b803561050681611b14565b60008060008060008060c08789031215611b4857611b48600080fd5b6000611b54898961164b565b9650506020611b6589828a0161165c565b9550506040611b7689828a016117bf565b9450506060611b8789828a01611b09565b93505060808701356001600160401b03811115611ba657611ba6600080fd5b611bb289828a016118fe565b92505060a0611bc389828a01611b21565b9150509295509295509295565b602a81526000602082017f4d65737361676552656365697665723a2063616c6c6572206973206e6f74206d8152696573736167652062757360b01b602082015291505b5060400190565b6020808252810161050681611bd0565b8183526000602084019350611c408385846118b1565b601f19601f8401165b9093019392505050565b60808101611c6182886119ce565b611c6e602083018761195c565b8181036040830152611c81818587611c2a565b9050611c9060608301846119ce565b9695505050505050565b600061050682611ca8565b90565b60ff1690565b61177f81611c9a565b602081016105068284611cae565b60005b83811015611ce0578181015183820152602001611cc8565b838111156114625750506000910152565b6000611cfb825190565b808452602084019350611d12818560208601611cc5565b601f19601f820116611c49565b602080825281016113af8184611cf1565b805161050681611656565b600060208284031215611d5057611d50600080fd5b60006107338484611d30565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161050681611d5c565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b60208201529150611c13565b6020808252810161050681611da1565b6000610506826119e5565b61177f81611dfd565b60408101611e1f8285611e08565b6113af602083018461195c565b60608101611e3a8286611e08565b611e4760208301856119ce565b610733604083018461195c565b6002811061053f5761053f61173b565b8061098781611e54565b600061050682611e64565b60006105068260f81b90565b61177f611e9182611e6e565b611e79565b60006105068260601b90565b600061050682611e96565b61177f611eb982611626565b611ea2565b60006105068260c01b90565b61177f6001600160401b038216611ebe565b6000611ee98385846118b1565b50500190565b6000611efb828b611e85565b600182019150611f0b828a611ead565b601482019150611f1b8289611ead565b601482019150611f2b8288611eca565b600882019150611f3b828761195c565b602082019150611f4b8286611eca565b600882019150610c55828486611edc565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611c13565b6020808252810161050681611f5c565b602d81526000602082017f4d65737361676553656e6465723a2063616c6c6572206973206e6f742070617981526c1b595b9d0818dbdb9d1c9858dd609a1b60208201529150611c13565b6020808252810161050681611faf565b60608101611e3a82866119ce565b801515611640565b805161050681612017565b60006020828403121561203f5761203f600080fd5b6000610733848461201f565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611c13565b602080825281016105068161204b565b60408101611e1f82856119ce565b601981526000602082017f6272696467652074797065206e6f7420737570706f727465640000000000000081529150611d8a565b60208082528101610506816120b4565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611c13565b60208082528101610506816120f8565b805161050681611637565b60006020828403121561216f5761216f600080fd5b6000610733848461214f565b63ffffffff811661177f565b60c0810161219582896119ce565b6121a260208301886119ce565b6121af604083018761195c565b6121bc6060830186611793565b6121c96080830185611793565b6115e260a083018461217b565b60006121e2828a611ead565b6014820191506121f28289611ead565b6014820191506122028288611ead565b601482019150612212828761195c565b6020820191506122228286611eca565b6008820191506122328285611eca565b6008820191506122428284611eca565b50600801979650505050505050565b6000610506611ca56001600160401b03841681565b61177f81612251565b60a0810161227d82886119ce565b61228a6020830187612266565b61229760408301866119ce565b6122a4606083018561195c565b81810360808301526115e28184611cf1565b60a081016122c482886119ce565b6122d1602083018761195c565b6122de6040830186611793565b6122eb60608301856119ce565b611c906080830184611793565b6000612304828a611ead565b6014820191506123148289611ead565b601482019150612324828861195c565b6020820191506123348287611eca565b6008820191506123448286611ead565b6014820191506122328285611eca565b6080810161236282876119ce565b61236f602083018661195c565b61237c60408301856119ce565b6103e26060830184611793565b60006123958289611ead565b6014820191506123a58288611ead565b6014820191506123b5828761195c565b6020820191506123c58286611ead565b6014820191506123d58285611eca565b6008820191506123e58284611eca565b506008019695505050505050565b6040810161240182856119ce565b6113af60208301846119ce565b634e487b7160e01b600052601160045260246000fd5b600082198211156124375761243761240e565b500190565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611c13565b602080825281016105068161243c565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611c13565b602080825281016105068161249f565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611d8a565b60208082528101610506816124f2565b6000612540825190565b61254e818560208601611cc5565b9290920192915050565b60006113af828461253656fea264697066735822122039ea696813a40d43d730d24fee440ed1c4eb33fd4ca509e46b4ae510e60f7bd864736f6c63430008090033";
var MessageSender__factory = /** @class */ (function (_super) {
    __extends(MessageSender__factory, _super);
    function MessageSender__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    MessageSender__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MessageSender__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MessageSender__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MessageSender__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MessageSender__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MessageSender__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MessageSender__factory.bytecode = _bytecode;
    MessageSender__factory.abi = _abi;
    return MessageSender__factory;
}(ethers_1.ContractFactory));
exports.MessageSender__factory = MessageSender__factory;
