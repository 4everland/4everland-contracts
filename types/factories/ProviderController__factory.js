"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderController__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "AccountRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "ProviderDripped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "WalletTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "WalletTypesHashUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "accountExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "drip",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
        ],
        name: "dripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashTypedDataV4ForWallet",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashWalletTypes",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "initWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "pauser",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "string",
                name: "walletTypes",
                type: "string",
            },
            {
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "registerAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
        ],
        name: "registerAndDripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
        ],
        name: "registerMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "newWallet",
                type: "address",
            },
        ],
        name: "transferWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "walletTypesHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b620011131760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b61318a80620001db6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806372d9e80e116100de578063a006410811610097578063dcccb5dc11610071578063dcccb5dc14610336578063f2db0f4214610349578063f2fde38b1461035c578063f887ea401461036f57600080fd5b8063a0064108146102fa578063b531303f14610310578063d6f0362e1461032357600080fd5b806372d9e80e1461027857806380f51c121461029857806382dc1ec4146102bb5780638456cb59146102ce5780638da5cb5b146102d65780639ba72cb8146102e757600080fd5b806345237f1c1161014b5780636b2c0f55116101255780636b2c0f55146102425780636ef8d66d14610255578063715018a61461025d578063718bb2f31461026557600080fd5b806345237f1c1461021157806346fbf68e146102245780635c975abb1461023757600080fd5b8062c1b50a1461019257806314e8099d146101a757806320898a78146101ba5780632d529764146101cd5780633078a6e8146101f65780633f4ba83a14610209575b600080fd5b6101a56101a0366004611dff565b61038f565b005b6101a56101b5366004612064565b6103e0565b6101a56101c8366004612130565b610508565b6101e06101db36600461216a565b610661565b6040516101ed91906121a7565b60405180910390f35b6101a5610204366004612246565b6107a4565b6101a561097a565b6101a561021f366004612361565b6109a9565b6101e0610232366004612439565b610a4f565b60995460ff166101e0565b6101a5610250366004612439565b610a6d565b6101a5610aa3565b6101a5610aac565b6101a561027336600461245a565b610ae0565b61028b61028636600461216a565b610c9b565b6040516101ed91906124e1565b6101e06102a6366004612439565b60cb6020526000908152604090205460ff1681565b6101a56102c9366004612439565b610cec565b6101a5610d1f565b6067546001600160a01b031661028b565b6101e06102f536600461216a565b610d4c565b61030360cf5481565b6040516101ed91906124f5565b6101a561031e366004612246565b610d76565b610303610331366004611dff565b610f3b565b610303610344366004611dff565b610f5a565b6101a5610357366004612503565b610f94565b6101a561036a366004612439565b6110ba565b60cc54610382906001600160a01b031681565b6040516101ed9190612538565b600061039b8484610c9b565b9050336001600160a01b038216146103ce5760405162461bcd60e51b81526004016103c59061259a565b60405180910390fd5b6103da84848385611122565b50505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d91906125b5565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a079061048c9033906004016124e1565b60206040518083038186803b1580156104a457600080fd5b505afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc91906125e9565b6104f85760405162461bcd60e51b81526004016103c590612650565b6105033384846111a0565b505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561054d57600080fd5b505afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906125b5565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906105b49033906004016124e1565b60206040518083038186803b1580156105cc57600080fd5b505afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060491906125e9565b6106205760405162461bcd60e51b81526004016103c590612650565b60005b82518110156105035761064f3384838151811061064257610642612660565b6020026020010151611735565b806106598161268c565b915050610623565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b1580156106a657600080fd5b505afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de91906125b5565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b815260040161070991906124e1565b60206040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075991906125e9565b6107755760405162461bcd60e51b81526004016103c5906126ec565b506001600160a01b038216600090815260cd6020908152604080832084845290915290205460ff165b92915050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906125b5565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906108509033906004016124e1565b60206040518083038186803b15801561086857600080fd5b505afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a091906125e9565b6108bc5760405162461bcd60e51b81526004016103c590612650565b60008351116108dd5760405162461bcd60e51b81526004016103c590612744565b60008251116108fe5760405162461bcd60e51b81526004016103c59061279c565b815183511461091f5760405162461bcd60e51b81526004016103c5906127f9565b60005b83518110156103da576109683385838151811061094157610941612660565b602002602001015185848151811061095b5761095b612660565b60200260200101516111a0565b806109728161268c565b915050610922565b61098333610a4f565b61099f5760405162461bcd60e51b81526004016103c59061283e565b6109a76118e5565b565b60006109b5600161194b565b905080156109cd576000805461ff0019166101001790555b6109d6876119d8565b6109df86611a2a565b6109e98585611a51565b6109f283611a82565b6109fb82611ab9565b8015610a46576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610a3d90600190612862565b60405180910390a15b50505050505050565b6001600160a01b0316600090815260cb602052604090205460ff1690565b6067546001600160a01b03163314610a975760405162461bcd60e51b81526004016103c5906128a2565b610aa081611ae9565b50565b6109a733611ae9565b6067546001600160a01b03163314610ad65760405162461bcd60e51b81526004016103c5906128a2565b6109a760006119d8565b336001600160a01b03831614610b085760405162461bcd60e51b81526004016103c5906128fb565b610b128484610661565b610b2e5760405162461bcd60e51b81526004016103c59061294f565b610b388484610d4c565b15610b555760405162461bcd60e51b81526004016103c59061299d565b6000610b62858585610f3b565b905060cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b158015610bb257600080fd5b505afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea91906125b5565b6001600160a01b031663238a4d1e8683856040518463ffffffff1660e01b8152600401610c1993929190612a0b565b602060405180830381600087803b158015610c3357600080fd5b505af1158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906125e9565b610c875760405162461bcd60e51b81526004016103c590612a83565b610c948585600086611122565b5050505050565b6000610ca78383610d4c565b610cc35760405162461bcd60e51b81526004016103c590612ad6565b506001600160a01b03918216600090815260ce6020908152604080832093835292905220541690565b6067546001600160a01b03163314610d165760405162461bcd60e51b81526004016103c5906128a2565b610aa081611b69565b610d2833610a4f565b610d445760405162461bcd60e51b81526004016103c59061283e565b6109a7611be2565b6001600160a01b03918216600090815260ce60209081526040808320938352929052205416151590565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610dbb57600080fd5b505afa158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df391906125b5565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610e229033906004016124e1565b60206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7291906125e9565b610e8e5760405162461bcd60e51b81526004016103c590612650565b6000835111610eaf5760405162461bcd60e51b81526004016103c590612744565b6000825111610ed05760405162461bcd60e51b81526004016103c59061279c565b8151835114610ef15760405162461bcd60e51b81526004016103c5906127f9565b60005b83518110156103da57610f133385838151811061064257610642612660565b610f293385838151811061094157610941612660565b80610f338161268c565b915050610ef4565b6000610f50610f4b858585610f5a565b611c3a565b90505b9392505050565b600060cf54848484604051602001610f759493929190612ae6565b6040516020818303038152906040528051906020012090509392505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610fd957600080fd5b505afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101191906125b5565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906110409033906004016124e1565b60206040518083038186803b15801561105857600080fd5b505afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109091906125e9565b6110ac5760405162461bcd60e51b81526004016103c590612650565b6110b63383611735565b5050565b6067546001600160a01b031633146110e45760405162461bcd60e51b81526004016103c5906128a2565b6001600160a01b03811661110a5760405162461bcd60e51b81526004016103c590612b5e565b610aa0816119d8565b6001600160a01b03163b151590565b6001600160a01b03848116600090815260ce602090815260408083208784529091529081902080546001600160a01b03191692841692909217909155517f3848c851d32f9ec4e5737cee35fe6816770cfbcfd0096097933c80ffa0bc7c2890611192908690869086908690612b6e565b60405180910390a150505050565b6111aa8383610661565b6111c65760405162461bcd60e51b81526004016103c590612bca565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561121457600080fd5b505afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c91906125b5565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b815260040161127791906124e1565b60206040518083038186803b15801561128f57600080fd5b505afa1580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c791906125e9565b6112e35760405162461bcd60e51b81526004016103c5906126ec565b60008151116113045760405162461bcd60e51b81526004016103c590612c19565b60005b81518110156116f657600082828151811061132457611324612660565b60209081029190910101518051909150600181600481111561134857611348612c29565b141561147d578160200151516001146113735760405162461bcd60e51b81526004016103c590612c87565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166322b31aba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c157600080fd5b505afa1580156113d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f991906125b5565b6001600160a01b031663da5001a58787856020015160008151811061142057611420612660565b60200260200101516040518463ffffffff1660e01b815260040161144693929190612c97565b600060405180830381600087803b15801561146057600080fd5b505af1158015611474573d6000803e3d6000fd5b505050506116e1565b600281600481111561149157611491612c29565b141561150a578160200151516001146114bc5760405162461bcd60e51b81526004016103c590612d07565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663f931ca566040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c157600080fd5b600381600481111561151e5761151e612c29565b1415611597578160200151516001146115495760405162461bcd60e51b81526004016103c590612d5f565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a2d2f2db6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c157600080fd5b60048160048111156115ab576115ab612c29565b14156116c9578160200151516002146115d65760405162461bcd60e51b81526004016103c590612db7565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561162457600080fd5b505afa158015611638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165c91906125b5565b6001600160a01b031663ed3811888787856020015160008151811061168357611683612660565b602002602001015186602001516001815181106116a2576116a2612660565b60200260200101516040518563ffffffff1660e01b81526004016114469493929190612dc7565b60405162461bcd60e51b81526004016103c590612e42565b505080806116ee9061268c565b915050611307565b507f0cc4f008775f50ff94480b827bff217f10b555c53b83873f4cd0918a9c241ae48383604051611728929190612e52565b60405180910390a1505050565b61173f8282610661565b1561175c5760405162461bcd60e51b81526004016103c590612eac565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156117aa57600080fd5b505afa1580156117be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e291906125b5565b6001600160a01b0316636b074a07336040518263ffffffff1660e01b815260040161180d91906124e1565b60206040518083038186803b15801561182557600080fd5b505afa158015611839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185d91906125e9565b6118795760405162461bcd60e51b81526004016103c5906126ec565b6001600160a01b038216600090815260cd6020908152604080832084845290915290819020805460ff19166001179055517f672144042732f7b1cdbf0772464ae545aedd7f41d38b8487dafd9085496a5d51906118d99084908490612e52565b60405180910390a15050565b60995460ff166119075760405162461bcd60e51b81526004016103c590612ee7565b6099805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161194191906124e1565b60405180910390a1565b60008054610100900460ff1615611992578160ff16600114801561196e5750303b155b61198a5760405162461bcd60e51b81526004016103c590612f42565b506000919050565b60005460ff8084169116106119b95760405162461bcd60e51b81526004016103c590612f42565b506000805460ff191660ff92909216919091179055600190565b919050565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610d165760405162461bcd60e51b81526004016103c590612f9a565b600054610100900460ff16611a785760405162461bcd60e51b81526004016103c590612f9a565b6110b68282611c4d565b600054610100900460ff16611aa95760405162461bcd60e51b81526004016103c590612f9a565b610aa08180519060200120611c8e565b600054610100900460ff16611ae05760405162461bcd60e51b81526004016103c590612f9a565b610aa081611cc3565b611af281610a4f565b611b0e5760405162461bcd60e51b81526004016103c590612fde565b6001600160a01b038116600090815260cb602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90611b5e9083906124e1565b60405180910390a150565b611b7281610a4f565b15611b8f5760405162461bcd60e51b81526004016103c59061302c565b6001600160a01b038116600090815260cb602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890611b5e9083906124e1565b60995460ff1615611c055760405162461bcd60e51b81526004016103c590613063565b6099805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119343390565b600061079e611c47611d34565b83611d70565b600054610100900460ff16611c745760405162461bcd60e51b81526004016103c590612f9a565b815160209283012081519190920120600191909155600255565b60cf8190556040517fd5b7aa922fbc99b384e2da1530298f9f1f39cbaafe5584138c9a7031f594a34f90611b5e9083906124f5565b6001600160a01b038116611ce95760405162461bcd60e51b81526004016103c5906130a7565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090611b5e908390612538565b6000611d6b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d6360015490565b600254611da3565b905090565b60008282604051602001611d859291906130b7565b60405160208183030381529060405280519060200120905092915050565b60008383834630604051602001610f759594939291906130e8565b60006001600160a01b03821661079e565b611dd881611dbe565b8114610aa057600080fd5b803561079e81611dcf565b80611dd8565b803561079e81611dee565b600080600060608486031215611e1757611e17600080fd5b6000611e238686611de3565b9350506020611e3486828701611df4565b9250506040611e4586828701611de3565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611e8a57611e8a611e4f565b6040525050565b6000611e9c60405190565b90506119d38282611e65565b60006001600160401b03821115611ec157611ec1611e4f565b5060209081020190565b60058110610aa057600080fd5b803561079e81611ecb565b6000611ef6611ef184611ea8565b611e91565b83815290506020808201908402830185811115611f1557611f15600080fd5b835b81811015611f395780611f2a8882611df4565b84525060209283019201611f17565b5050509392505050565b600082601f830112611f5757611f57600080fd5b8135611f67848260208601611ee3565b949350505050565b600060408284031215611f8457611f84600080fd5b611f8e6040611e91565b90506000611f9c8484611ed8565b82525060208201356001600160401b03811115611fbb57611fbb600080fd5b611fc784828501611f43565b60208301525092915050565b6000611fe1611ef184611ea8565b8381529050602080820190840283018581111561200057612000600080fd5b835b81811015611f395780356001600160401b0381111561202357612023600080fd5b8086016120308982611f6f565b8552505060209283019201612002565b600082601f83011261205457612054600080fd5b8135611f67848260208601611fd3565b6000806040838503121561207a5761207a600080fd5b60006120868585611df4565b92505060208301356001600160401b038111156120a5576120a5600080fd5b6120b185828601612040565b9150509250929050565b60006120c9611ef184611ea8565b838152905060208082019084028301858111156120e8576120e8600080fd5b835b81811015611f3957806120fd8882611df4565b845250602092830192016120ea565b600082601f83011261212057612120600080fd5b8135611f678482602086016120bb565b60006020828403121561214557612145600080fd5b81356001600160401b0381111561215e5761215e600080fd5b611f678482850161210c565b6000806040838503121561218057612180600080fd5b600061218c8585611de3565b92505060206120b185828601611df4565b8015155b82525050565b6020810161079e828461219d565b60006121c3611ef184611ea8565b838152905060208082019084028301858111156121e2576121e2600080fd5b835b81811015611f395780356001600160401b0381111561220557612205600080fd5b8086016122128982612040565b85525050602092830192016121e4565b600082601f83011261223657612236600080fd5b8135611f678482602086016121b5565b6000806040838503121561225c5761225c600080fd5b82356001600160401b0381111561227557612275600080fd5b6122818582860161210c565b92505060208301356001600160401b038111156122a0576122a0600080fd5b6120b185828601612222565b60006001600160401b038211156122c5576122c5611e4f565b601f19601f83011660200192915050565b82818337506000910152565b60006122f0611ef1846122ac565b90508281526020810184848401111561230b5761230b600080fd5b6123168482856122d6565b509392505050565b600082601f83011261233257612332600080fd5b8135611f678482602086016122e2565b600061079e82611dbe565b611dd881612342565b803561079e8161234d565b60008060008060008060c0878903121561237d5761237d600080fd5b60006123898989611de3565b965050602061239a89828a01611de3565b95505060408701356001600160401b038111156123b9576123b9600080fd5b6123c589828a0161231e565b94505060608701356001600160401b038111156123e4576123e4600080fd5b6123f089828a0161231e565b93505060808701356001600160401b0381111561240f5761240f600080fd5b61241b89828a0161231e565b92505060a061242c89828a01612356565b9150509295509295509295565b60006020828403121561244e5761244e600080fd5b6000611f678484611de3565b6000806000806080858703121561247357612473600080fd5b600061247f8787611de3565b945050602061249087828801611df4565b93505060406124a187828801611de3565b92505060608501356001600160401b038111156124c0576124c0600080fd5b6124cc8782880161231e565b91505092959194509250565b6121a181611dbe565b6020810161079e82846124d8565b806121a1565b6020810161079e82846124ef565b60006020828403121561251857612518600080fd5b6000611f678484611df4565b600061079e82612342565b6121a181612524565b6020810161079e828461252f565b603481526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c6572206973206e6f8152731d081d1a194818dd5c9c995b9d081dd85b1b195d60621b602082015291505b5060400190565b6020808252810161079e81612546565b805161079e8161234d565b6000602082840312156125ca576125ca600080fd5b6000611f6784846125aa565b801515611dd8565b805161079e816125d6565b6000602082840312156125fe576125fe600080fd5b6000611f6784846125de565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b60208201529150612593565b6020808252810161079e8161260a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156126a0576126a0612676565b5060010190565b602881526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e7420815267383937bb34b232b960c11b60208201529150612593565b6020808252810161079e816126a7565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964206163636f81526a0eadce8e640d8cadccee8d60ab1b60208201529150612593565b6020808252810161079e816126fc565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207061796c81526a0dec2c8e640d8cadccee8d60ab1b60208201529150612593565b6020808252810161079e81612754565b603081526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e636f6e736974656e742081526f0e0c2e4c2dacae8cae440d8cadccee8d60831b60208201529150612593565b6020808252810161079e816127ac565b60208082527f5061757365723a2063616c6c6572206973206e6f742074686520706175736572910190815260005b5060200190565b6020808252810161079e81612809565b600060ff821661079e565b6121a18161284e565b6020810161079e8284612859565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000612837565b6020808252810161079e81612870565b602c81526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c657220696e206e6f81526b1d081d1a19481dd85b1b195d60a21b60208201529150612593565b6020808252810161079e816128b2565b602781526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152661858d8dbdd5b9d60ca1b60208201529150612593565b6020808252810161079e8161290b565b602181526000602082017f50726f7669646572436f6e74726f6c6c65723a2077616c6c65742065786973748152607360f81b60208201529150612593565b6020808252810161079e8161295f565b60005b838110156129c85781810151838201526020016129b0565b838111156103da5750506000910152565b60006129e3825190565b8084526020840193506129fa8185602086016129ad565b601f01601f19169290920192915050565b60608101612a1982866124d8565b612a2660208301856124ef565b8181036040830152612a3881846129d9565b95945050505050565b602581526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207369676e815264617475726560d81b60208201529150612593565b6020808252810161079e81612a41565b602681526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152651dd85b1b195d60d21b60208201529150612593565b6020808252810161079e81612a93565b60808101612af482876124ef565b612b0160208301866124d8565b612b0e60408301856124ef565b612a3860608301846124d8565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150612593565b6020808252810161079e81612b1b565b60808101612b7c82876124d8565b612b8960208301866124ef565b612b0e60408301856124d8565b601f81526000602082017f4163636f756e7452656769737472793a206163636f756e74206578697374730081529150612837565b6020808252810161079e81612b96565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a20656d707479207061796c6f61815261647360f01b60208201529150612593565b6020808252810161079e81612bda565b634e487b7160e01b600052602160045260246000fd5b603c815260006020820160008051602061313583398151915281527f6e7473206c656e67746820666f72206275696c64696e672074696d650000000060208201529150612593565b6020808252810161079e81612c3f565b60608101612ca582866124d8565b612cb260208301856124ef565b611f6760408301846124ef565b6038815260006020820160008051602061313583398151915281527f6e7473206c656e67746820666f722062616e647769647468000000000000000060208201529150612593565b6020808252810161079e81612cbf565b6039815260006020820160008051602061313583398151915281527f6e7473206c656e67746820666f722061722073746f726167650000000000000060208201529150612593565b6020808252810161079e81612d17565b603b815260006020820160008051602061313583398151915281527f6e7473206c656e67746820666f7220697066732073746f72616765000000000060208201529150612593565b6020808252810161079e81612d6f565b60808101612dd582876124d8565b612de260208301866124ef565b612def60408301856124ef565b612a3860608301846124ef565b602981526000602082017f50726f7669646572436f6e74726f6c6c65723a20756e6b6e6f776e207265736f81526875726365207479706560b81b60208201529150612593565b6020808252810161079e81612dfc565b60408101612e6082856124d8565b610f5360208301846124ef565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a206163636f756e742065786973815261747360f01b60208201529150612593565b6020808252810161079e81612e6d565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150612837565b6020808252810161079e81612ebc565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150612593565b6020808252810161079e81612ef7565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150612593565b6020808252810161079e81612f52565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150612837565b6020808252810161079e81612faa565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150612593565b6020808252810161079e81612fee565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150612837565b6020808252810161079e8161303c565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150612837565b6020808252810161079e81613073565b61190160f01b815260020160006130ce82856124ef565b6020820191506130de82846124ef565b5060200192915050565b60a081016130f682886124ef565b61310360208301876124ef565b61311060408301866124ef565b61311d60608301856124ef565b61312a60808301846124d8565b969550505050505056fe50726f7669646572436f6e74726f6c6c65723a20696e76616c696420616d6f75a26469706673582212209a40833f38ec2d87c797b8e75e035fc8754b18de9278efdde827f090520d264c64736f6c63430008090033";
var ProviderController__factory = /** @class */ (function (_super) {
    __extends(ProviderController__factory, _super);
    function ProviderController__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ProviderController__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ProviderController__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ProviderController__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ProviderController__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ProviderController__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ProviderController__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ProviderController__factory.bytecode = _bytecode;
    ProviderController__factory.abi = _abi;
    return ProviderController__factory;
}(ethers_1.ContractFactory));
exports.ProviderController__factory = ProviderController__factory;
