/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPayment,
  SrcChainPaymentInterface,
} from "../SrcChainPayment";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "PaidV2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFeeV2",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessageV2",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "payV2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "payloadsValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b62000dd41760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b6127b780620001db6000396000f3fe60806040526004361061019c5760003560e01c80636f63d9ec116100ec57806393563a951161008a578063f2fde38b11610064578063f2fde38b146104ad578063f8c8765e146104cd578063fc0c546a146104ed578063fd6e54f01461050d57600080fd5b806393563a9514610440578063bc67f83214610460578063d67bdd251461048057600080fd5b806382dc1ec4116100c657806382dc1ec4146103c55780638456cb59146103e55780638c22ea5d146103fa5780638da5cb5b1461041a57600080fd5b80636f63d9ec1461036d578063715018a61461038057806380f51c121461039557600080fd5b806346fbf68e1161015957806363578efe1161013357806363578efe146102e0578063699256f4146103185780636b2c0f55146103385780636ef8d66d1461035857600080fd5b806346fbf68e1461027b5780635b45197d146102a85780635c975abb146102c857600080fd5b8063144fa6d7146101a15780631d1b6cab146101c35780631dee794a146101f9578063201ce97c1461022657806328ac7f2c146102395780633f4ba83a14610266575b600080fd5b3480156101ad57600080fd5b506101c16101bc3660046116b0565b61052d565b005b3480156101cf57600080fd5b506101e36101de3660046118f3565b61056c565b6040516101f09190611936565b60405180910390f35b34801561020557600080fd5b50610219610214366004611958565b610596565b6040516101f09190611a21565b6101e3610234366004611a64565b6105c6565b34801561024557600080fd5b506101e3610254366004611af7565b60cc6020526000908152604090205481565b34801561027257600080fd5b506101c1610782565b34801561028757600080fd5b5061029b610296366004611af7565b6107b1565b6040516101f09190611b20565b3480156102b457600080fd5b506102196102c3366004611b2e565b6107cf565b3480156102d457600080fd5b5060975460ff1661029b565b3480156102ec57600080fd5b506101e36102fb366004611bad565b60cd60209081526000928352604080842090915290825290205481565b34801561032457600080fd5b506101c1610333366004611bad565b610802565b34801561034457600080fd5b506101c1610353366004611af7565b6108b0565b34801561036457600080fd5b506101c16108e3565b6101c161037b366004611958565b6108ec565b34801561038c57600080fd5b506101c1610a89565b3480156103a157600080fd5b5061029b6103b0366004611af7565b60c96020526000908152604090205460ff1681565b3480156103d157600080fd5b506101c16103e0366004611af7565b610abd565b3480156103f157600080fd5b506101c1610af0565b34801561040657600080fd5b506101e3610415366004611b2e565b610b1d565b34801561042657600080fd5b506065546001600160a01b03166040516101f09190611bf3565b34801561044c57600080fd5b506101c161045b366004611c01565b610bb2565b34801561046c57600080fd5b506101c161047b3660046116b0565b610c23565b34801561048c57600080fd5b5060cb546104a0906001600160a01b031681565b6040516101f09190611c5b565b3480156104b957600080fd5b506101c16104c8366004611af7565b610c56565b3480156104d957600080fd5b506101c16104e8366004611c69565b610caf565b3480156104f957600080fd5b5060ca546104a0906001600160a01b031681565b34801561051957600080fd5b506101e3610528366004611958565b610d49565b6065546001600160a01b031633146105605760405162461bcd60e51b815260040161055790611cf6565b60405180910390fd5b61056981610de3565b50565b600061057782610e60565b60ca54909150610590906001600160a01b031682610f2d565b92915050565b60608383836040516020016105ad93929190611e45565b60405160208183030381529060405290505b9392505050565b60006105d460975460ff1690565b156105f15760405162461bcd60e51b815260040161055790611e99565b600260015414156106145760405162461bcd60e51b815260040161055790611edd565b6002600155600061062484610e60565b60ca5490915061063d906001600160a01b031682610f2d565b60ca54909150610658906001600160a01b0316333084610f8b565b60cb5460ca54610675916001600160a01b03918216911683610fe9565b60cb5460ca546001600160a01b039182169163f718845391349116848a8861069f8e838e8e6107cf565b60016040518863ffffffff1660e01b81526004016106c296959493929190611f37565b6020604051808303818588803b1580156106db57600080fd5b505af11580156106ef573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107149190611f98565b60cb5460ca54919350610735916001600160a01b0390811691166000610fe9565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf878787878760405161076c959493929190611fb9565b60405180910390a1506001805595945050505050565b61078b336107b1565b6107a75760405162461bcd60e51b81526004016105579061203e565b6107af6110b1565b565b6001600160a01b0316600090815260c9602052604090205460ff1690565b6060848484846040516020016107e8949392919061204e565b60405160208183030381529060405290505b949350505050565b6065546001600160a01b0316331461082c5760405162461bcd60e51b815260040161055790611cf6565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806108725760405162461bcd60e51b8152600401610557906120d7565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516108a39291906120e7565b60405180910390a1505050565b6065546001600160a01b031633146108da5760405162461bcd60e51b815260040161055790611cf6565b61056981611117565b6107af33611117565b60975460ff161561090f5760405162461bcd60e51b815260040161055790611e99565b600260015414156109325760405162461bcd60e51b815260040161055790611edd565b600260015560006109428261056c565b6001600160a01b038516600090815260cc6020526040902054909150610969908290612118565b6001600160a01b038516600090815260cc602090815260408083209390935560cd8152828220868352905220546109a1908290612118565b6001600160a01b03808616600090815260cd6020908152604080832088845290915290209190915560ca546109d99116333084610f8b565b60cb546001600160a01b03166382646a58346109f6878787610596565b6040518363ffffffff1660e01b8152600401610a129190611a21565b6000604051808303818588803b158015610a2b57600080fd5b505af1158015610a3f573d6000803e3d6000fd5b50505050507fa5e8ac6f0e257373f82e6696a38a9acc7b1d97e8435d3262f297f8ba36815e2c848484604051610a7793929190611e45565b60405180910390a15050600180555050565b6065546001600160a01b03163314610ab35760405162461bcd60e51b815260040161055790611cf6565b6107af600061118c565b6065546001600160a01b03163314610ae75760405162461bcd60e51b815260040161055790611cf6565b610569816111de565b610af9336107b1565b610b155760405162461bcd60e51b81526004016105579061203e565b6107af611257565b60cb546000906001600160a01b0316635335dca2610b3d878787876107cf565b6040518263ffffffff1660e01b8152600401610b599190611a21565b60206040518083038186803b158015610b7157600080fd5b505afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190611f98565b95945050505050565b6065546001600160a01b03163314610bdc5760405162461bcd60e51b815260040161055790611cf6565b610bf06001600160a01b03841683836112af565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516108a393929190612130565b6065546001600160a01b03163314610c4d5760405162461bcd60e51b815260040161055790611cf6565b610569816112ce565b6065546001600160a01b03163314610c805760405162461bcd60e51b815260040161055790611cf6565b6001600160a01b038116610ca65760405162461bcd60e51b81526004016105579061219b565b6105698161118c565b6000610cbb600161133f565b90508015610cd3576000805461ff0019166101001790555b610cdc8561118c565b610ce5846113cc565b610cee836113f3565b610cf78261141a565b8015610d42576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610d39906001906121bf565b60405180910390a15b5050505050565b60cb546000906001600160a01b0316635335dca2610d68868686610596565b6040518263ffffffff1660e01b8152600401610d849190611a21565b60206040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190611f98565b6001600160a01b03163b151590565b6001600160a01b038116610e095760405162461bcd60e51b815260040161055790612201565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610e5591611c5b565b60405180910390a150565b600080825111610e825760405162461bcd60e51b815260040161055790612253565b60005b8251811015610f275760005b838281518110610ea357610ea3612263565b60200260200101516020015151811015610f1457610f00848381518110610ecc57610ecc612263565b6020026020010151602001518281518110610ee957610ee9612263565b60200260200101518461144190919063ffffffff16565b925080610f0c81612279565b915050610e91565b5080610f1f81612279565b915050610e85565b50919050565b600080610f398461144d565b90506012808211610f6c57610f63610f5182846114de565b610f5c90600a6123a2565b85906114ea565b92505050610590565b610ba9610f7983836114de565b610f8490600a6123a2565b85906114f6565b610fe3846323b872dd60e01b858585604051602401610fac939291906123b1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611502565b50505050565b8015806110715750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061101f90309086906004016123bf565b60206040518083038186803b15801561103757600080fd5b505afa15801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190611f98565b155b61108d5760405162461bcd60e51b81526004016105579061242d565b6110ac8363095ea7b360e01b8484604051602401610fac92919061243d565b505050565b60975460ff166110d35760405162461bcd60e51b815260040161055790612476565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161110d9190611bf3565b60405180910390a1565b611120816107b1565b61113c5760405162461bcd60e51b8152600401610557906124ba565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610e55908390611bf3565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111e7816107b1565b156112045760405162461bcd60e51b815260040161055790612508565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610e55908390611bf3565b60975460ff161561127a5760405162461bcd60e51b815260040161055790611e99565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111003390565b6110ac8363a9059cbb60e01b8484604051602401610fac92919061243d565b6001600160a01b0381166112f45760405162461bcd60e51b815260040161055790612201565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610e55908390611c5b565b60008054610100900460ff1615611386578160ff1660011480156113625750303b155b61137e5760405162461bcd60e51b815260040161055790612563565b506000919050565b60005460ff8084169116106113ad5760405162461bcd60e51b815260040161055790612563565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610ae75760405162461bcd60e51b8152600401610557906125bb565b600054610100900460ff16610c4d5760405162461bcd60e51b8152600401610557906125bb565b600054610100900460ff166105605760405162461bcd60e51b8152600401610557906125bb565b60006105bf8284612118565b6000806000836001600160a01b0316604051611468906125cb565b600060405180830381855afa9150503d80600081146114a3576040519150601f19603f3d011682016040523d82523d6000602084013e6114a8565b606091505b5091509150816114ca5760405162461bcd60e51b815260040161055790612614565b808060200190518101906107fa9190611f98565b60006105bf8284612624565b60006105bf8284612651565b60006105bf8284612665565b6000611557826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115919092919063ffffffff16565b8051909150156110ac57808060200190518101906115759190612697565b6110ac5760405162461bcd60e51b8152600401610557906126ff565b60606107fa8484600085856001600160a01b0385163b6115c35760405162461bcd60e51b815260040161055790612743565b600080866001600160a01b031685876040516115df9190612775565b60006040518083038185875af1925050503d806000811461161c576040519150601f19603f3d011682016040523d82523d6000602084013e611621565b606091505b509150915061163182828661163c565b979650505050505050565b6060831561164b5750816105bf565b82511561165b5782518084602001fd5b8160405162461bcd60e51b81526004016105579190611a21565b60006001600160a01b038216610590565b600061059082611675565b61169a81611686565b811461056957600080fd5b803561059081611691565b6000602082840312156116c5576116c5600080fd5b60006107fa84846116a5565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561170d5761170d6116d1565b6040525050565b600061171f60405190565b90506113c782826116e7565b600067ffffffffffffffff821115611745576117456116d1565b5060209081020190565b6005811061056957600080fd5b80356105908161174f565b8061169a565b803561059081611767565b600061178b6117868461172b565b611714565b838152905060208082019084028301858111156117aa576117aa600080fd5b835b818110156117ce57806117bf888261176d565b845250602092830192016117ac565b5050509392505050565b600082601f8301126117ec576117ec600080fd5b81356107fa848260208601611778565b60006040828403121561181157611811600080fd5b61181b6040611714565b90506000611829848461175c565b825250602082013567ffffffffffffffff81111561184957611849600080fd5b611855848285016117d8565b60208301525092915050565b600061186f6117868461172b565b8381529050602080820190840283018581111561188e5761188e600080fd5b835b818110156117ce57803567ffffffffffffffff8111156118b2576118b2600080fd5b8086016118bf89826117fc565b8552505060209283019201611890565b600082601f8301126118e3576118e3600080fd5b81356107fa848260208601611861565b60006020828403121561190857611908600080fd5b813567ffffffffffffffff81111561192257611922600080fd5b6107fa848285016118cf565b805b82525050565b60208101610590828461192e565b61169a81611675565b803561059081611944565b60008060006060848603121561197057611970600080fd5b600061197c868661194d565b935050602061198d8682870161176d565b925050604084013567ffffffffffffffff8111156119ad576119ad600080fd5b6119b9868287016118cf565b9150509250925092565b60005b838110156119de5781810151838201526020016119c6565b83811115610fe35750506000910152565b60006119f9825190565b808452602084019350611a108185602086016119c3565b601f01601f19169290920192915050565b602080825281016105bf81846119ef565b67ffffffffffffffff811661169a565b803561059081611a32565b63ffffffff811661169a565b803561059081611a4d565b600080600080600060a08688031215611a7f57611a7f600080fd5b6000611a8b888861194d565b9550506020611a9c88828901611a42565b9450506040611aad8882890161176d565b935050606086013567ffffffffffffffff811115611acd57611acd600080fd5b611ad9888289016118cf565b9250506080611aea88828901611a59565b9150509295509295909350565b600060208284031215611b0c57611b0c600080fd5b60006107fa848461194d565b801515611930565b602081016105908284611b18565b60008060008060808587031215611b4757611b47600080fd5b6000611b53878761194d565b9450506020611b6487828801611a42565b9350506040611b758782880161176d565b925050606085013567ffffffffffffffff811115611b9557611b95600080fd5b611ba1878288016118cf565b91505092959194509250565b60008060408385031215611bc357611bc3600080fd5b6000611bcf858561194d565b9250506020611be08582860161176d565b9150509250929050565b61193081611675565b602081016105908284611bea565b600080600060608486031215611c1957611c19600080fd5b6000611c2586866116a5565b9350506020611c368682870161194d565b92505060406119b98682870161176d565b600061059082611686565b61193081611c47565b602081016105908284611c52565b60008060008060808587031215611c8257611c82600080fd5b6000611c8e878761194d565b9450506020611c9f8782880161194d565b9350506040611cb0878288016116a5565b9250506060611ba1878288016116a5565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161059081611cc1565b634e487b7160e01b600052602160045260246000fd5b6005811061056957610569611d06565b806113c781611d1c565b600061059082611d2c565b61193081611d36565b6000611d56838361192e565b505060200190565b6000611d68825190565b80845260209384019383018060005b83811015611d9c578151611d8b8882611d4a565b975060208301925050600101611d77565b509495945050505050565b80516000906040840190611dbb8582611d41565b5060208301518482036020860152610ba98282611d5e565b60006105bf8383611da7565b6000611de9825190565b80845260208401935083602082028501611e038560200190565b8060005b85811015611e385784840389528151611e208582611dd3565b94506020830160209a909a0199925050600101611e07565b5091979650505050505050565b60608101611e538286611bea565b611e60602083018561192e565b8181036040830152610ba98184611ddf565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150611cef565b6020808252810161059081611e72565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150611cef565b6020808252810161059081611ea9565b67ffffffffffffffff8116611930565b63ffffffff8116611930565b6007811061056957610569611d06565b806113c781611f09565b600061059082611f19565b61193081611f23565b60c08101611f458289611bea565b611f52602083018861192e565b611f5f6040830187611eed565b611f6c6060830186611efd565b8181036080830152611f7e81856119ef565b905061163160a0830184611f2e565b805161059081611767565b600060208284031215611fad57611fad600080fd5b60006107fa8484611f8d565b60a08101611fc78288611bea565b611fd46020830187611eed565b611fe1604083018661192e565b8181036060830152611ff38185611ddf565b90506120026080830184611efd565b9695505050505050565b60208082527f5061757365723a2063616c6c6572206973206e6f74207468652070617573657291019081526000611cef565b602080825281016105908161200c565b6080810161205c8287611bea565b6120696020830186611eed565b612076604083018561192e565b81810360608301526120028184611ddf565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b602082015291505b5060400190565b6020808252810161059081612088565b604081016120f58285611c52565b6105bf602083018461192e565b634e487b7160e01b600052601160045260246000fd5b6000821982111561212b5761212b612102565b500190565b6060810161213e8286611c52565b61214b6020830185611bea565b6107fa604083018461192e565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506120d0565b6020808252810161059081612158565b600060ff8216610590565b611930816121ab565b6020810161059082846121b6565b601d81526000602082017f537263436861696e5061796d656e743a207a65726f206164647265737300000081529150611cef565b60208082528101610590816121cd565b602581526000602082017f5265736f75726365446174613a20696e76616c6964207061796c6f616473206c8152640cadccee8d60db1b602082015291506120d0565b6020808252810161059081612211565b634e487b7160e01b600052603260045260246000fd5b600060001982141561228d5761228d612102565b5060010190565b80825b60018511156122d3578086048111156122b2576122b2612102565b60018516156122c057908102905b80026122cc8560011c90565b9450612297565b94509492505050565b6000826122eb575060016105bf565b816122f8575060006105bf565b816001811461230e576002811461231857612345565b60019150506105bf565b60ff84111561232957612329612102565b8360020a91508482111561233f5761233f612102565b506105bf565b5060208310610133831016604e8410600b8410161715612378575081810a8381111561237357612373612102565b6105bf565b6123858484846001612294565b9250905081840481111561239b5761239b612102565b0292915050565b60006105bf60001984846122dc565b6060810161213e8286611bea565b604081016123cd8285611bea565b6105bf6020830184611bea565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015291506120d0565b60208082528101610590816123da565b604081016120f58285611bea565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150611cef565b602080825281016105908161244b565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150611cef565b6020808252810161059081612486565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506120d0565b60208082528101610590816124ca565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506120d0565b6020808252810161059081612518565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506120d0565b6020808252810161059081612573565b63313ce56760e01b8152600060048201610590565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e000000000081529150611cef565b60208082528101610590816125e0565b60008282101561263657612636612102565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826126605761266061263b565b500490565b600081600019048311821515161561267f5761267f612102565b500290565b80151561169a565b805161059081612684565b6000602082840312156126ac576126ac600080fd5b60006107fa848461268c565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506120d0565b60208082528101610590816126b8565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611cef565b602080825281016105908161270f565b600061275d825190565b61276b8185602086016119c3565b9290920192915050565b60006105bf828461275356fea264697066735822122021f74a0a15ecde4b90ec83d62f3ca37889ac2829e6f95d2aa60abdba6baab9e764736f6c63430008090033";

export class SrcChainPayment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPayment> {
    return super.deploy(overrides || {}) as Promise<SrcChainPayment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainPayment {
    return super.attach(address) as SrcChainPayment;
  }
  connect(signer: Signer): SrcChainPayment__factory {
    return super.connect(signer) as SrcChainPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentInterface {
    return new utils.Interface(_abi) as SrcChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPayment {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPayment;
  }
}
