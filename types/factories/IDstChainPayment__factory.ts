/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IDstChainPayment,
  IDstChainPaymentInterface,
} from "../IDstChainPayment";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "account",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum ResourceData.ResourceType",
                name: "resourceType",
                type: "uint8",
              },
              {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
              },
            ],
            internalType: "struct ResourceData.ValuePayload[]",
            name: "payloads",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IDstChainPayment.PaymentPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "decodeSourceChainMessage",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.ValuePayload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getAmountOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getValueOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "storageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationFee",
        type: "uint256",
      },
    ],
    name: "ipfsAllocations",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "ipfsAlloctionsFee",
    outputs: [
      {
        internalType: "uint256",
        name: "storageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "account",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum ResourceData.ResourceType",
                name: "resourceType",
                type: "uint8",
              },
              {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
              },
            ],
            internalType: "struct ResourceData.ValuePayload[]",
            name: "payloads",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDstChainPayment.PaymentPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dstAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "payFromSourceChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
    ],
    name: "priceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IDstChainPayment__factory {
  static readonly abi = _abi;
  static createInterface(): IDstChainPaymentInterface {
    return new utils.Interface(_abi) as IDstChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDstChainPayment {
    return new Contract(address, _abi, signerOrProvider) as IDstChainPayment;
  }
}
