"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DstChainPaymentV2Registration__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NativeWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                indexed: false,
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Paid",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "celerExec",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "decodeMessage",
        outputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "fee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "enum ResourceData.ResourceType",
                name: "resourceType",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "getAmountOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "enum ResourceData.ResourceType",
                name: "resourceType",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "getValueOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "hashTypedDataV4ForVoucher",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "hashVoucherTypes",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "string",
                name: "types",
                type: "string",
            },
        ],
        name: "initializeEIP712",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "storageFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expirationFee",
                type: "uint256",
            },
        ],
        name: "ipfsAllocations",
        outputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        name: "ipfsAlloctionsFee",
        outputs: [
            {
                internalType: "uint256",
                name: "storageFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expirationFee",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawNative",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "pay",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.ValuePayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "voucherSig",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "registrationSig",
                type: "bytes",
            },
        ],
        name: "payWithRegistration",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "enum ResourceData.ResourceType",
                name: "resourceType",
                type: "uint8",
            },
        ],
        name: "priceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
        ],
        name: "providerBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "voucherTypedHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "vouchers",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50614309806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806380f51c121161010f578063a322c81d116100a2578063eec9a00d11610071578063eec9a00d14610442578063f2fde38b14610455578063f887ea4014610468578063f8eb66241461048857600080fd5b8063a322c81d146103bd578063b76bfac2146103f3578063ce841dd21461041c578063e1e382d91461042f57600080fd5b80638da5cb5b116100de5780638da5cb5b1461035d57806393563a95146103765780639412cbe51461038957806394e48f891461039c57600080fd5b806380f51c1214610315578063827fbd1d1461033857806382dc1ec4146103425780638456cb591461035557600080fd5b80636267834e116101875780636b2c0f55116101565780636b2c0f55146102df5780636ef8d66d146102f257806370a08231146102fa578063715018a61461030d57600080fd5b80636267834e14610281578063634d45b21461029457806365d6b40c146102b9578063699256f4146102cc57600080fd5b806342747d90116101c357806342747d901461023057806346fbf68e146102435780635c975abb146102635780635e1a544c1461026e57600080fd5b806309d629ef146101ea57806335da9b23146102135780633f4ba83a14610226575b600080fd5b6101fd6101f83660046128db565b6104b4565b60405161020a9190612947565b60405180910390f35b6101fd61022136600461296d565b6104f3565b61022e61060a565b005b6101fd61023e3660046128db565b610642565b6102566102513660046129bd565b610661565b60405161020a91906129e6565b60975460ff16610256565b6101fd61027c3660046129f4565b61067f565b61022e61028f366004612a82565b610793565b6102a76102a2366004612bbd565b61099c565b60405161020a96959493929190612d9d565b6101fd6102c736600461296d565b6109ce565b61022e6102da366004612e04565b610a8a565b61022e6102ed3660046129bd565b610b38565b61022e610b6e565b6101fd6103083660046129bd565b610b77565b61022e610ca7565b6102566103233660046129bd565b60c96020526000908152604090205460ff1681565b6101fd6101015481565b61022e6103503660046129bd565b610cdb565b61022e610d0e565b6065546001600160a01b031660405161020a9190612e37565b61022e610384366004612e64565b610d3b565b61022e610397366004612e99565b610dac565b6103af6103aa3660046128db565b610e80565b60405161020a929190612f2c565b6101fd6103cb366004612e04565b6001600160a01b0391909116600090815260cc60209081526040808320938352929052205490565b6101fd6104013660046129bd565b6001600160a01b0316600090815260cb602052604090205490565b6103af61042a3660046128db565b611140565b6101fd61043d3660046130de565b611346565b6101fd61045036600461319c565b611494565b61022e6104633660046129bd565b6116d1565b60ca5461047b906001600160a01b031681565b60405161020a919061329d565b6101fd610496366004612e04565b61010260209081526000928352604080842090915290825290205481565b600061010154858585856040516020016104d29594939291906132ab565b6040516020818303038152906040528051906020012090505b949350505050565b60008060ca60009054906101000a90046001600160a01b03166001600160a01b03166337187fc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561054457600080fd5b505afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190613302565b6040516335da9b2360e01b81529091506001600160a01b038216906335da9b23906105af90889088908890600401613323565b60206040518083038186803b1580156105c757600080fd5b505afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190613356565b9150505b9392505050565b61061333610661565b6106385760405162461bcd60e51b815260040161062f906133ac565b60405180910390fd5b61064061172a565b565b6000610658610653868686866104b4565b611790565b95945050505050565b6001600160a01b0316600090815260c9602052604090205460ff1690565b60008060ca60009054906101000a90046001600160a01b03166001600160a01b03166337187fc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d057600080fd5b505afa1580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190613302565b604051631786951360e21b81529091506001600160a01b03821690635e1a544c9061073990879087906004016133bc565b60206040518083038186803b15801561075157600080fd5b505afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107899190613356565b9150505b92915050565b60ca54604080516303bf7e6b60e21b815290516000926001600160a01b031691630efdf9ac916004808301926020929190829003018186803b1580156107d857600080fd5b505afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081091906133e2565b9050336001600160a01b0382161461083a5760405162461bcd60e51b815260040161062f90613450565b60975460ff161561085d5760405162461bcd60e51b815260040161062f90613487565b6000806000806000806108a589898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061099c92505050565b955095509550955095509550600060ca60009054906101000a90046001600160a01b03166001600160a01b031663c24126766040518163ffffffff1660e01b815260040160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190613302565b9050600061094c828989898989896117a3565b90507fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a88888884898960405161098796959493929190613497565b60405180910390a15050505050505050505050565b60008060606000806060868060200190518101906109ba91906136ae565b949c939b5091995097509550909350915050565b60008060ca60009054906101000a90046001600160a01b03166001600160a01b03166337187fc36040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1f57600080fd5b505afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190613302565b604051631975ad0360e21b81529091506001600160a01b038216906365d6b40c906105af90889088908890600401613323565b6065546001600160a01b03163314610ab45760405162461bcd60e51b815260040161062f90613791565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f19350505050905080610afa5760405162461bcd60e51b815260040161062f906137ed565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e48278383604051610b2b9291906137fd565b60405180910390a1505050565b6065546001600160a01b03163314610b625760405162461bcd60e51b815260040161062f90613791565b610b6b81611b27565b50565b61064033611b27565b60ca54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610bbc57600080fd5b505afa158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190613302565b6001600160a01b0316636b074a07836040518263ffffffff1660e01b8152600401610c1f9190612e37565b60206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f919061381e565b610c8b5760405162461bcd60e51b815260040161062f90613881565b506001600160a01b0316600090815260cb602052604090205490565b6065546001600160a01b03163314610cd15760405162461bcd60e51b815260040161062f90613791565b6106406000611ba7565b6065546001600160a01b03163314610d055760405162461bcd60e51b815260040161062f90613791565b610b6b81611bf9565b610d1733610661565b610d335760405162461bcd60e51b815260040161062f906133ac565b610640611c72565b6065546001600160a01b03163314610d655760405162461bcd60e51b815260040161062f90613791565b610d796001600160a01b0384168383611cca565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398838383604051610b2b93929190613891565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314610df55760405162461bcd60e51b815260040161062f906138ee565b60026000610e0282611d25565b90508015610e1a576000805461ff0019166101001790555b610e248585611db2565b82516020840120610101558015610e79576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610e70908490613907565b60405180910390a15b5050505050565b600080600060ca60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed357600080fd5b505afa158015610ee7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0b9190613302565b60405162f304db60e01b8152909150879087906001600160a01b0384169062f304db90610f3e9085908590600401613915565b60206040518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061381e565b15610fde57600087118015610fa35750600086115b610fbf5760405162461bcd60e51b815260040161062f90613973565b610fcb826004896104f3565b9450610fd78587611de7565b9350611134565b6000871180610fed5750600086115b6110095760405162461bcd60e51b815260040161062f906139b7565b611097611090836004866001600160a01b0316633a01873287876040518363ffffffff1660e01b8152600401611040929190613915565b60206040518083038186803b15801561105857600080fd5b505afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190613356565b8890611de7565b945061113161112a8360046102218b886001600160a01b0316634d30b6be89896040518363ffffffff1660e01b81526004016110d4929190613915565b60206040518083038186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190613356565b90611df3565b8790611de7565b93505b50505094509492505050565b600080600060ca60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561119357600080fd5b505afa1580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb9190613302565b60405162f304db60e01b8152909150879087906001600160a01b0384169062f304db906111fe9085908590600401613915565b60206040518083038186803b15801561121657600080fd5b505afa15801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e919061381e565b156112a0576000871180156112635750600086115b61127f5760405162461bcd60e51b815260040161062f90613973565b61129461128d83600461067f565b8890611dff565b9450610fd78688611dff565b60008711806112af5750600086115b6112cb5760405162461bcd60e51b815260040161062f906139b7565b61130261128d836004866001600160a01b0316633a01873287876040518363ffffffff1660e01b8152600401611040929190613915565b945061113161133f83600461022189886001600160a01b0316634d30b6be89896040518363ffffffff1660e01b81526004016110d4929190613915565b8790611dff565b600061135460975460ff1690565b156113715760405162461bcd60e51b815260040161062f90613487565b600260015414156113945760405162461bcd60e51b815260040161062f906139fb565b600260015560ca5460408051636120933b60e11b815290516000926001600160a01b03169163c2412676916004808301926020929190829003018186803b1580156113de57600080fd5b505afa1580156113f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114169190613302565b9050611427818989898989896117a3565b91508115611444576114446001600160a01b038216333085611e0b565b7fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a88888885898960405161147d96959493929190613497565b60405180910390a150600180559695505050505050565b60006114a260975460ff1690565b156114bf5760405162461bcd60e51b815260040161062f90613487565b600260015414156114e25760405162461bcd60e51b815260040161062f906139fb565b600260015560ca54604080516350e420e560e11b815290516000926001600160a01b03169163a1c841ca916004808301926020929190829003018186803b15801561152c57600080fd5b505afa158015611540573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115649190613302565b6040516382f19cf760e01b81529091506001600160a01b038216906382f19cf790611597908c908c908890600401613a0b565b600060405180830381600087803b1580156115b157600080fd5b505af11580156115c5573d6000803e3d6000fd5b50505050600060ca60009054906101000a90046001600160a01b03166001600160a01b031663c24126766040518163ffffffff1660e01b815260040160206040518083038186803b15801561161957600080fd5b505afa15801561162d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116519190613302565b9050611662818b8b8b8b8b8b6117a3565b9250821561167f5761167f6001600160a01b038216333086611e0b565b7fd69233c4d4c07911a44762fb49e793100eb94db44cf846ddcec7f6210e9c143a8a8a8a868b8b6040516116b896959493929190613497565b60405180910390a1505060018055979650505050505050565b6065546001600160a01b031633146116fb5760405162461bcd60e51b815260040161062f90613791565b6001600160a01b0381166117215760405162461bcd60e51b815260040161062f90613a7b565b610b6b81611ba7565b60975460ff1661174c5760405162461bcd60e51b815260040161062f90613ab6565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516117869190612e37565b60405180910390a1565b600061078d61179d611e32565b83611e6e565b60ca54604080516350e420e560e11b815290516000926001600160a01b03169163a1c841ca916004808301926020929190829003018186803b1580156117e857600080fd5b505afa1580156117fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118209190613302565b6001600160a01b0316632d52976488886040518363ffffffff1660e01b815260040161184d929190613915565b60206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189d919061381e565b6118b95760405162461bcd60e51b815260040161062f90613b07565b6118c4878787611ea1565b90508215611a88576001600160a01b0387166000908152610102602090815260408083208784529091529020541561190e5760405162461bcd60e51b815260040161062f90613b4b565b600061191c88888787610642565b905060ca60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561196c57600080fd5b505afa158015611980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a49190613302565b6001600160a01b031663238a4d1e8983866040518463ffffffff1660e01b81526004016119d393929190613a0b565b602060405180830381600087803b1580156119ed57600080fd5b505af1158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a25919061381e565b611a415760405162461bcd60e51b815260040161062f90613b9a565b83821115611a5a57611a538483613bc0565b9150611a5f565b600091505b506001600160a01b03871660009081526101026020908152604080832087845290915290208390555b8015611b1c57611a9888826125c1565b6001600160a01b038816600090815260cb6020526040902054909150611abf908290613bd7565b6001600160a01b038816600090815260cb602090815260408083209390935560cc815282822089835290522054611af7908290613bd7565b6001600160a01b038816600090815260cc602090815260408083208a84529091529020555b979650505050505050565b611b3081610661565b611b4c5760405162461bcd60e51b815260040161062f90613c23565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90611b9c908390612e37565b60405180910390a150565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611c0281610661565b15611c1f5760405162461bcd60e51b815260040161062f90613c71565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890611b9c908390612e37565b60975460ff1615611c955760405162461bcd60e51b815260040161062f90613487565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117793390565b611d208363a9059cbb60e01b8484604051602401611ce9929190613915565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261261f565b505050565b60008054610100900460ff1615611d6c578160ff166001148015611d485750303b155b611d645760405162461bcd60e51b815260040161062f90613ccc565b506000919050565b60005460ff808416911610611d935760405162461bcd60e51b815260040161062f90613ccc565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16611dd95760405162461bcd60e51b815260040161062f90613d24565b611de382826126ae565b5050565b60006106038284613d34565b60006106038284613bd7565b60006106038284613d69565b611e2c846323b872dd60e01b858585604051602401611ce993929190613d7d565b50505050565b6000611e697f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611e6160cd5490565b60ce546126ef565b905090565b60008282604051602001611e83929190613d91565b60405160208183030381529060405280519060200120905092915050565b600080825111611ec35760405162461bcd60e51b815260040161062f90613e00565b60ca54604080516337187fc360e01b815290516000926001600160a01b0316916337187fc3916004808301926020929190829003018186803b158015611f0857600080fd5b505afa158015611f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f409190613302565b905060005b83518110156125b8576000848281518110611f6257611f62613e10565b6020026020010151905060016004811115611f7f57611f7f612c00565b81516004811115611f9257611f92612c00565b141561215057806020015151600114611fbd5760405162461bcd60e51b815260040161062f90613e67565b6000836001600160a01b03166365d6b40c8984600001518560200151600081518110611feb57611feb613e10565b60200260200101516040518463ffffffff1660e01b815260040161201193929190613323565b60206040518083038186803b15801561202957600080fd5b505afa15801561203d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120619190613356565b905060ca60009054906101000a90046001600160a01b03166001600160a01b03166322b31aba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120b157600080fd5b505afa1580156120c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e99190613302565b6001600160a01b0316630de482878989846040518463ffffffff1660e01b815260040161211893929190613e77565b600060405180830381600087803b15801561213257600080fd5b505af1158015612146573d6000803e3d6000fd5b505050505061254f565b60038151600481111561216557612165612c00565b1415612284578060200151516001146121905760405162461bcd60e51b815260040161062f90613ed0565b6000836001600160a01b03166365d6b40c89846000015185602001516000815181106121be576121be613e10565b60200260200101516040518463ffffffff1660e01b81526004016121e493929190613323565b60206040518083038186803b1580156121fc57600080fd5b505afa158015612210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122349190613356565b905060ca60009054906101000a90046001600160a01b03166001600160a01b031663a2d2f2db6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120b157600080fd5b60028151600481111561229957612299612c00565b14156123b8578060200151516001146122c45760405162461bcd60e51b815260040161062f90613f1e565b6000836001600160a01b03166365d6b40c89846000015185602001516000815181106122f2576122f2613e10565b60200260200101516040518463ffffffff1660e01b815260040161231893929190613323565b60206040518083038186803b15801561233057600080fd5b505afa158015612344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123689190613356565b905060ca60009054906101000a90046001600160a01b03166001600160a01b031663f931ca566040518163ffffffff1660e01b815260040160206040518083038186803b1580156120b157600080fd5b6004815160048111156123cd576123cd612c00565b1415612537578060200151516002146123f85760405162461bcd60e51b815260040161062f90613f6e565b6000806124438989856020015160008151811061241757612417613e10565b6020026020010151866020015160018151811061243657612436613e10565b6020026020010151611140565b9150915060ca60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561249557600080fd5b505afa1580156124a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cd9190613302565b6001600160a01b031663a5a2d6178a8a85856040518563ffffffff1660e01b81526004016124fe9493929190613f7e565b600060405180830381600087803b15801561251857600080fd5b505af115801561252c573d6000803e3d6000fd5b50505050505061254f565b60405162461bcd60e51b815260040161062f90613ff6565b60005b8160200151518110156125a35761258f8260200151828151811061257857612578613e10565b602002602001015186611df390919063ffffffff16565b94508061259b81614006565b915050612552565b505080806125b090614006565b915050611f45565b50509392505050565b6000806125cd84612729565b90506012808211612600576125f76125e582846127ba565b6125f090600a61412f565b8590611dff565b9250505061078d565b61065861260d83836127ba565b61261890600a61412f565b8590611de7565b6000612674826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127c69092919063ffffffff16565b805190915015611d205780806020019051810190612692919061381e565b611d205760405162461bcd60e51b815260040161062f90614185565b600054610100900460ff166126d55760405162461bcd60e51b815260040161062f90613d24565b81516020928301208151919092012060cd9190915560ce55565b6000838383463060405160200161270a959493929190614195565b6040516020818303038152906040528051906020012090509392505050565b6000806000836001600160a01b0316604051612744906141d7565b600060405180830381855afa9150503d806000811461277f576040519150601f19603f3d011682016040523d82523d6000602084013e612784565b606091505b5091509150816127a65760405162461bcd60e51b815260040161062f90614220565b808060200190518101906104eb9190613356565b60006106038284613bc0565b60606104eb8484600085856001600160a01b0385163b6127f85760405162461bcd60e51b815260040161062f90614264565b600080866001600160a01b031685876040516128149190614296565b60006040518083038185875af1925050503d8060008114612851576040519150601f19603f3d011682016040523d82523d6000602084013e612856565b606091505b5091509150611b1c82828660608315612870575081610603565b8251156128805782518084602001fd5b8160405162461bcd60e51b815260040161062f91906142a2565b60006001600160a01b03821661078d565b6128b48161289a565b8114610b6b57600080fd5b803561078d816128ab565b806128b4565b803561078d816128ca565b600080600080608085870312156128f4576128f4600080fd5b600061290087876128bf565b9450506020612911878288016128d0565b9350506040612922878288016128d0565b9250506060612933878288016128d0565b91505092959194509250565b805b82525050565b6020810161078d828461293f565b60058110610b6b57600080fd5b803561078d81612955565b60008060006060848603121561298557612985600080fd5b600061299186866128bf565b93505060206129a286828701612962565b92505060406129b3868287016128d0565b9150509250925092565b6000602082840312156129d2576129d2600080fd5b600061078984846128bf565b801515612941565b6020810161078d82846129de565b60008060408385031215612a0a57612a0a600080fd5b6000612a1685856128bf565b9250506020612a2785828601612962565b9150509250929050565b60008083601f840112612a4657612a46600080fd5b5081356001600160401b03811115612a6057612a60600080fd5b602083019150836001820283011115612a7b57612a7b600080fd5b9250929050565b60008060208385031215612a9857612a98600080fd5b82356001600160401b03811115612ab157612ab1600080fd5b612abd85828601612a31565b92509250509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715612b0457612b04612ac9565b6040525050565b6000612b1660405190565b9050611dad8282612adf565b60006001600160401b03821115612b3b57612b3b612ac9565b601f19601f83011660200192915050565b82818337506000910152565b6000612b6b612b6684612b22565b612b0b565b905082815260208101848484011115612b8657612b86600080fd5b612b91848285612b4c565b509392505050565b600082601f830112612bad57612bad600080fd5b8135610789848260208601612b58565b600060208284031215612bd257612bd2600080fd5b81356001600160401b03811115612beb57612beb600080fd5b61078984828501612b99565b6129418161289a565b634e487b7160e01b600052602160045260246000fd5b60058110610b6b57610b6b612c00565b80611dad81612c16565b600061078d82612c26565b61294181612c30565b6000612c50838361293f565b505060200190565b6000612c62825190565b80845260209384019383018060005b83811015612c96578151612c858882612c44565b975060208301925050600101612c71565b509495945050505050565b80516000906040840190612cb58582612c3b565b50602083015184820360208601526106588282612c58565b60006106038383612ca1565b6000612ce3825190565b80845260208401935083602082028501612cfd8560200190565b8060005b85811015612d325784840389528151612d1a8582612ccd565b94506020830160209a909a0199925050600101612d01565b5091979650505050505050565b60005b83811015612d5a578181015183820152602001612d42565b83811115611e2c5750506000910152565b6000612d75825190565b808452602084019350612d8c818560208601612d3f565b601f01601f19169290920192915050565b60c08101612dab8289612bf7565b612db8602083018861293f565b8181036040830152612dca8187612cd9565b9050612dd9606083018661293f565b612de6608083018561293f565b81810360a0830152612df88184612d6b565b98975050505050505050565b60008060408385031215612e1a57612e1a600080fd5b6000612e2685856128bf565b9250506020612a27858286016128d0565b6020810161078d8284612bf7565b600061078d8261289a565b6128b481612e45565b803561078d81612e50565b600080600060608486031215612e7c57612e7c600080fd5b6000612e888686612e59565b93505060206129a2868287016128bf565b600080600060608486031215612eb157612eb1600080fd5b83356001600160401b03811115612eca57612eca600080fd5b612ed686828701612b99565b93505060208401356001600160401b03811115612ef557612ef5600080fd5b612f0186828701612b99565b92505060408401356001600160401b03811115612f2057612f20600080fd5b6129b386828701612b99565b60408101612f3a828561293f565b610603602083018461293f565b60006001600160401b03821115612f6057612f60612ac9565b5060209081020190565b6000612f78612b6684612f47565b83815290506020808201908402830185811115612f9757612f97600080fd5b835b81811015612fbb5780612fac88826128d0565b84525060209283019201612f99565b5050509392505050565b600082601f830112612fd957612fd9600080fd5b8135610789848260208601612f6a565b600060408284031215612ffe57612ffe600080fd5b6130086040612b0b565b905060006130168484612962565b82525060208201356001600160401b0381111561303557613035600080fd5b61304184828501612fc5565b60208301525092915050565b600061305b612b6684612f47565b8381529050602080820190840283018581111561307a5761307a600080fd5b835b81811015612fbb5780356001600160401b0381111561309d5761309d600080fd5b8086016130aa8982612fe9565b855250506020928301920161307c565b600082601f8301126130ce576130ce600080fd5b813561078984826020860161304d565b60008060008060008060c087890312156130fa576130fa600080fd5b600061310689896128bf565b965050602061311789828a016128d0565b95505060408701356001600160401b0381111561313657613136600080fd5b61314289828a016130ba565b945050606061315389828a016128d0565b935050608061316489828a016128d0565b92505060a08701356001600160401b0381111561318357613183600080fd5b61318f89828a01612b99565b9150509295509295509295565b600080600080600080600060e0888a0312156131ba576131ba600080fd5b60006131c68a8a6128bf565b97505060206131d78a828b016128d0565b96505060408801356001600160401b038111156131f6576131f6600080fd5b6132028a828b016130ba565b95505060606132138a828b016128d0565b94505060806132248a828b016128d0565b93505060a08801356001600160401b0381111561324357613243600080fd5b61324f8a828b01612b99565b92505060c08801356001600160401b0381111561326e5761326e600080fd5b61327a8a828b01612b99565b91505092959891949750929550565b600061078d82612e45565b61294181613289565b6020810161078d8284613294565b60a081016132b9828861293f565b6132c66020830187612bf7565b6132d3604083018661293f565b6132e0606083018561293f565b6132ed608083018461293f565b9695505050505050565b805161078d81612e50565b60006020828403121561331757613317600080fd5b600061078984846132f7565b606081016133318286612bf7565b61333e6020830185612c3b565b6104eb604083018461293f565b805161078d816128ca565b60006020828403121561336b5761336b600080fd5b6000610789848461334b565b60208082527f5061757365723a2063616c6c6572206973206e6f742074686520706175736572910190815260005b5060200190565b6020808252810161078d81613377565b604081016133ca8285612bf7565b6106036020830184612c3b565b805161078d816128ab565b6000602082840312156133f7576133f7600080fd5b600061078984846133d7565b602d81526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f74206d657381526c39b0b3b2903932b1b2b4bb32b960991b602082015291505b5060400190565b6020808252810161078d81613403565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b815291506133a5565b6020808252810161078d81613460565b60c081016134a58289612bf7565b6134b2602083018861293f565b81810360408301526134c48187612cd9565b90506134d3606083018661293f565b6134e0608083018561293f565b611b1c60a083018461293f565b805161078d81612955565b6000613506612b6684612f47565b8381529050602080820190840283018581111561352557613525600080fd5b835b81811015612fbb578061353a888261334b565b84525060209283019201613527565b600082601f83011261355d5761355d600080fd5b81516107898482602086016134f8565b60006040828403121561358257613582600080fd5b61358c6040612b0b565b9050600061359a84846134ed565b82525060208201516001600160401b038111156135b9576135b9600080fd5b61304184828501613549565b60006135d3612b6684612f47565b838152905060208082019084028301858111156135f2576135f2600080fd5b835b81811015612fbb5780516001600160401b0381111561361557613615600080fd5b808601613622898261356d565b85525050602092830192016135f4565b600082601f83011261364657613646600080fd5b81516107898482602086016135c5565b6000613664612b6684612b22565b90508281526020810184848401111561367f5761367f600080fd5b612b91848285612d3f565b600082601f83011261369e5761369e600080fd5b8151610789848260208601613656565b60008060008060008060c087890312156136ca576136ca600080fd5b60006136d689896133d7565b96505060206136e789828a0161334b565b95505060408701516001600160401b0381111561370657613706600080fd5b61371289828a01613632565b945050606061372389828a0161334b565b935050608061373489828a0161334b565b92505060a08701516001600160401b0381111561375357613753600080fd5b61318f89828a0161368a565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260006133a5565b6020808252810161078d8161375f565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b60208201529150613449565b6020808252810161078d816137a1565b60408101612f3a8285613294565b8015156128b4565b805161078d8161380b565b60006020828403121561383357613833600080fd5b60006107898484613813565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b60208201529150613449565b6020808252810161078d8161383f565b6060810161389f8286613294565b61333e6020830185612bf7565b602581526000602082017f41646d696e577261707065723a2063616c6c6572206973206e6f74207468652081526430b236b4b760d91b60208201529150613449565b6020808252810161078d816138ac565b60ff8116612941565b6020810161078d82846138fe565b60408101612f3a8285612bf7565b603381526000602082017f447374436861696e5061796d656e743a20696e76616c696420706172616d7320815272199bdc88195e1c1a5c9959081858d8dbdd5b9d606a1b60208201529150613449565b6020808252810161078d81613923565b601f81526000602082017f447374436861696e5061796d656e743a20696e76616c696420706172616d7300815291506133a5565b6020808252810161078d81613983565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291506133a5565b6020808252810161078d816139c7565b60608101613a198286612bf7565b613a26602083018561293f565b81810360408301526106588184612d6b565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150613449565b6020808252810161078d81613a38565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b815291506133a5565b6020808252810161078d81613a8b565b602481526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e74206163638152631bdd5b9d60e21b60208201529150613449565b6020808252810161078d81613ac6565b601d81526000602082017f447374436861696e5061796d656e743a206e6f6e636520657869737473000000815291506133a5565b6020808252810161078d81613b17565b602281526000602082017f447374436861696e5061796d656e743a20696e76616c6964207369676e617475815261726560f01b60208201529150613449565b6020808252810161078d81613b5b565b634e487b7160e01b600052601160045260246000fd5b600082821015613bd257613bd2613baa565b500390565b60008219821115613bea57613bea613baa565b500190565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f7420706175736572000000815291506133a5565b6020808252810161078d81613bef565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150613449565b6020808252810161078d81613c33565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150613449565b6020808252810161078d81613c81565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150613449565b6020808252810161078d81613cdc565b6000816000190483118215151615613d4e57613d4e613baa565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613d7857613d78613d53565b500490565b6060810161389f8286612bf7565b80612941565b61190160f01b81526002016000613da88285613d8b565b602082019150613db88284613d8b565b5060200192915050565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b60208201529150613449565b6020808252810161078d81613dc2565b634e487b7160e01b600052603260045260246000fd5b603681526000602082016000805160206142b4833981519152815275656e67746820666f72204275696c64696e6754696d6560501b60208201529150613449565b6020808252810161078d81613e26565b60608101613e858286612bf7565b61333e602083018561293f565b603381526000602082016000805160206142b4833981519152815272656e67746820666f7220415253746f7261676560681b60208201529150613449565b6020808252810161078d81613e92565b603381526000602082016000805160206142b48339815191528152720cadccee8d040ccdee44084c2dcc8eed2c8e8d606b1b60208201529150613449565b6020808252810161078d81613ee0565b603581526000602082016000805160206142b4833981519152815274656e67746820666f72204950465353746f7261676560581b60208201529150613449565b6020808252810161078d81613f2e565b60808101613f8c8287612bf7565b613f99602083018661293f565b613fa6604083018561293f565b610658606083018461293f565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b60208201529150613449565b6020808252810161078d81613fb3565b600060001982141561401a5761401a613baa565b5060010190565b80825b60018511156140605780860481111561403f5761403f613baa565b600185161561404d57908102905b80026140598560011c90565b9450614024565b94509492505050565b60008261407857506001610603565b8161408557506000610603565b816001811461409b57600281146140a5576140d2565b6001915050610603565b60ff8411156140b6576140b6613baa565b8360020a9150848211156140cc576140cc613baa565b50610603565b5060208310610133831016604e8410600b8410161715614105575081810a8381111561410057614100613baa565b610603565b6141128484846001614021565b9250905081840481111561412857614128613baa565b0292915050565b60006106036000198484614069565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150613449565b6020808252810161078d8161413e565b60a081016141a3828861293f565b6141b0602083018761293f565b6141bd604083018661293f565b6141ca606083018561293f565b6132ed6080830184612bf7565b63313ce56760e01b815260006004820161078d565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e0000000000815291506133a5565b6020808252810161078d816141ec565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506133a5565b6020808252810161078d81614230565b600061427e825190565b61428c818560208601612d3f565b9290920192915050565b60006106038284614274565b602080825281016106038184612d6b56fe447374436861696e5061796d656e743a20696e76616c69642076616c7565206ca26469706673582212201509964bea561157b640414fd122982627eb68bdaad0171313c5d6d77cc2a02064736f6c63430008090033";
var DstChainPaymentV2Registration__factory = /** @class */ (function (_super) {
    __extends(DstChainPaymentV2Registration__factory, _super);
    function DstChainPaymentV2Registration__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    DstChainPaymentV2Registration__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    DstChainPaymentV2Registration__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    DstChainPaymentV2Registration__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DstChainPaymentV2Registration__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DstChainPaymentV2Registration__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DstChainPaymentV2Registration__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DstChainPaymentV2Registration__factory.bytecode = _bytecode;
    DstChainPaymentV2Registration__factory.abi = _abi;
    return DstChainPaymentV2Registration__factory;
}(ethers_1.ContractFactory));
exports.DstChainPaymentV2Registration__factory = DstChainPaymentV2Registration__factory;
