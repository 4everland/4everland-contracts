/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BuildingTimeController,
  BuildingTimeControllerInterface,
} from "../BuildingTimeController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AccountAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProviderAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "allocateProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "drip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "paymentAllocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "providerBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200010460201b6200052c1760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b8152600401620000829062000113565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000fd576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890620000f49060019062000189565b60405180910390a15b5062000199565b6001600160a01b03163b151590565b602080825281016200016681602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000166565b62000183816200016c565b82525050565b6020810162000166828462000178565b610db180620001a96000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461010f578063ce34d64f14610128578063da5001a514610151578063f2fde38b14610164578063f887ea401461017757600080fd5b80630de48287146100a3578063196e92e0146100b8578063485cc955146100cb5780634d30b6be146100de578063715018a614610107575b600080fd5b6100b66100b136600461083e565b61019d565b005b6100b66100c636600461088e565b610268565b6100b66100d93660046108ea565b610328565b6100f16100ec36600461088e565b610402565b6040516100fe9190610925565b60405180910390f35b6100b661042d565b6033546001600160a01b03166040516100fe919061093c565b6100f161013636600461094a565b6001600160a01b031660009081526065602052604090205490565b6100b661015f36600461083e565b610441565b6100b661017236600461094a565b6104f2565b600054610190906201000090046001600160a01b031681565b6040516100fe9190610987565b60008060029054906101000a90046001600160a01b03166001600160a01b031663ed1f63d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ec57600080fd5b505afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022491906109a0565b9050336001600160a01b038216146102575760405162461bcd60e51b815260040161024e90610a0f565b60405180910390fd5b61026284848461053b565b50505050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663945391126040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b757600080fd5b505afa1580156102cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ef91906109a0565b9050336001600160a01b038216146103195760405162461bcd60e51b815260040161024e90610a67565b6103238383610632565b505050565b600054610100900460ff16158080156103485750600054600160ff909116105b806103625750303b158015610362575060005460ff166001145b61037e5760405162461bcd60e51b815260040161024e90610ac2565b6000805460ff1916600117905580156103a1576000805461ff0019166101001790555b6103aa836106af565b6103b382610701565b8015610323576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906103f590600190610ae6565b60405180910390a1505050565b6001600160a01b03821660009081526066602090815260408083208484529091529020545b92915050565b610435610731565b61043f60006106af565b565b60008060029054906101000a90046001600160a01b03166001600160a01b031663a1c841ca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c891906109a0565b9050336001600160a01b038216146102575760405162461bcd60e51b815260040161024e90610b45565b6104fa610731565b6001600160a01b0381166105205760405162461bcd60e51b815260040161024e90610b98565b610529816106af565b50565b6001600160a01b03163b151590565b8061055b846001600160a01b031660009081526065602052604090205490565b10156105795760405162461bcd60e51b815260040161024e90610c02565b6001600160a01b03831660009081526066602090815260408083208584529091529020546105a7908261075b565b6001600160a01b0384166000818152606660209081526040808320878452825280832094909455918152606590915220546105e2908261076e565b6001600160a01b0384166000908152606560205260409081902091909155517f84f7b6e1bef5a2f139bd6f5f5263fb145907512577fd87ce95e9ed2af8e714f0906103f590859085908590610c12565b6001600160a01b038216600090815260656020526040902054610655908261075b565b6001600160a01b0383166000908152606560205260409081902091909155517f7827a9c29c2e1d4a1b9b63b8579fad78661282e2c40b184d23b08ce28d8a532a906106a39084908490610c3a565b60405180910390a15050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107285760405162461bcd60e51b815260040161024e90610c9d565b6105298161077a565b6033546001600160a01b0316331461043f5760405162461bcd60e51b815260040161024e90610ce2565b60006107678284610d08565b9392505050565b60006107678284610d20565b6001600160a01b0381166107a05760405162461bcd60e51b815260040161024e90610d6b565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80906107f2908390610987565b60405180910390a150565b60006001600160a01b038216610427565b610817816107fd565b811461052957600080fd5b80356104278161080e565b80610817565b80356104278161082d565b60008060006060848603121561085657610856600080fd5b60006108628686610822565b935050602061087386828701610833565b925050604061088486828701610833565b9150509250925092565b600080604083850312156108a4576108a4600080fd5b60006108b08585610822565b92505060206108c185828601610833565b9150509250929050565b6000610427826107fd565b610817816108cb565b8035610427816108d6565b6000806040838503121561090057610900600080fd5b600061090c8585610822565b92505060206108c1858286016108df565b805b82525050565b60208101610427828461091d565b61091f816107fd565b602081016104278284610933565b60006020828403121561095f5761095f600080fd5b600061096b8484610822565b949350505050565b6000610427826108cb565b61091f81610973565b60208101610427828461097e565b8051610427816108d6565b6000602082840312156109b5576109b5600080fd5b600061096b8484610995565b602e81526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742064737481526d0818da185a5b881c185e5b595b9d60921b602082015291505b5060400190565b60208082528101610427816109c1565b602b81526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526a20676f7665726e616e636560a81b60208201529150610a08565b6020808252810161042781610a1f565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150610a08565b6020808252810161042781610a77565b600060ff8216610427565b61091f81610ad2565b602081016104278284610add565b603481526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581527310383937bb34b232b91031b7b73a3937b63632b960611b60208201529150610a08565b6020808252810161042781610af4565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150610a08565b6020808252810161042781610b55565b603781526000602082017f4e6f726d616c5265736f75726365436f6e74726f6c6c65723a20696e7375666681527f696369656e742070726f76696465722062616c616e636500000000000000000060208201529150610a08565b6020808252810161042781610ba8565b60608101610c208286610933565b610c2d602083018561091d565b61096b604083018461091d565b60408101610c488285610933565b610767602083018461091d565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150610a08565b6020808252810161042781610c55565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161042781610cad565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1b57610d1b610cf2565b500190565b600082821015610d3257610d32610cf2565b500390565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150610cdb565b6020808252810161042781610d3756fea2646970667358221220238189d890c3f5014ed3861eac4f70b84d1c5bf1816976dc1fddf1cb6b1d8b2464736f6c63430008090033";

export class BuildingTimeController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BuildingTimeController> {
    return super.deploy(overrides || {}) as Promise<BuildingTimeController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BuildingTimeController {
    return super.attach(address) as BuildingTimeController;
  }
  connect(signer: Signer): BuildingTimeController__factory {
    return super.connect(signer) as BuildingTimeController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuildingTimeControllerInterface {
    return new utils.Interface(_abi) as BuildingTimeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuildingTimeController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BuildingTimeController;
  }
}
