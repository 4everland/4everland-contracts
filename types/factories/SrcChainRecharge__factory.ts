/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainRecharge,
  SrcChainRechargeInterface,
} from "../SrcChainRecharge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Recharge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRechargeMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "RechargeMessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IRechargeMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IRechargeMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "recharge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRechargeMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200010460201b620008851760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b8152600401620000829062000113565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000fd576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890620000f49060019062000189565b60405180910390a15b5062000199565b6001600160a01b03163b151590565b602080825281016200016681602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000166565b62000183816200016c565b82525050565b6020810162000166828462000178565b61180280620001a96000396000f3fe60806040526004361061012a5760003560e01c806382dc1ec4116100ab578063bc67f8321161006f578063bc67f83214610323578063d67bdd2514610343578063f2fde38b14610370578063f7073db214610390578063f8c8765e146103a3578063fc0c546a146103c357600080fd5b806382dc1ec41461027b5780638456cb591461029b5780638da5cb5b146102b057806393563a95146102d6578063a4e65e4e146102f657600080fd5b8063699256f4116100f2578063699256f4146101e15780636b2c0f55146102015780636ef8d66d14610221578063715018a61461023657806380f51c121461024b57600080fd5b8063144fa6d71461012f5780633f4ba83a1461015157806346fbf68e14610166578063599a45221461019c5780635c975abb146101c9575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610ec7565b6103e3565b005b34801561015d57600080fd5b5061014f6103f7565b34801561017257600080fd5b50610186610181366004610efc565b61042f565b6040516101939190610f27565b60405180910390f35b3480156101a857600080fd5b506101bc6101b7366004610f46565b61044d565b6040516101939190610f89565b3480156101d557600080fd5b5060975460ff16610186565b3480156101ed57600080fd5b5061014f6101fc366004610f46565b6104e0565b34801561020d57600080fd5b5061014f61021c366004610efc565b61056c565b34801561022d57600080fd5b5061014f61057d565b34801561024257600080fd5b5061014f610586565b34801561025757600080fd5b50610186610266366004610efc565b60c96020526000908152604090205460ff1681565b34801561028757600080fd5b5061014f610296366004610efc565b610598565b3480156102a757600080fd5b5061014f6105a9565b3480156102bc57600080fd5b506065546001600160a01b03166040516101939190610fa0565b3480156102e257600080fd5b5061014f6102f1366004610fae565b6105d6565b34801561030257600080fd5b50610316610311366004610f46565b610625565b604051610193919061105c565b34801561032f57600080fd5b5061014f61033e366004610ec7565b610651565b34801561034f57600080fd5b5060cb54610363906001600160a01b031681565b6040516101939190611081565b34801561037c57600080fd5b5061014f61038b366004610efc565b610662565b61014f61039e3660046110c1565b610699565b3480156103af57600080fd5b5061014f6103be366004611139565b610797565b3480156103cf57600080fd5b5060ca54610363906001600160a01b031681565b6103eb610894565b6103f4816108be565b50565b6104003361042f565b6104255760405162461bcd60e51b815260040161041c906111d2565b60405180910390fd5b61042d61093b565b565b6001600160a01b0316600090815260c9602052604090205460ff1690565b60cb546000906001600160a01b0316635335dca261046b8585610625565b6040518263ffffffff1660e01b8152600401610487919061105c565b60206040518083038186803b15801561049f57600080fd5b505afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d791906111ed565b90505b92915050565b6104e8610894565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061052e5760405162461bcd60e51b815260040161041c9061125d565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161055f92919061126d565b60405180910390a1505050565b610574610894565b6103f481610987565b61042d33610987565b61058e610894565b61042d60006109fc565b6105a0610894565b6103f481610a4e565b6105b23361042f565b6105ce5760405162461bcd60e51b815260040161041c906111d2565b61042d610ac7565b6105de610894565b6105f26001600160a01b0384168383610b04565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161055f93929190611288565b6060828260405160200161063a9291906112b0565b604051602081830303815290604052905092915050565b610659610894565b6103f481610b5f565b61066a610894565b6001600160a01b0381166106905760405162461bcd60e51b815260040161041c90611301565b6103f4816109fc565b6106a1610bd0565b6106a9610bf3565b60cb5460ca546106c8916001600160a01b039182169133911686610c1d565b60006106d48686610625565b60cb5460ca5460405163c66f16ff60e01b81529293506001600160a01b039182169263c66f16ff92349261071592911690899089908990899060040161132d565b6000604051808303818588803b15801561072e57600080fd5b505af1158015610742573d6000803e3d6000fd5b50505050507f833b0faa5a2004f42a8e5c3c83c2487ffd6c213da3d76274d40603fd91837b5b868686868660405161077e95949392919061137f565b60405180910390a15061079060018055565b5050505050565b600054610100900460ff16158080156107b75750600054600160ff909116105b806107d15750303b1580156107d1575060005460ff166001145b6107ed5760405162461bcd60e51b815260040161041c90611416565b6000805460ff191660011790558015610810576000805461ff0019166101001790555b610819856109fc565b61082284610c44565b61082b83610c6b565b61083482610c92565b8015610790576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906108769060019061143a565b60405180910390a15050505050565b6001600160a01b03163b151590565b6065546001600160a01b0316331461042d5760405162461bcd60e51b815260040161041c9061147a565b6001600160a01b0381166108e45760405162461bcd60e51b815260040161041c906114be565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e309161093091611081565b60405180910390a150565b610943610cb9565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161097d9190610fa0565b60405180910390a1565b6109908161042f565b6109ac5760405162461bcd60e51b815260040161041c90611502565b6001600160a01b038116600090815260c9602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610930908390610fa0565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a578161042f565b15610a745760405162461bcd60e51b815260040161041c90611550565b6001600160a01b038116600090815260c9602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610930908390610fa0565b610acf610bd0565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109703390565b610b5a8363a9059cbb60e01b8484604051602401610b239291906112b0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cdb565b505050565b6001600160a01b038116610b855760405162461bcd60e51b815260040161041c906114be565b60cb80546001600160a01b0319166001600160a01b0383161790556040517f076da4357573168a98c03c20e0cabcb42e5890747d8bdd6f8e26d58f0617c8ce90610930908390611081565b60975460ff161561042d5760405162461bcd60e51b815260040161041c90611587565b60026001541415610c165760405162461bcd60e51b815260040161041c906115cb565b6002600155565b610c3e846323b872dd60e01b858585604051602401610b23939291906115db565b50505050565b600054610100900460ff166105a05760405162461bcd60e51b815260040161041c90611631565b600054610100900460ff166106595760405162461bcd60e51b815260040161041c90611631565b600054610100900460ff166103eb5760405162461bcd60e51b815260040161041c90611631565b60975460ff1661042d5760405162461bcd60e51b815260040161041c9061166c565b6000610d30826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d6a9092919063ffffffff16565b805190915015610b5a5780806020019051810190610d4e919061168f565b610b5a5760405162461bcd60e51b815260040161041c906116f7565b6060610d798484600085610d83565b90505b9392505050565b606082471015610da55760405162461bcd60e51b815260040161041c9061174a565b600080866001600160a01b03168587604051610dc1919061177c565b60006040518083038185875af1925050503d8060008114610dfe576040519150601f19603f3d011682016040523d82523d6000602084013e610e03565b606091505b5091509150610e1487838387610e21565b925050505b949350505050565b60608315610e5d578251610e56576001600160a01b0385163b610e565760405162461bcd60e51b815260040161041c906117bc565b5081610e19565b610e198383815115610e725781518083602001fd5b8060405162461bcd60e51b815260040161041c919061105c565b60006001600160a01b0382166104da565b60006104da82610e8c565b610eb181610e9d565b81146103f457600080fd5b80356104da81610ea8565b600060208284031215610edc57610edc600080fd5b6000610e198484610ebc565b610eb181610e8c565b80356104da81610ee8565b600060208284031215610f1157610f11600080fd5b6000610e198484610ef1565b8015155b82525050565b602081016104da8284610f1d565b80610eb1565b80356104da81610f35565b60008060408385031215610f5c57610f5c600080fd5b6000610f688585610ef1565b9250506020610f7985828601610f3b565b9150509250929050565b80610f21565b602081016104da8284610f83565b610f2181610e8c565b602081016104da8284610f97565b600080600060608486031215610fc657610fc6600080fd5b6000610fd28686610ebc565b9350506020610fe386828701610ef1565b9250506040610ff486828701610f3b565b9150509250925092565b60005b83811015611019578181015183820152602001611001565b83811115610c3e5750506000910152565b6000611034825190565b80845260208401935061104b818560208601610ffe565b601f01601f19169290920192915050565b602080825281016104d7818461102a565b60006104da82610e9d565b610f218161106d565b602081016104da8284611078565b67ffffffffffffffff8116610eb1565b80356104da8161108f565b63ffffffff8116610eb1565b80356104da816110aa565b600080600080600060a086880312156110dc576110dc600080fd5b60006110e88888610ef1565b95505060206110f988828901610f3b565b945050604061110a88828901610f3b565b935050606061111b8882890161109f565b925050608061112c888289016110b6565b9150509295509295909350565b6000806000806080858703121561115257611152600080fd5b600061115e8787610ef1565b945050602061116f87828801610ef1565b935050604061118087828801610ebc565b925050606061119187828801610ebc565b91505092959194509250565b60208082527f5061757365723a2063616c6c6572206973206e6f742074686520706175736572910190815260005b5060200190565b602080825281016104da8161119d565b80516104da81610f35565b60006020828403121561120257611202600080fd5b6000610e1984846111e2565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b602082015291505b5060400190565b602080825281016104da8161120e565b6040810161127b8285611078565b610d7c6020830184610f83565b606081016112968286611078565b6112a36020830185610f97565b610e196040830184610f83565b6040810161127b8285610f97565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611256565b602080825281016104da816112be565b67ffffffffffffffff8116610f21565b63ffffffff8116610f21565b60a0810161133b8288611078565b6113486020830187610f83565b6113556040830186611311565b6113626060830185611321565b8181036080830152611374818461102a565b979650505050505050565b60a0810161138d8288610f97565b61139a6020830187610f83565b6113a76040830186610f83565b6113b46060830185611311565b6113c16080830184611321565b9695505050505050565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611256565b602080825281016104da816113cb565b600060ff82166104da565b610f2181611426565b602081016104da8284611431565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260006111cb565b602080825281016104da81611448565b601e81526000602082017f537263436861696e52656368617267653a207a65726f20616464726573730000815291506111cb565b602080825281016104da8161148a565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f7420706175736572000000815291506111cb565b602080825281016104da816114ce565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611256565b602080825281016104da81611512565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b815291506111cb565b602080825281016104da81611560565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291506111cb565b602080825281016104da81611597565b606081016112968286610f97565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611256565b602080825281016104da816115e9565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b815291506111cb565b602080825281016104da81611641565b801515610eb1565b80516104da8161167c565b6000602082840312156116a4576116a4600080fd5b6000610e198484611684565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611256565b602080825281016104da816116b0565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611256565b602080825281016104da81611707565b6000611764825190565b611772818560208601610ffe565b9290920192915050565b6000610d7c828461175a565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506111cb565b602080825281016104da8161178856fea264697066735822122034b8957935bd2193f5ca86a66e189fc812e8fc869519ca5dd0288a54ccf767de64736f6c63430008090033";

export class SrcChainRecharge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainRecharge> {
    return super.deploy(overrides || {}) as Promise<SrcChainRecharge>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainRecharge {
    return super.attach(address) as SrcChainRecharge;
  }
  connect(signer: Signer): SrcChainRecharge__factory {
    return super.connect(signer) as SrcChainRecharge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainRechargeInterface {
    return new utils.Interface(_abi) as SrcChainRechargeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainRecharge {
    return new Contract(address, _abi, signerOrProvider) as SrcChainRecharge;
  }
}
